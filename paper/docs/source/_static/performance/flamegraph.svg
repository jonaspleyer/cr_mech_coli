<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="65570715068"><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::get_current_force_and_reset (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="485" width="0.0375%" height="15" fill="rgb(227,0,7)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="495.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::get_current_force_and_reset (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="469" width="0.0375%" height="15" fill="rgb(217,0,24)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="453" width="0.0375%" height="15" fill="rgb(221,193,54)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="463.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="437" width="0.0375%" height="15" fill="rgb(248,212,6)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="421" width="0.0375%" height="15" fill="rgb(208,68,35)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="405" width="0.0375%" height="15" fill="rgb(232,128,0)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="389" width="0.0375%" height="15" fill="rgb(207,160,47)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,614,452 samples, 0.04%)</title><rect x="0.0264%" y="373" width="0.0375%" height="15" fill="rgb(228,23,34)" fg:x="17310087" fg:w="24614452"/><text x="0.2764%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24,427,172 samples, 0.04%)</title><rect x="0.0267%" y="357" width="0.0373%" height="15" fill="rgb(218,30,26)" fg:x="17497367" fg:w="24427172"/><text x="0.2767%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,427,172 samples, 0.04%)</title><rect x="0.0267%" y="341" width="0.0373%" height="15" fill="rgb(220,122,19)" fg:x="17497367" fg:w="24427172"/><text x="0.2767%" y="351.50"></text></g><g><title>[libc.so.6] (24,427,172 samples, 0.04%)</title><rect x="0.0267%" y="325" width="0.0373%" height="15" fill="rgb(250,228,42)" fg:x="17497367" fg:w="24427172"/><text x="0.2767%" y="335.50"></text></g><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::set_last_velocity (12,826,731 samples, 0.02%)</title><rect x="0.0702%" y="485" width="0.0196%" height="15" fill="rgb(240,193,28)" fg:x="46027448" fg:w="12826731"/><text x="0.3202%" y="495.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::set_last_velocity (12,826,731 samples, 0.02%)</title><rect x="0.0702%" y="469" width="0.0196%" height="15" fill="rgb(216,20,37)" fg:x="46027448" fg:w="12826731"/><text x="0.3202%" y="479.50"></text></g><g><title>circ_buffer::RingBuffer&lt;T,_&gt;::push (12,826,731 samples, 0.02%)</title><rect x="0.0702%" y="453" width="0.0196%" height="15" fill="rgb(206,188,39)" fg:x="46027448" fg:w="12826731"/><text x="0.3202%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="437" width="0.0134%" height="15" fill="rgb(217,207,13)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="421" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="405" width="0.0134%" height="15" fill="rgb(225,20,46)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="389" width="0.0134%" height="15" fill="rgb(210,31,41)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="373" width="0.0134%" height="15" fill="rgb(221,200,47)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="357" width="0.0134%" height="15" fill="rgb(226,26,5)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="341" width="0.0134%" height="15" fill="rgb(249,33,26)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="325" width="0.0134%" height="15" fill="rgb(235,183,28)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="309" width="0.0134%" height="15" fill="rgb(221,5,38)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="319.50"></text></g><g><title>cfree (8,768,128 samples, 0.01%)</title><rect x="0.0764%" y="293" width="0.0134%" height="15" fill="rgb(247,18,42)" fg:x="50086051" fg:w="8768128"/><text x="0.3264%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="389" width="0.1373%" height="15" fill="rgb(241,131,45)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="373" width="0.1373%" height="15" fill="rgb(249,31,29)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="357" width="0.1373%" height="15" fill="rgb(225,111,53)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="341" width="0.1373%" height="15" fill="rgb(238,160,17)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="325" width="0.1373%" height="15" fill="rgb(214,148,48)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="309" width="0.1373%" height="15" fill="rgb(232,36,49)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="319.50"></text></g><g><title>alloc::alloc::alloc (90,000,591 samples, 0.14%)</title><rect x="0.0898%" y="293" width="0.1373%" height="15" fill="rgb(209,103,24)" fg:x="58854179" fg:w="90000591"/><text x="0.3398%" y="303.50"></text></g><g><title>malloc (85,948,028 samples, 0.13%)</title><rect x="0.0959%" y="277" width="0.1311%" height="15" fill="rgb(229,88,8)" fg:x="62906742" fg:w="85948028"/><text x="0.3459%" y="287.50"></text></g><g><title>[libc.so.6] (61,811,311 samples, 0.09%)</title><rect x="0.1327%" y="261" width="0.0943%" height="15" fill="rgb(213,181,19)" fg:x="87043459" fg:w="61811311"/><text x="0.3827%" y="271.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="485" width="0.1897%" height="15" fill="rgb(254,191,54)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="495.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="469" width="0.1897%" height="15" fill="rgb(241,83,37)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="453" width="0.1897%" height="15" fill="rgb(233,36,39)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="437" width="0.1897%" height="15" fill="rgb(226,3,54)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="421" width="0.1897%" height="15" fill="rgb(245,192,40)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (124,367,646 samples, 0.19%)</title><rect x="0.0898%" y="405" width="0.1897%" height="15" fill="rgb(238,167,29)" fg:x="58854179" fg:w="124367646"/><text x="0.3398%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34,367,055 samples, 0.05%)</title><rect x="0.2270%" y="389" width="0.0524%" height="15" fill="rgb(232,182,51)" fg:x="148854770" fg:w="34367055"/><text x="0.4770%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34,367,055 samples, 0.05%)</title><rect x="0.2270%" y="373" width="0.0524%" height="15" fill="rgb(231,60,39)" fg:x="148854770" fg:w="34367055"/><text x="0.4770%" y="383.50"></text></g><g><title>[libc.so.6] (34,367,055 samples, 0.05%)</title><rect x="0.2270%" y="357" width="0.0524%" height="15" fill="rgb(208,69,12)" fg:x="148854770" fg:w="34367055"/><text x="0.4770%" y="367.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xa (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="469" width="0.0373%" height="15" fill="rgb(235,93,37)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="479.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="453" width="0.0373%" height="15" fill="rgb(213,116,39)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="463.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="437" width="0.0373%" height="15" fill="rgb(222,207,29)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="447.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="421" width="0.0373%" height="15" fill="rgb(206,96,30)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="431.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="405" width="0.0373%" height="15" fill="rgb(218,138,4)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="389" width="0.0373%" height="15" fill="rgb(250,191,14)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="373" width="0.0373%" height="15" fill="rgb(239,60,40)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="357" width="0.0373%" height="15" fill="rgb(206,27,48)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24,447,621 samples, 0.04%)</title><rect x="0.3191%" y="341" width="0.0373%" height="15" fill="rgb(225,35,8)" fg:x="209210586" fg:w="24447621"/><text x="0.5691%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20,356,129 samples, 0.03%)</title><rect x="0.3253%" y="325" width="0.0310%" height="15" fill="rgb(250,213,24)" fg:x="213302078" fg:w="20356129"/><text x="0.5753%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,356,129 samples, 0.03%)</title><rect x="0.3253%" y="309" width="0.0310%" height="15" fill="rgb(247,123,22)" fg:x="213302078" fg:w="20356129"/><text x="0.5753%" y="319.50"></text></g><g><title>[libc.so.6] (20,356,129 samples, 0.03%)</title><rect x="0.3253%" y="293" width="0.0310%" height="15" fill="rgb(231,138,38)" fg:x="213302078" fg:w="20356129"/><text x="0.5753%" y="303.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (8,201,424 samples, 0.01%)</title><rect x="0.3563%" y="453" width="0.0125%" height="15" fill="rgb(231,145,46)" fg:x="233658207" fg:w="8201424"/><text x="0.6063%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (8,201,424 samples, 0.01%)</title><rect x="0.3563%" y="437" width="0.0125%" height="15" fill="rgb(251,118,11)" fg:x="233658207" fg:w="8201424"/><text x="0.6063%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32,671,908 samples, 0.05%)</title><rect x="0.3751%" y="261" width="0.0498%" height="15" fill="rgb(217,147,25)" fg:x="245952998" fg:w="32671908"/><text x="0.6251%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32,671,908 samples, 0.05%)</title><rect x="0.3751%" y="245" width="0.0498%" height="15" fill="rgb(247,81,37)" fg:x="245952998" fg:w="32671908"/><text x="0.6251%" y="255.50"></text></g><g><title>alloc::alloc::alloc (32,671,908 samples, 0.05%)</title><rect x="0.3751%" y="229" width="0.0498%" height="15" fill="rgb(209,12,38)" fg:x="245952998" fg:w="32671908"/><text x="0.6251%" y="239.50"></text></g><g><title>malloc (32,671,908 samples, 0.05%)</title><rect x="0.3751%" y="213" width="0.0498%" height="15" fill="rgb(227,1,9)" fg:x="245952998" fg:w="32671908"/><text x="0.6251%" y="223.50"></text></g><g><title>[libc.so.6] (24,457,553 samples, 0.04%)</title><rect x="0.3876%" y="197" width="0.0373%" height="15" fill="rgb(248,47,43)" fg:x="254167353" fg:w="24457553"/><text x="0.6376%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40,836,229 samples, 0.06%)</title><rect x="0.3689%" y="325" width="0.0623%" height="15" fill="rgb(221,10,30)" fg:x="241859631" fg:w="40836229"/><text x="0.6189%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40,836,229 samples, 0.06%)</title><rect x="0.3689%" y="309" width="0.0623%" height="15" fill="rgb(210,229,1)" fg:x="241859631" fg:w="40836229"/><text x="0.6189%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (40,836,229 samples, 0.06%)</title><rect x="0.3689%" y="293" width="0.0623%" height="15" fill="rgb(222,148,37)" fg:x="241859631" fg:w="40836229"/><text x="0.6189%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (40,836,229 samples, 0.06%)</title><rect x="0.3689%" y="277" width="0.0623%" height="15" fill="rgb(234,67,33)" fg:x="241859631" fg:w="40836229"/><text x="0.6189%" y="287.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="437" width="0.0995%" height="15" fill="rgb(247,98,35)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="447.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="421" width="0.0995%" height="15" fill="rgb(247,138,52)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="431.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="405" width="0.0995%" height="15" fill="rgb(213,79,30)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="389" width="0.0995%" height="15" fill="rgb(246,177,23)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="373" width="0.0995%" height="15" fill="rgb(230,62,27)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="357" width="0.0995%" height="15" fill="rgb(216,154,8)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65,240,235 samples, 0.10%)</title><rect x="0.3689%" y="341" width="0.0995%" height="15" fill="rgb(244,35,45)" fg:x="241859631" fg:w="65240235"/><text x="0.6189%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24,404,006 samples, 0.04%)</title><rect x="0.4311%" y="325" width="0.0372%" height="15" fill="rgb(251,115,12)" fg:x="282695860" fg:w="24404006"/><text x="0.6811%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,404,006 samples, 0.04%)</title><rect x="0.4311%" y="309" width="0.0372%" height="15" fill="rgb(240,54,50)" fg:x="282695860" fg:w="24404006"/><text x="0.6811%" y="319.50"></text></g><g><title>[libc.so.6] (24,404,006 samples, 0.04%)</title><rect x="0.4311%" y="293" width="0.0372%" height="15" fill="rgb(233,84,52)" fg:x="282695860" fg:w="24404006"/><text x="0.6811%" y="303.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xapy (81,624,621 samples, 0.12%)</title><rect x="0.3563%" y="469" width="0.1245%" height="15" fill="rgb(207,117,47)" fg:x="233658207" fg:w="81624621"/><text x="0.6063%" y="479.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (73,423,197 samples, 0.11%)</title><rect x="0.3689%" y="453" width="0.1120%" height="15" fill="rgb(249,43,39)" fg:x="241859631" fg:w="73423197"/><text x="0.6189%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (8,182,962 samples, 0.01%)</title><rect x="0.4683%" y="437" width="0.0125%" height="15" fill="rgb(209,38,44)" fg:x="307099866" fg:w="8182962"/><text x="0.7183%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (8,182,962 samples, 0.01%)</title><rect x="0.4683%" y="421" width="0.0125%" height="15" fill="rgb(236,212,23)" fg:x="307099866" fg:w="8182962"/><text x="0.7183%" y="431.50"></text></g><g><title>cellular_raza_core::backend::chili::solvers::adams_bashforth_3 (225,297,701 samples, 0.34%)</title><rect x="0.2821%" y="485" width="0.3436%" height="15" fill="rgb(242,79,21)" fg:x="184962527" fg:w="225297701"/><text x="0.5321%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="469" width="0.1448%" height="15" fill="rgb(211,96,35)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="453" width="0.1448%" height="15" fill="rgb(253,215,40)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="437" width="0.1448%" height="15" fill="rgb(211,81,21)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="421" width="0.1448%" height="15" fill="rgb(208,190,38)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="405" width="0.1448%" height="15" fill="rgb(235,213,38)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="389" width="0.1448%" height="15" fill="rgb(237,122,38)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="373" width="0.1448%" height="15" fill="rgb(244,218,35)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (94,977,400 samples, 0.14%)</title><rect x="0.4808%" y="357" width="0.1448%" height="15" fill="rgb(240,68,47)" fg:x="315282828" fg:w="94977400"/><text x="0.7308%" y="367.50"></text></g><g><title>cfree (86,806,728 samples, 0.13%)</title><rect x="0.4933%" y="341" width="0.1324%" height="15" fill="rgb(210,16,53)" fg:x="323453500" fg:w="86806728"/><text x="0.7433%" y="351.50"></text></g><g><title>[libc.so.6] (29,883,367 samples, 0.05%)</title><rect x="0.5801%" y="325" width="0.0456%" height="15" fill="rgb(235,124,12)" fg:x="380376861" fg:w="29883367"/><text x="0.8301%" y="335.50"></text></g><g><title>cfree (19,351,788 samples, 0.03%)</title><rect x="0.6257%" y="485" width="0.0295%" height="15" fill="rgb(224,169,11)" fg:x="410260228" fg:w="19351788"/><text x="0.8757%" y="495.50"></text></g><g><title>[libc.so.6] (15,304,257 samples, 0.02%)</title><rect x="0.6318%" y="469" width="0.0233%" height="15" fill="rgb(250,166,2)" fg:x="414307759" fg:w="15304257"/><text x="0.8818%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="485" width="0.0250%" height="15" fill="rgb(242,216,29)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="469" width="0.0250%" height="15" fill="rgb(230,116,27)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="453" width="0.0250%" height="15" fill="rgb(228,99,48)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="437" width="0.0250%" height="15" fill="rgb(253,11,6)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="421" width="0.0250%" height="15" fill="rgb(247,143,39)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="405" width="0.0250%" height="15" fill="rgb(236,97,10)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="389" width="0.0250%" height="15" fill="rgb(233,208,19)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="373" width="0.0250%" height="15" fill="rgb(216,164,2)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="383.50"></text></g><g><title>cfree (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="357" width="0.0250%" height="15" fill="rgb(220,129,5)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="367.50"></text></g><g><title>[libc.so.6] (16,401,240 samples, 0.03%)</title><rect x="0.6552%" y="341" width="0.0250%" height="15" fill="rgb(242,17,10)" fg:x="429612016" fg:w="16401240"/><text x="0.9052%" y="351.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="453" width="0.0125%" height="15" fill="rgb(242,107,0)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="463.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="437" width="0.0125%" height="15" fill="rgb(251,28,31)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="421" width="0.0125%" height="15" fill="rgb(233,223,10)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="405" width="0.0125%" height="15" fill="rgb(215,21,27)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="389" width="0.0125%" height="15" fill="rgb(232,23,21)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,182,509 samples, 0.01%)</title><rect x="0.6802%" y="373" width="0.0125%" height="15" fill="rgb(244,5,23)" fg:x="446013256" fg:w="8182509"/><text x="0.9302%" y="383.50"></text></g><g><title>&lt;f32 as num_traits::float::Float&gt;::tan (77,856,790 samples, 0.12%)</title><rect x="0.7050%" y="357" width="0.1187%" height="15" fill="rgb(226,81,46)" fg:x="462242590" fg:w="77856790"/><text x="0.9550%" y="367.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::tan (77,856,790 samples, 0.12%)</title><rect x="0.7050%" y="341" width="0.1187%" height="15" fill="rgb(247,70,30)" fg:x="462242590" fg:w="77856790"/><text x="0.9550%" y="351.50"></text></g><g><title>tanf32 (77,856,790 samples, 0.12%)</title><rect x="0.7050%" y="325" width="0.1187%" height="15" fill="rgb(212,68,19)" fg:x="462242590" fg:w="77856790"/><text x="0.9550%" y="335.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_acos (20,859,186 samples, 0.03%)</title><rect x="0.8237%" y="341" width="0.0318%" height="15" fill="rgb(240,187,13)" fg:x="540099380" fg:w="20859186"/><text x="1.0737%" y="351.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::acos (20,859,186 samples, 0.03%)</title><rect x="0.8237%" y="325" width="0.0318%" height="15" fill="rgb(223,113,26)" fg:x="540099380" fg:w="20859186"/><text x="1.0737%" y="335.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::acos (20,859,186 samples, 0.03%)</title><rect x="0.8237%" y="309" width="0.0318%" height="15" fill="rgb(206,192,2)" fg:x="540099380" fg:w="20859186"/><text x="1.0737%" y="319.50"></text></g><g><title>__acosf_finite (20,859,186 samples, 0.03%)</title><rect x="0.8237%" y="293" width="0.0318%" height="15" fill="rgb(241,108,4)" fg:x="540099380" fg:w="20859186"/><text x="1.0737%" y="303.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::angle (33,092,990 samples, 0.05%)</title><rect x="0.8237%" y="357" width="0.0505%" height="15" fill="rgb(247,173,49)" fg:x="540099380" fg:w="33092990"/><text x="1.0737%" y="367.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (8,193,060 samples, 0.01%)</title><rect x="0.8617%" y="341" width="0.0125%" height="15" fill="rgb(224,114,35)" fg:x="564999310" fg:w="8193060"/><text x="1.1117%" y="351.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (8,193,060 samples, 0.01%)</title><rect x="0.8617%" y="325" width="0.0125%" height="15" fill="rgb(245,159,27)" fg:x="564999310" fg:w="8193060"/><text x="1.1117%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (8,193,060 samples, 0.01%)</title><rect x="0.8617%" y="309" width="0.0125%" height="15" fill="rgb(245,172,44)" fg:x="564999310" fg:w="8193060"/><text x="1.1117%" y="319.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_mut (8,137,142 samples, 0.01%)</title><rect x="0.8742%" y="357" width="0.0124%" height="15" fill="rgb(236,23,11)" fg:x="573192370" fg:w="8137142"/><text x="1.1242%" y="367.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows_mut (8,137,142 samples, 0.01%)</title><rect x="0.8742%" y="341" width="0.0124%" height="15" fill="rgb(205,117,38)" fg:x="573192370" fg:w="8137142"/><text x="1.1242%" y="351.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic_mut (8,137,142 samples, 0.01%)</title><rect x="0.8742%" y="325" width="0.0124%" height="15" fill="rgb(237,72,25)" fg:x="573192370" fg:w="8137142"/><text x="1.1242%" y="335.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (25,064,381 samples, 0.04%)</title><rect x="0.8866%" y="309" width="0.0382%" height="15" fill="rgb(244,70,9)" fg:x="581329512" fg:w="25064381"/><text x="1.1366%" y="319.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (29,534,016 samples, 0.05%)</title><rect x="0.8866%" y="357" width="0.0450%" height="15" fill="rgb(217,125,39)" fg:x="581329512" fg:w="29534016"/><text x="1.1366%" y="367.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (29,534,016 samples, 0.05%)</title><rect x="0.8866%" y="341" width="0.0450%" height="15" fill="rgb(235,36,10)" fg:x="581329512" fg:w="29534016"/><text x="1.1366%" y="351.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (29,534,016 samples, 0.05%)</title><rect x="0.8866%" y="325" width="0.0450%" height="15" fill="rgb(251,123,47)" fg:x="581329512" fg:w="29534016"/><text x="1.1366%" y="335.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (8,159,991 samples, 0.01%)</title><rect x="0.9316%" y="357" width="0.0124%" height="15" fill="rgb(221,13,13)" fg:x="610863528" fg:w="8159991"/><text x="1.1816%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (8,159,991 samples, 0.01%)</title><rect x="0.9316%" y="341" width="0.0124%" height="15" fill="rgb(238,131,9)" fg:x="610863528" fg:w="8159991"/><text x="1.1816%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (164,922,365 samples, 0.25%)</title><rect x="0.6988%" y="405" width="0.2515%" height="15" fill="rgb(211,50,8)" fg:x="458188325" fg:w="164922365"/><text x="0.9488%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (164,922,365 samples, 0.25%)</title><rect x="0.6988%" y="389" width="0.2515%" height="15" fill="rgb(245,182,24)" fg:x="458188325" fg:w="164922365"/><text x="0.9488%" y="399.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Mechanics&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,F&gt;&gt;::calculate_increment::_{{closure}} (164,922,365 samples, 0.25%)</title><rect x="0.6988%" y="373" width="0.2515%" height="15" fill="rgb(242,14,37)" fg:x="458188325" fg:w="164922365"/><text x="0.9488%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172,984,748 samples, 0.26%)</title><rect x="0.6927%" y="453" width="0.2638%" height="15" fill="rgb(246,228,12)" fg:x="454195765" fg:w="172984748"/><text x="0.9427%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172,984,748 samples, 0.26%)</title><rect x="0.6927%" y="437" width="0.2638%" height="15" fill="rgb(213,55,15)" fg:x="454195765" fg:w="172984748"/><text x="0.9427%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172,984,748 samples, 0.26%)</title><rect x="0.6927%" y="421" width="0.2638%" height="15" fill="rgb(209,9,3)" fg:x="454195765" fg:w="172984748"/><text x="0.9427%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,155,835 samples, 0.01%)</title><rect x="0.9569%" y="245" width="0.0124%" height="15" fill="rgb(230,59,30)" fg:x="627430575" fg:w="8155835"/><text x="1.2069%" y="255.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,155,835 samples, 0.01%)</title><rect x="0.9569%" y="229" width="0.0124%" height="15" fill="rgb(209,121,21)" fg:x="627430575" fg:w="8155835"/><text x="1.2069%" y="239.50"></text></g><g><title>&lt;nalgebra::base::iter::RawIter&lt;*const T,T,R,C,RStride,CStride&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,155,835 samples, 0.01%)</title><rect x="0.9569%" y="213" width="0.0124%" height="15" fill="rgb(220,109,13)" fg:x="627430575" fg:w="8155835"/><text x="1.2069%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16,272,873 samples, 0.02%)</title><rect x="0.9569%" y="277" width="0.0248%" height="15" fill="rgb(232,18,1)" fg:x="627430575" fg:w="16272873"/><text x="1.2069%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16,272,873 samples, 0.02%)</title><rect x="0.9569%" y="261" width="0.0248%" height="15" fill="rgb(215,41,42)" fg:x="627430575" fg:w="16272873"/><text x="1.2069%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (8,117,038 samples, 0.01%)</title><rect x="0.9693%" y="245" width="0.0124%" height="15" fill="rgb(224,123,36)" fg:x="635586410" fg:w="8117038"/><text x="1.2193%" y="255.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="421" width="0.0310%" height="15" fill="rgb(240,125,3)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="431.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="405" width="0.0310%" height="15" fill="rgb(205,98,50)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="415.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::into_owned (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="389" width="0.0310%" height="15" fill="rgb(205,185,37)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="399.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="373" width="0.0310%" height="15" fill="rgb(238,207,15)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="383.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="357" width="0.0310%" height="15" fill="rgb(213,199,42)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="341" width="0.0310%" height="15" fill="rgb(235,201,11)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="325" width="0.0310%" height="15" fill="rgb(207,46,11)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="309" width="0.0310%" height="15" fill="rgb(241,35,35)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20,342,875 samples, 0.03%)</title><rect x="0.9569%" y="293" width="0.0310%" height="15" fill="rgb(243,32,47)" fg:x="627430575" fg:w="20342875"/><text x="1.2069%" y="303.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (24,440,314 samples, 0.04%)</title><rect x="0.9569%" y="453" width="0.0373%" height="15" fill="rgb(247,202,23)" fg:x="627430575" fg:w="24440314"/><text x="1.2069%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (24,440,314 samples, 0.04%)</title><rect x="0.9569%" y="437" width="0.0373%" height="15" fill="rgb(219,102,11)" fg:x="627430575" fg:w="24440314"/><text x="1.2069%" y="447.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Mechanics&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Float&gt; for cr_mech_coli::agent::RodAgent&gt;::calculate_increment (209,925,097 samples, 0.32%)</title><rect x="0.6802%" y="485" width="0.3202%" height="15" fill="rgb(243,110,44)" fg:x="446013256" fg:w="209925097"/><text x="0.9302%" y="495.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Mechanics&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,F&gt;&gt;::calculate_increment (209,925,097 samples, 0.32%)</title><rect x="0.6802%" y="469" width="0.3202%" height="15" fill="rgb(222,74,54)" fg:x="446013256" fg:w="209925097"/><text x="0.9302%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,299,625 samples, 0.02%)</title><rect x="1.0066%" y="405" width="0.0188%" height="15" fill="rgb(216,99,12)" fg:x="660051320" fg:w="12299625"/><text x="1.2566%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,299,625 samples, 0.02%)</title><rect x="1.0066%" y="389" width="0.0188%" height="15" fill="rgb(226,22,26)" fg:x="660051320" fg:w="12299625"/><text x="1.2566%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12,299,625 samples, 0.02%)</title><rect x="1.0066%" y="373" width="0.0188%" height="15" fill="rgb(217,163,10)" fg:x="660051320" fg:w="12299625"/><text x="1.2566%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12,299,625 samples, 0.02%)</title><rect x="1.0066%" y="357" width="0.0188%" height="15" fill="rgb(213,25,53)" fg:x="660051320" fg:w="12299625"/><text x="1.2566%" y="367.50"></text></g><g><title>&lt;rand_distr::normal::StandardNormal as rand::distr::distribution::Distribution&lt;f32&gt;&gt;::sample (16,349,027 samples, 0.02%)</title><rect x="1.0604%" y="357" width="0.0249%" height="15" fill="rgb(252,105,26)" fg:x="695339767" fg:w="16349027"/><text x="1.3104%" y="367.50"></text></g><g><title>rand::rng::Rng::sample (39,337,867 samples, 0.06%)</title><rect x="1.0254%" y="373" width="0.0600%" height="15" fill="rgb(220,39,43)" fg:x="672350945" fg:w="39337867"/><text x="1.2754%" y="383.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_distribution (72,517,696 samples, 0.11%)</title><rect x="1.0004%" y="453" width="0.1106%" height="15" fill="rgb(229,68,48)" fg:x="655938353" fg:w="72517696"/><text x="1.2504%" y="463.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_distribution_generic (72,517,696 samples, 0.11%)</title><rect x="1.0004%" y="437" width="0.1106%" height="15" fill="rgb(252,8,32)" fg:x="655938353" fg:w="72517696"/><text x="1.2504%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_fn_generic (72,517,696 samples, 0.11%)</title><rect x="1.0004%" y="421" width="0.1106%" height="15" fill="rgb(223,20,43)" fg:x="655938353" fg:w="72517696"/><text x="1.2504%" y="431.50"></text></g><g><title>nalgebra::base::construction::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_distribution_generic::_{{closure}} (56,105,104 samples, 0.09%)</title><rect x="1.0254%" y="405" width="0.0856%" height="15" fill="rgb(229,81,49)" fg:x="672350945" fg:w="56105104"/><text x="1.2754%" y="415.50"></text></g><g><title>&lt;rand_distr::normal::Normal&lt;F&gt; as rand::distr::distribution::Distribution&lt;F&gt;&gt;::sample (56,105,104 samples, 0.09%)</title><rect x="1.0254%" y="389" width="0.0856%" height="15" fill="rgb(236,28,36)" fg:x="672350945" fg:w="56105104"/><text x="1.2754%" y="399.50"></text></g><g><title>rand_distr::normal::Normal&lt;F&gt;::from_zscore (16,767,237 samples, 0.03%)</title><rect x="1.0854%" y="373" width="0.0256%" height="15" fill="rgb(249,185,26)" fg:x="711688812" fg:w="16767237"/><text x="1.3354%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (16,767,237 samples, 0.03%)</title><rect x="1.0854%" y="357" width="0.0256%" height="15" fill="rgb(249,174,33)" fg:x="711688812" fg:w="16767237"/><text x="1.3354%" y="367.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Mechanics&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Float&gt; for cr_mech_coli::agent::RodAgent&gt;::get_random_contribution (76,591,753 samples, 0.12%)</title><rect x="1.0004%" y="485" width="0.1168%" height="15" fill="rgb(233,201,37)" fg:x="655938353" fg:w="76591753"/><text x="1.2504%" y="495.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Mechanics&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,F&gt;&gt;::get_random_contribution (76,591,753 samples, 0.12%)</title><rect x="1.0004%" y="469" width="0.1168%" height="15" fill="rgb(221,78,26)" fg:x="655938353" fg:w="76591753"/><text x="1.2504%" y="479.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="485" width="0.0206%" height="15" fill="rgb(250,127,30)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="495.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="469" width="0.0206%" height="15" fill="rgb(230,49,44)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="453" width="0.0206%" height="15" fill="rgb(229,67,23)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="463.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="437" width="0.0206%" height="15" fill="rgb(249,83,47)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="421" width="0.0206%" height="15" fill="rgb(215,43,3)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="405" width="0.0206%" height="15" fill="rgb(238,154,13)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="389" width="0.0206%" height="15" fill="rgb(219,56,2)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,540,045 samples, 0.02%)</title><rect x="1.1172%" y="373" width="0.0206%" height="15" fill="rgb(233,0,4)" fg:x="732530106" fg:w="13540045"/><text x="1.3672%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13,540,044 samples, 0.02%)</title><rect x="1.1172%" y="357" width="0.0206%" height="15" fill="rgb(235,30,7)" fg:x="732530107" fg:w="13540044"/><text x="1.3672%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,540,044 samples, 0.02%)</title><rect x="1.1172%" y="341" width="0.0206%" height="15" fill="rgb(250,79,13)" fg:x="732530107" fg:w="13540044"/><text x="1.3672%" y="351.50"></text></g><g><title>[libc.so.6] (13,540,044 samples, 0.02%)</title><rect x="1.1172%" y="325" width="0.0206%" height="15" fill="rgb(211,146,34)" fg:x="732530107" fg:w="13540044"/><text x="1.3672%" y="335.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::set_velocity (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="485" width="0.0122%" height="15" fill="rgb(228,22,38)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="495.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::set_velocity (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="469" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="453" width="0.0122%" height="15" fill="rgb(221,155,16)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="463.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="437" width="0.0122%" height="15" fill="rgb(215,215,53)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="421" width="0.0122%" height="15" fill="rgb(223,4,10)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="405" width="0.0122%" height="15" fill="rgb(234,103,6)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="389" width="0.0122%" height="15" fill="rgb(227,97,0)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,017,893 samples, 0.01%)</title><rect x="1.1440%" y="373" width="0.0122%" height="15" fill="rgb(234,150,53)" fg:x="750151905" fg:w="8017893"/><text x="1.3940%" y="383.50"></text></g><g><title>cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;::run_local_cell_funcs (765,971,623 samples, 1.17%)</title><rect x="0.0077%" y="565" width="1.1682%" height="15" fill="rgb(228,201,54)" fg:x="5057494" fg:w="765971623"/><text x="0.2577%" y="575.50"></text></g><g><title>cr_mech_coli::simulation::run_simulation_with_agents::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (761,911,609 samples, 1.16%)</title><rect x="0.0139%" y="549" width="1.1620%" height="15" fill="rgb(222,22,37)" fg:x="9117508" fg:w="761911609"/><text x="0.2639%" y="559.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::local_mechanics_update (761,911,609 samples, 1.16%)</title><rect x="0.0139%" y="533" width="1.1620%" height="15" fill="rgb(237,53,32)" fg:x="9117508" fg:w="761911609"/><text x="0.2639%" y="543.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::solvers::MechanicsAdamsBashforthSolver&lt;2_usize&gt; as cellular_raza_core::backend::chili::solvers::AdamsBashforth&lt;2_usize&gt;&gt;::update (761,911,609 samples, 1.16%)</title><rect x="0.0139%" y="517" width="1.1620%" height="15" fill="rgb(233,25,53)" fg:x="9117508" fg:w="761911609"/><text x="0.2639%" y="527.50"></text></g><g><title>cellular_raza_core::backend::chili::solvers::mechanics_adams_bashforth_3 (761,911,609 samples, 1.16%)</title><rect x="0.0139%" y="501" width="1.1620%" height="15" fill="rgb(210,40,34)" fg:x="9117508" fg:w="761911609"/><text x="0.2639%" y="511.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::velocity (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="485" width="0.0196%" height="15" fill="rgb(241,220,44)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="495.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::velocity (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="469" width="0.0196%" height="15" fill="rgb(235,28,35)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="479.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="453" width="0.0196%" height="15" fill="rgb(210,56,17)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="463.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="437" width="0.0196%" height="15" fill="rgb(224,130,29)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="421" width="0.0196%" height="15" fill="rgb(235,212,8)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="405" width="0.0196%" height="15" fill="rgb(223,33,50)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="389" width="0.0196%" height="15" fill="rgb(219,149,13)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,859,319 samples, 0.02%)</title><rect x="1.1563%" y="373" width="0.0196%" height="15" fill="rgb(250,156,29)" fg:x="758169798" fg:w="12859319"/><text x="1.4063%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8,754,111 samples, 0.01%)</title><rect x="1.1625%" y="357" width="0.0134%" height="15" fill="rgb(216,193,19)" fg:x="762275006" fg:w="8754111"/><text x="1.4125%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,754,111 samples, 0.01%)</title><rect x="1.1625%" y="341" width="0.0134%" height="15" fill="rgb(216,135,14)" fg:x="762275006" fg:w="8754111"/><text x="1.4125%" y="351.50"></text></g><g><title>[libc.so.6] (8,754,111 samples, 0.01%)</title><rect x="1.1625%" y="325" width="0.0134%" height="15" fill="rgb(241,47,5)" fg:x="762275006" fg:w="8754111"/><text x="1.4125%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (86,701,059 samples, 0.13%)</title><rect x="12.0811%" y="517" width="0.1322%" height="15" fill="rgb(233,42,35)" fg:x="7921649501" fg:w="86701059"/><text x="12.3311%" y="527.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (7,854,227 samples, 0.01%)</title><rect x="23.3271%" y="501" width="0.0120%" height="15" fill="rgb(231,13,6)" fg:x="15295764289" fg:w="7854227"/><text x="23.5771%" y="511.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (7,854,227 samples, 0.01%)</title><rect x="23.3271%" y="485" width="0.0120%" height="15" fill="rgb(207,181,40)" fg:x="15295764289" fg:w="7854227"/><text x="23.5771%" y="495.50"></text></g><g><title>core::hint::spin_loop (7,854,227 samples, 0.01%)</title><rect x="23.3271%" y="469" width="0.0120%" height="15" fill="rgb(254,173,49)" fg:x="15295764289" fg:w="7854227"/><text x="23.5771%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7,854,227 samples, 0.01%)</title><rect x="23.3271%" y="453" width="0.0120%" height="15" fill="rgb(221,1,38)" fg:x="15295764289" fg:w="7854227"/><text x="23.5771%" y="463.50"></text></g><g><title>cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;::sync (14,584,916,778 samples, 22.24%)</title><rect x="1.1819%" y="565" width="22.2430%" height="15" fill="rgb(206,124,46)" fg:x="775000620" fg:w="14584916778"/><text x="1.4319%" y="575.50">cellular_raza_core::backend::chili:..</text></g><g><title>&lt;cellular_raza_core::backend::chili::simulation_flow::BarrierSync as cellular_raza_core::backend::chili::simulation_flow::SyncSubDomains&gt;::sync (14,584,916,778 samples, 22.24%)</title><rect x="1.1819%" y="549" width="22.2430%" height="15" fill="rgb(249,21,11)" fg:x="775000620" fg:w="14584916778"/><text x="1.4319%" y="559.50">&lt;cellular_raza_core::backend::chili..</text></g><g><title>hurdles::Barrier::wait (14,584,916,777 samples, 22.24%)</title><rect x="1.1819%" y="533" width="22.2430%" height="15" fill="rgb(222,201,40)" fg:x="775000621" fg:w="14584916777"/><text x="1.4319%" y="543.50">hurdles::Barrier::wait</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (7,351,566,838 samples, 11.21%)</title><rect x="12.2133%" y="517" width="11.2117%" height="15" fill="rgb(235,61,29)" fg:x="8008350560" fg:w="7351566838"/><text x="12.4633%" y="527.50">parking_lot_core:..</text></g><g><title>parking_lot_core::spinwait::thread_yield (56,298,882 samples, 0.09%)</title><rect x="23.3391%" y="501" width="0.0859%" height="15" fill="rgb(219,207,3)" fg:x="15303618516" fg:w="56298882"/><text x="23.5891%" y="511.50"></text></g><g><title>__sched_yield (56,298,882 samples, 0.09%)</title><rect x="23.3391%" y="485" width="0.0859%" height="15" fill="rgb(222,56,46)" fg:x="15303618516" fg:w="56298882"/><text x="23.5891%" y="495.50"></text></g><g><title>[unknown] (56,298,871 samples, 0.09%)</title><rect x="23.3391%" y="469" width="0.0859%" height="15" fill="rgb(239,76,54)" fg:x="15303618527" fg:w="56298871"/><text x="23.5891%" y="479.50"></text></g><g><title>[unknown] (56,298,871 samples, 0.09%)</title><rect x="23.3391%" y="453" width="0.0859%" height="15" fill="rgb(231,124,27)" fg:x="15303618527" fg:w="56298871"/><text x="23.5891%" y="463.50"></text></g><g><title>[unknown] (48,292,323 samples, 0.07%)</title><rect x="23.3513%" y="437" width="0.0736%" height="15" fill="rgb(249,195,6)" fg:x="15311625075" fg:w="48292323"/><text x="23.6013%" y="447.50"></text></g><g><title>[unknown] (44,263,668 samples, 0.07%)</title><rect x="23.3575%" y="421" width="0.0675%" height="15" fill="rgb(237,174,47)" fg:x="15315653730" fg:w="44263668"/><text x="23.6075%" y="431.50"></text></g><g><title>[unknown] (44,263,668 samples, 0.07%)</title><rect x="23.3575%" y="405" width="0.0675%" height="15" fill="rgb(206,201,31)" fg:x="15315653730" fg:w="44263668"/><text x="23.6075%" y="415.50"></text></g><g><title>[unknown] (44,263,668 samples, 0.07%)</title><rect x="23.3575%" y="389" width="0.0675%" height="15" fill="rgb(231,57,52)" fg:x="15315653730" fg:w="44263668"/><text x="23.6075%" y="399.50"></text></g><g><title>[unknown] (36,249,771 samples, 0.06%)</title><rect x="23.3697%" y="373" width="0.0553%" height="15" fill="rgb(248,177,22)" fg:x="15323667627" fg:w="36249771"/><text x="23.6197%" y="383.50"></text></g><g><title>[unknown] (25,434,599 samples, 0.04%)</title><rect x="23.3862%" y="357" width="0.0388%" height="15" fill="rgb(215,211,37)" fg:x="15334482799" fg:w="25434599"/><text x="23.6362%" y="367.50"></text></g><g><title>[unknown] (17,629,884 samples, 0.03%)</title><rect x="23.3981%" y="341" width="0.0269%" height="15" fill="rgb(241,128,51)" fg:x="15342287514" fg:w="17629884"/><text x="23.6481%" y="351.50"></text></g><g><title>[unknown] (12,044,880 samples, 0.02%)</title><rect x="23.4066%" y="325" width="0.0184%" height="15" fill="rgb(227,165,31)" fg:x="15347872518" fg:w="12044880"/><text x="23.6566%" y="335.50"></text></g><g><title>cellular_raza_core::backend::chili::update_cycle::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::update_cell_cycle_4 (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="565" width="0.0241%" height="15" fill="rgb(228,167,24)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="549" width="0.0241%" height="15" fill="rgb(228,143,12)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="533" width="0.0241%" height="15" fill="rgb(249,149,8)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="517" width="0.0241%" height="15" fill="rgb(243,35,44)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="501" width="0.0241%" height="15" fill="rgb(246,89,9)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="485" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="495.50"></text></g><g><title>core::unit::&lt;impl core::iter::traits::collect::FromIterator&lt;()&gt; for ()&gt;::from_iter (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="469" width="0.0241%" height="15" fill="rgb(233,141,41)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="453" width="0.0241%" height="15" fill="rgb(239,167,4)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="437" width="0.0241%" height="15" fill="rgb(209,217,16)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="421" width="0.0241%" height="15" fill="rgb(219,88,35)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="405" width="0.0241%" height="15" fill="rgb(220,193,23)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="389" width="0.0241%" height="15" fill="rgb(230,90,52)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="373" width="0.0241%" height="15" fill="rgb(252,106,19)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="383.50"></text></g><g><title>cellular_raza_core::backend::chili::update_cycle::_&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::update_cell_cycle_4::_{{closure}} (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="357" width="0.0241%" height="15" fill="rgb(206,74,20)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="367.50"></text></g><g><title>cellular_raza_core::backend::chili::update_cycle::&lt;impl cellular_raza_core::backend::chili::datastructures::Voxel&lt;C,A&gt;&gt;::update_cell_cycle_4 (15,820,810 samples, 0.02%)</title><rect x="23.4250%" y="341" width="0.0241%" height="15" fill="rgb(230,138,44)" fg:x="15359917398" fg:w="15820810"/><text x="23.6750%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="325" width="0.0124%" height="15" fill="rgb(235,182,43)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="309" width="0.0124%" height="15" fill="rgb(242,16,51)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="293" width="0.0124%" height="15" fill="rgb(248,9,4)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="277" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="261" width="0.0124%" height="15" fill="rgb(239,54,39)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="271.50"></text></g><g><title>core::unit::&lt;impl core::iter::traits::collect::FromIterator&lt;()&gt; for ()&gt;::from_iter (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="245" width="0.0124%" height="15" fill="rgb(230,99,41)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="229" width="0.0124%" height="15" fill="rgb(253,106,12)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="213" width="0.0124%" height="15" fill="rgb(213,46,41)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="197" width="0.0124%" height="15" fill="rgb(215,133,35)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="181" width="0.0124%" height="15" fill="rgb(213,28,5)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="165" width="0.0124%" height="15" fill="rgb(215,77,49)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="149" width="0.0124%" height="15" fill="rgb(248,100,22)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="159.50"></text></g><g><title>cellular_raza_core::backend::chili::update_cycle::_&lt;impl cellular_raza_core::backend::chili::datastructures::Voxel&lt;C,A&gt;&gt;::update_cell_cycle_4::_{{closure}} (8,144,378 samples, 0.01%)</title><rect x="23.4367%" y="133" width="0.0124%" height="15" fill="rgb(208,67,9)" fg:x="15367593830" fg:w="8144378"/><text x="23.6867%" y="143.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::CartesianSubDomainRods&lt;F,_&gt; as cellular_raza_concepts::domain::SubDomainMechanics&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::apply_boundary (24,453,306 samples, 0.04%)</title><rect x="23.4491%" y="549" width="0.0373%" height="15" fill="rgb(219,133,21)" fg:x="15375738208" fg:w="24453306"/><text x="23.6991%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20,353,111 samples, 0.03%)</title><rect x="23.4553%" y="533" width="0.0310%" height="15" fill="rgb(246,46,29)" fg:x="15379838403" fg:w="20353111"/><text x="23.7053%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20,353,111 samples, 0.03%)</title><rect x="23.4553%" y="517" width="0.0310%" height="15" fill="rgb(246,185,52)" fg:x="15379838403" fg:w="20353111"/><text x="23.7053%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (20,353,111 samples, 0.03%)</title><rect x="23.4553%" y="501" width="0.0310%" height="15" fill="rgb(252,136,11)" fg:x="15379838403" fg:w="20353111"/><text x="23.7053%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (20,353,111 samples, 0.03%)</title><rect x="23.4553%" y="485" width="0.0310%" height="15" fill="rgb(219,138,53)" fg:x="15379838403" fg:w="20353111"/><text x="23.7053%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (12,218,299 samples, 0.02%)</title><rect x="23.4678%" y="469" width="0.0186%" height="15" fill="rgb(211,51,23)" fg:x="15387973215" fg:w="12218299"/><text x="23.7178%" y="479.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::CartesianSubDomainRods&lt;F,_&gt; as cellular_raza_concepts::domain::SubDomainMechanics&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::apply_boundary::_{{closure}} (12,218,299 samples, 0.02%)</title><rect x="23.4678%" y="453" width="0.0186%" height="15" fill="rgb(247,221,28)" fg:x="15387973215" fg:w="12218299"/><text x="23.7178%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (8,182,936 samples, 0.01%)</title><rect x="23.4739%" y="437" width="0.0125%" height="15" fill="rgb(251,222,45)" fg:x="15392008578" fg:w="8182936"/><text x="23.7239%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="517" width="0.0125%" height="15" fill="rgb(217,162,53)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="501" width="0.0125%" height="15" fill="rgb(229,93,14)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="485" width="0.0125%" height="15" fill="rgb(209,67,49)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="469" width="0.0125%" height="15" fill="rgb(213,87,29)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="453" width="0.0125%" height="15" fill="rgb(205,151,52)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="437" width="0.0125%" height="15" fill="rgb(253,215,39)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="421" width="0.0125%" height="15" fill="rgb(221,220,41)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="405" width="0.0125%" height="15" fill="rgb(218,133,21)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="415.50"></text></g><g><title>[libc.so.6] (8,188,172 samples, 0.01%)</title><rect x="23.5087%" y="389" width="0.0125%" height="15" fill="rgb(221,193,43)" fg:x="15414824325" fg:w="8188172"/><text x="23.7587%" y="399.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::set_velocity (12,279,904 samples, 0.02%)</title><rect x="23.5087%" y="549" width="0.0187%" height="15" fill="rgb(240,128,52)" fg:x="15414824325" fg:w="12279904"/><text x="23.7587%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::set_velocity (12,279,904 samples, 0.02%)</title><rect x="23.5087%" y="533" width="0.0187%" height="15" fill="rgb(253,114,12)" fg:x="15414824325" fg:w="12279904"/><text x="23.7587%" y="543.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::apply_boundary (59,609,716 samples, 0.09%)</title><rect x="23.4491%" y="565" width="0.0909%" height="15" fill="rgb(215,223,47)" fg:x="15375738208" fg:w="59609716"/><text x="23.6991%" y="575.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::velocity (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="549" width="0.0126%" height="15" fill="rgb(248,225,23)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::velocity (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="533" width="0.0126%" height="15" fill="rgb(250,108,0)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="543.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="517" width="0.0126%" height="15" fill="rgb(228,208,7)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="501" width="0.0126%" height="15" fill="rgb(244,45,10)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="485" width="0.0126%" height="15" fill="rgb(207,125,25)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="469" width="0.0126%" height="15" fill="rgb(210,195,18)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="453" width="0.0126%" height="15" fill="rgb(249,80,12)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,243,695 samples, 0.01%)</title><rect x="23.5274%" y="437" width="0.0126%" height="15" fill="rgb(221,65,9)" fg:x="15427104229" fg:w="8243695"/><text x="23.7774%" y="447.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_fn (9,615,283 samples, 0.01%)</title><rect x="23.5535%" y="533" width="0.0147%" height="15" fill="rgb(235,49,36)" fg:x="15444230204" fg:w="9615283"/><text x="23.8035%" y="543.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_fn_generic (9,615,283 samples, 0.01%)</title><rect x="23.5535%" y="517" width="0.0147%" height="15" fill="rgb(225,32,20)" fg:x="15444230204" fg:w="9615283"/><text x="23.8035%" y="527.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::CartesianSubDomainRods&lt;F,3_usize&gt; as cellular_raza_concepts::domain::SubDomainForce&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt;&gt;::calculate_custom_force (22,582,914 samples, 0.03%)</title><rect x="23.5400%" y="549" width="0.0344%" height="15" fill="rgb(215,141,46)" fg:x="15435347924" fg:w="22582914"/><text x="23.7900%" y="559.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="549" width="0.0198%" height="15" fill="rgb(250,160,47)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="533" width="0.0198%" height="15" fill="rgb(216,222,40)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="543.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="517" width="0.0198%" height="15" fill="rgb(234,217,39)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="501" width="0.0198%" height="15" fill="rgb(207,178,40)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="485" width="0.0198%" height="15" fill="rgb(221,136,13)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="469" width="0.0198%" height="15" fill="rgb(249,199,10)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="453" width="0.0198%" height="15" fill="rgb(249,222,13)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,012,694 samples, 0.02%)</title><rect x="23.5839%" y="437" width="0.0198%" height="15" fill="rgb(244,185,38)" fg:x="15464154548" fg:w="13012694"/><text x="23.8339%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8,971,731 samples, 0.01%)</title><rect x="23.5901%" y="421" width="0.0137%" height="15" fill="rgb(236,202,9)" fg:x="15468195511" fg:w="8971731"/><text x="23.8401%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,971,731 samples, 0.01%)</title><rect x="23.5901%" y="405" width="0.0137%" height="15" fill="rgb(250,229,37)" fg:x="15468195511" fg:w="8971731"/><text x="23.8401%" y="415.50"></text></g><g><title>[libc.so.6] (8,971,731 samples, 0.01%)</title><rect x="23.5901%" y="389" width="0.0137%" height="15" fill="rgb(206,174,23)" fg:x="15468195511" fg:w="8971731"/><text x="23.8401%" y="399.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::calculate_custom_domain_force (61,461,192 samples, 0.09%)</title><rect x="23.5400%" y="565" width="0.0937%" height="15" fill="rgb(211,33,43)" fg:x="15435347924" fg:w="61461192"/><text x="23.7900%" y="575.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::velocity (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="549" width="0.0300%" height="15" fill="rgb(245,58,50)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::velocity (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="533" width="0.0300%" height="15" fill="rgb(244,68,36)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="543.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="517" width="0.0300%" height="15" fill="rgb(232,229,15)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="501" width="0.0300%" height="15" fill="rgb(254,30,23)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="485" width="0.0300%" height="15" fill="rgb(235,160,14)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="469" width="0.0300%" height="15" fill="rgb(212,155,44)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="453" width="0.0300%" height="15" fill="rgb(226,2,50)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,641,874 samples, 0.03%)</title><rect x="23.6038%" y="437" width="0.0300%" height="15" fill="rgb(234,177,6)" fg:x="15477167242" fg:w="19641874"/><text x="23.8538%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15,569,588 samples, 0.02%)</title><rect x="23.6100%" y="421" width="0.0237%" height="15" fill="rgb(217,24,9)" fg:x="15481239528" fg:w="15569588"/><text x="23.8600%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,569,588 samples, 0.02%)</title><rect x="23.6100%" y="405" width="0.0237%" height="15" fill="rgb(220,13,46)" fg:x="15481239528" fg:w="15569588"/><text x="23.8600%" y="415.50"></text></g><g><title>[libc.so.6] (11,491,506 samples, 0.02%)</title><rect x="23.6162%" y="389" width="0.0175%" height="15" fill="rgb(239,221,27)" fg:x="15485317610" fg:w="11491506"/><text x="23.8662%" y="399.50"></text></g><g><title>[libc.so.6] (8,187,629 samples, 0.01%)</title><rect x="23.6480%" y="517" width="0.0125%" height="15" fill="rgb(222,198,25)" fg:x="15506174129" fg:w="8187629"/><text x="23.8980%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12,241,455 samples, 0.02%)</title><rect x="23.6605%" y="405" width="0.0187%" height="15" fill="rgb(211,99,13)" fg:x="15514361758" fg:w="12241455"/><text x="23.9105%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12,241,455 samples, 0.02%)</title><rect x="23.6605%" y="389" width="0.0187%" height="15" fill="rgb(232,111,31)" fg:x="15514361758" fg:w="12241455"/><text x="23.9105%" y="399.50"></text></g><g><title>alloc::alloc::realloc (12,241,455 samples, 0.02%)</title><rect x="23.6605%" y="373" width="0.0187%" height="15" fill="rgb(245,82,37)" fg:x="15514361758" fg:w="12241455"/><text x="23.9105%" y="383.50"></text></g><g><title>realloc (12,241,455 samples, 0.02%)</title><rect x="23.6605%" y="357" width="0.0187%" height="15" fill="rgb(227,149,46)" fg:x="15514361758" fg:w="12241455"/><text x="23.9105%" y="367.50"></text></g><g><title>[libc.so.6] (12,241,455 samples, 0.02%)</title><rect x="23.6605%" y="341" width="0.0187%" height="15" fill="rgb(218,36,50)" fg:x="15514361758" fg:w="12241455"/><text x="23.9105%" y="351.50"></text></g><g><title>[libc.so.6] (8,188,541 samples, 0.01%)</title><rect x="23.6667%" y="325" width="0.0125%" height="15" fill="rgb(226,80,48)" fg:x="15518414672" fg:w="8188541"/><text x="23.9167%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (20,419,790 samples, 0.03%)</title><rect x="23.6605%" y="469" width="0.0311%" height="15" fill="rgb(238,224,15)" fg:x="15514361758" fg:w="20419790"/><text x="23.9105%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (20,419,790 samples, 0.03%)</title><rect x="23.6605%" y="453" width="0.0311%" height="15" fill="rgb(241,136,10)" fg:x="15514361758" fg:w="20419790"/><text x="23.9105%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (20,419,790 samples, 0.03%)</title><rect x="23.6605%" y="437" width="0.0311%" height="15" fill="rgb(208,32,45)" fg:x="15514361758" fg:w="20419790"/><text x="23.9105%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,419,790 samples, 0.03%)</title><rect x="23.6605%" y="421" width="0.0311%" height="15" fill="rgb(207,135,9)" fg:x="15514361758" fg:w="20419790"/><text x="23.9105%" y="431.50"></text></g><g><title>malloc (8,178,335 samples, 0.01%)</title><rect x="23.6792%" y="405" width="0.0125%" height="15" fill="rgb(206,86,44)" fg:x="15526603213" fg:w="8178335"/><text x="23.9292%" y="415.50"></text></g><g><title>[libc.so.6] (8,178,335 samples, 0.01%)</title><rect x="23.6792%" y="389" width="0.0125%" height="15" fill="rgb(245,177,15)" fg:x="15526603213" fg:w="8178335"/><text x="23.9292%" y="399.50"></text></g><g><title>[libc.so.6] (8,178,335 samples, 0.01%)</title><rect x="23.6792%" y="373" width="0.0125%" height="15" fill="rgb(206,64,50)" fg:x="15526603213" fg:w="8178335"/><text x="23.9292%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (28,526,277 samples, 0.04%)</title><rect x="23.6605%" y="501" width="0.0435%" height="15" fill="rgb(234,36,40)" fg:x="15514361758" fg:w="28526277"/><text x="23.9105%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28,526,277 samples, 0.04%)</title><rect x="23.6605%" y="485" width="0.0435%" height="15" fill="rgb(213,64,8)" fg:x="15514361758" fg:w="28526277"/><text x="23.9105%" y="495.50"></text></g><g><title>core::ptr::write (8,106,487 samples, 0.01%)</title><rect x="23.6916%" y="469" width="0.0124%" height="15" fill="rgb(210,75,36)" fg:x="15534781548" fg:w="8106487"/><text x="23.9416%" y="479.50"></text></g><g><title>[libc.so.6] (8,106,487 samples, 0.01%)</title><rect x="23.6916%" y="453" width="0.0124%" height="15" fill="rgb(229,88,21)" fg:x="15534781548" fg:w="8106487"/><text x="23.9416%" y="463.50"></text></g><g><title>[libc.so.6] (12,133,309 samples, 0.02%)</title><rect x="23.7040%" y="501" width="0.0185%" height="15" fill="rgb(252,204,47)" fg:x="15542888035" fg:w="12133309"/><text x="23.9540%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (148,173,655 samples, 0.23%)</title><rect x="23.7989%" y="373" width="0.2260%" height="15" fill="rgb(208,77,27)" fg:x="15605099712" fg:w="148173655"/><text x="24.0489%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (148,173,655 samples, 0.23%)</title><rect x="23.7989%" y="357" width="0.2260%" height="15" fill="rgb(221,76,26)" fg:x="15605099712" fg:w="148173655"/><text x="24.0489%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (148,173,655 samples, 0.23%)</title><rect x="23.7989%" y="341" width="0.2260%" height="15" fill="rgb(225,139,18)" fg:x="15605099712" fg:w="148173655"/><text x="24.0489%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (148,173,655 samples, 0.23%)</title><rect x="23.7989%" y="325" width="0.2260%" height="15" fill="rgb(230,137,11)" fg:x="15605099712" fg:w="148173655"/><text x="24.0489%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (148,173,655 samples, 0.23%)</title><rect x="23.7989%" y="309" width="0.2260%" height="15" fill="rgb(212,28,1)" fg:x="15605099712" fg:w="148173655"/><text x="24.0489%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (144,102,408 samples, 0.22%)</title><rect x="23.8051%" y="293" width="0.2198%" height="15" fill="rgb(248,164,17)" fg:x="15609170959" fg:w="144102408"/><text x="24.0551%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (135,873,290 samples, 0.21%)</title><rect x="23.8176%" y="277" width="0.2072%" height="15" fill="rgb(222,171,42)" fg:x="15617400077" fg:w="135873290"/><text x="24.0676%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (135,873,290 samples, 0.21%)</title><rect x="23.8176%" y="261" width="0.2072%" height="15" fill="rgb(243,84,45)" fg:x="15617400077" fg:w="135873290"/><text x="24.0676%" y="271.50"></text></g><g><title>alloc::alloc::realloc (135,873,290 samples, 0.21%)</title><rect x="23.8176%" y="245" width="0.2072%" height="15" fill="rgb(252,49,23)" fg:x="15617400077" fg:w="135873290"/><text x="24.0676%" y="255.50"></text></g><g><title>realloc (131,792,410 samples, 0.20%)</title><rect x="23.8239%" y="229" width="0.2010%" height="15" fill="rgb(215,19,7)" fg:x="15621480957" fg:w="131792410"/><text x="24.0739%" y="239.50"></text></g><g><title>[libc.so.6] (100,595,181 samples, 0.15%)</title><rect x="23.8714%" y="213" width="0.1534%" height="15" fill="rgb(238,81,41)" fg:x="15652678186" fg:w="100595181"/><text x="24.1214%" y="223.50"></text></g><g><title>[libc.so.6] (96,528,498 samples, 0.15%)</title><rect x="23.8776%" y="197" width="0.1472%" height="15" fill="rgb(210,199,37)" fg:x="15656744869" fg:w="96528498"/><text x="24.1276%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (183,806,515 samples, 0.28%)</title><rect x="23.7660%" y="453" width="0.2803%" height="15" fill="rgb(244,192,49)" fg:x="15583505078" fg:w="183806515"/><text x="24.0160%" y="463.50"></text></g><g><title>alloc::string::String::push_str (162,211,881 samples, 0.25%)</title><rect x="23.7989%" y="437" width="0.2474%" height="15" fill="rgb(226,211,11)" fg:x="15605099712" fg:w="162211881"/><text x="24.0489%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (162,211,881 samples, 0.25%)</title><rect x="23.7989%" y="421" width="0.2474%" height="15" fill="rgb(236,162,54)" fg:x="15605099712" fg:w="162211881"/><text x="24.0489%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (162,211,881 samples, 0.25%)</title><rect x="23.7989%" y="405" width="0.2474%" height="15" fill="rgb(220,229,9)" fg:x="15605099712" fg:w="162211881"/><text x="24.0489%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (162,211,881 samples, 0.25%)</title><rect x="23.7989%" y="389" width="0.2474%" height="15" fill="rgb(250,87,22)" fg:x="15605099712" fg:w="162211881"/><text x="24.0489%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14,038,226 samples, 0.02%)</title><rect x="24.0249%" y="373" width="0.0214%" height="15" fill="rgb(239,43,17)" fg:x="15753273367" fg:w="14038226"/><text x="24.2749%" y="383.50"></text></g><g><title>&lt;f32 as num_traits::cast::ToPrimitive&gt;::to_usize (8,266,999 samples, 0.01%)</title><rect x="24.0463%" y="453" width="0.0126%" height="15" fill="rgb(231,177,25)" fg:x="15767311593" fg:w="8266999"/><text x="24.2963%" y="463.50"></text></g><g><title>alloc::string::String::with_capacity (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="389" width="0.0472%" height="15" fill="rgb(219,179,1)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="373" width="0.0472%" height="15" fill="rgb(238,219,53)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="357" width="0.0472%" height="15" fill="rgb(232,167,36)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="341" width="0.0472%" height="15" fill="rgb(244,19,51)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="325" width="0.0472%" height="15" fill="rgb(224,6,22)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="309" width="0.0472%" height="15" fill="rgb(224,145,5)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="293" width="0.0472%" height="15" fill="rgb(234,130,49)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="277" width="0.0472%" height="15" fill="rgb(254,6,2)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="287.50"></text></g><g><title>alloc::alloc::alloc (30,969,250 samples, 0.05%)</title><rect x="24.0828%" y="261" width="0.0472%" height="15" fill="rgb(208,96,46)" fg:x="15791285773" fg:w="30969250"/><text x="24.3328%" y="271.50"></text></g><g><title>malloc (26,900,373 samples, 0.04%)</title><rect x="24.0890%" y="245" width="0.0410%" height="15" fill="rgb(239,3,39)" fg:x="15795354650" fg:w="26900373"/><text x="24.3390%" y="255.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (8,157,311 samples, 0.01%)</title><rect x="24.1301%" y="389" width="0.0124%" height="15" fill="rgb(233,210,1)" fg:x="15822255023" fg:w="8157311"/><text x="24.3801%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8,157,311 samples, 0.01%)</title><rect x="24.1301%" y="373" width="0.0124%" height="15" fill="rgb(244,137,37)" fg:x="15822255023" fg:w="8157311"/><text x="24.3801%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8,157,311 samples, 0.01%)</title><rect x="24.1301%" y="357" width="0.0124%" height="15" fill="rgb(240,136,2)" fg:x="15822255023" fg:w="8157311"/><text x="24.3801%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,157,311 samples, 0.01%)</title><rect x="24.1301%" y="341" width="0.0124%" height="15" fill="rgb(239,18,37)" fg:x="15822255023" fg:w="8157311"/><text x="24.3801%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,157,311 samples, 0.01%)</title><rect x="24.1301%" y="325" width="0.0124%" height="15" fill="rgb(218,185,22)" fg:x="15822255023" fg:w="8157311"/><text x="24.3801%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40,031,281 samples, 0.06%)</title><rect x="24.1884%" y="341" width="0.0611%" height="15" fill="rgb(225,218,4)" fg:x="15860491768" fg:w="40031281"/><text x="24.4384%" y="351.50"></text></g><g><title>alloc::string::String::push_str (27,833,145 samples, 0.04%)</title><rect x="24.2070%" y="325" width="0.0424%" height="15" fill="rgb(230,182,32)" fg:x="15872689904" fg:w="27833145"/><text x="24.4570%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27,833,145 samples, 0.04%)</title><rect x="24.2070%" y="309" width="0.0424%" height="15" fill="rgb(242,56,43)" fg:x="15872689904" fg:w="27833145"/><text x="24.4570%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27,833,145 samples, 0.04%)</title><rect x="24.2070%" y="293" width="0.0424%" height="15" fill="rgb(233,99,24)" fg:x="15872689904" fg:w="27833145"/><text x="24.4570%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27,833,145 samples, 0.04%)</title><rect x="24.2070%" y="277" width="0.0424%" height="15" fill="rgb(234,209,42)" fg:x="15872689904" fg:w="27833145"/><text x="24.4570%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23,822,786 samples, 0.04%)</title><rect x="24.2131%" y="261" width="0.0363%" height="15" fill="rgb(227,7,12)" fg:x="15876700263" fg:w="23822786"/><text x="24.4631%" y="271.50"></text></g><g><title>[libc.so.6] (23,822,786 samples, 0.04%)</title><rect x="24.2131%" y="245" width="0.0363%" height="15" fill="rgb(245,203,43)" fg:x="15876700263" fg:w="23822786"/><text x="24.4631%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="245" width="0.1632%" height="15" fill="rgb(238,205,33)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="229" width="0.1632%" height="15" fill="rgb(231,56,7)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="213" width="0.1632%" height="15" fill="rgb(244,186,29)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="197" width="0.1632%" height="15" fill="rgb(234,111,31)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="181" width="0.1632%" height="15" fill="rgb(241,149,10)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="165" width="0.1632%" height="15" fill="rgb(249,206,44)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="149" width="0.1632%" height="15" fill="rgb(251,153,30)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="133" width="0.1632%" height="15" fill="rgb(239,152,38)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="143.50"></text></g><g><title>alloc::alloc::realloc (107,040,015 samples, 0.16%)</title><rect x="24.2868%" y="117" width="0.1632%" height="15" fill="rgb(249,139,47)" fg:x="15925007804" fg:w="107040015"/><text x="24.5368%" y="127.50"></text></g><g><title>realloc (102,971,183 samples, 0.16%)</title><rect x="24.2930%" y="101" width="0.1570%" height="15" fill="rgb(244,64,35)" fg:x="15929076636" fg:w="102971183"/><text x="24.5430%" y="111.50"></text></g><g><title>[libc.so.6] (98,903,696 samples, 0.15%)</title><rect x="24.2992%" y="85" width="0.1508%" height="15" fill="rgb(216,46,15)" fg:x="15933144123" fg:w="98903696"/><text x="24.5492%" y="95.50"></text></g><g><title>[libc.so.6] (98,903,696 samples, 0.15%)</title><rect x="24.2992%" y="69" width="0.1508%" height="15" fill="rgb(250,74,19)" fg:x="15933144123" fg:w="98903696"/><text x="24.5492%" y="79.50"></text></g><g><title>[libc.so.6] (65,383,698 samples, 0.10%)</title><rect x="24.3503%" y="53" width="0.0997%" height="15" fill="rgb(249,42,33)" fg:x="15966664121" fg:w="65383698"/><text x="24.6003%" y="63.50"></text></g><g><title>[libc.so.6] (8,108,153 samples, 0.01%)</title><rect x="24.4376%" y="37" width="0.0124%" height="15" fill="rgb(242,149,17)" fg:x="16023939666" fg:w="8108153"/><text x="24.6876%" y="47.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65,518,782 samples, 0.10%)</title><rect x="24.4500%" y="245" width="0.0999%" height="15" fill="rgb(244,29,21)" fg:x="16032047819" fg:w="65518782"/><text x="24.7000%" y="255.50"></text></g><g><title>[libc.so.6] (65,518,782 samples, 0.10%)</title><rect x="24.4500%" y="229" width="0.0999%" height="15" fill="rgb(220,130,37)" fg:x="16032047819" fg:w="65518782"/><text x="24.7000%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (188,871,520 samples, 0.29%)</title><rect x="24.2806%" y="325" width="0.2880%" height="15" fill="rgb(211,67,2)" fg:x="15920967300" fg:w="188871520"/><text x="24.5306%" y="335.50"></text></g><g><title>alloc::string::String::push_str (184,831,016 samples, 0.28%)</title><rect x="24.2868%" y="309" width="0.2819%" height="15" fill="rgb(235,68,52)" fg:x="15925007804" fg:w="184831016"/><text x="24.5368%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (184,831,016 samples, 0.28%)</title><rect x="24.2868%" y="293" width="0.2819%" height="15" fill="rgb(246,142,3)" fg:x="15925007804" fg:w="184831016"/><text x="24.5368%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (184,831,016 samples, 0.28%)</title><rect x="24.2868%" y="277" width="0.2819%" height="15" fill="rgb(241,25,7)" fg:x="15925007804" fg:w="184831016"/><text x="24.5368%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (184,831,016 samples, 0.28%)</title><rect x="24.2868%" y="261" width="0.2819%" height="15" fill="rgb(242,119,39)" fg:x="15925007804" fg:w="184831016"/><text x="24.5368%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12,272,219 samples, 0.02%)</title><rect x="24.5499%" y="245" width="0.0187%" height="15" fill="rgb(241,98,45)" fg:x="16097566601" fg:w="12272219"/><text x="24.7999%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad (20,251,302 samples, 0.03%)</title><rect x="24.5686%" y="325" width="0.0309%" height="15" fill="rgb(254,28,30)" fg:x="16109838820" fg:w="20251302"/><text x="24.8186%" y="335.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Debug for f32&gt;::fmt (8,054,460 samples, 0.01%)</title><rect x="24.5995%" y="325" width="0.0123%" height="15" fill="rgb(241,142,54)" fg:x="16130090122" fg:w="8054460"/><text x="24.8495%" y="335.50"></text></g><g><title>core::fmt::float::float_to_general_debug (8,054,460 samples, 0.01%)</title><rect x="24.5995%" y="309" width="0.0123%" height="15" fill="rgb(222,85,15)" fg:x="16130090122" fg:w="8054460"/><text x="24.8495%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,147,108 samples, 0.01%)</title><rect x="24.6242%" y="293" width="0.0124%" height="15" fill="rgb(210,85,47)" fg:x="16146264587" fg:w="8147108"/><text x="24.8742%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,147,108 samples, 0.01%)</title><rect x="24.6242%" y="277" width="0.0124%" height="15" fill="rgb(224,206,25)" fg:x="16146264587" fg:w="8147108"/><text x="24.8742%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (33,951,794 samples, 0.05%)</title><rect x="24.6180%" y="309" width="0.0518%" height="15" fill="rgb(243,201,19)" fg:x="16142202588" fg:w="33951794"/><text x="24.8680%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (21,742,687 samples, 0.03%)</title><rect x="24.6366%" y="293" width="0.0332%" height="15" fill="rgb(236,59,4)" fg:x="16154411695" fg:w="21742687"/><text x="24.8866%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21,742,687 samples, 0.03%)</title><rect x="24.6366%" y="277" width="0.0332%" height="15" fill="rgb(254,179,45)" fg:x="16154411695" fg:w="21742687"/><text x="24.8866%" y="287.50"></text></g><g><title>alloc::string::String::push_str (8,197,960 samples, 0.01%)</title><rect x="24.6573%" y="261" width="0.0125%" height="15" fill="rgb(226,14,10)" fg:x="16167956422" fg:w="8197960"/><text x="24.9073%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8,197,960 samples, 0.01%)</title><rect x="24.6573%" y="245" width="0.0125%" height="15" fill="rgb(244,27,41)" fg:x="16167956422" fg:w="8197960"/><text x="24.9073%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8,197,960 samples, 0.01%)</title><rect x="24.6573%" y="229" width="0.0125%" height="15" fill="rgb(235,35,32)" fg:x="16167956422" fg:w="8197960"/><text x="24.9073%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,197,960 samples, 0.01%)</title><rect x="24.6573%" y="213" width="0.0125%" height="15" fill="rgb(218,68,31)" fg:x="16167956422" fg:w="8197960"/><text x="24.9073%" y="223.50"></text></g><g><title>core::num::flt2dec::decoder::decode (8,626,469 samples, 0.01%)</title><rect x="24.6760%" y="293" width="0.0132%" height="15" fill="rgb(207,120,37)" fg:x="16180233509" fg:w="8626469"/><text x="24.9260%" y="303.50"></text></g><g><title>core::num::flt2dec::determine_sign (9,981,353 samples, 0.02%)</title><rect x="24.6892%" y="293" width="0.0152%" height="15" fill="rgb(227,98,0)" fg:x="16188859978" fg:w="9981353"/><text x="24.9392%" y="303.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (12,137,116 samples, 0.02%)</title><rect x="24.7044%" y="293" width="0.0185%" height="15" fill="rgb(207,7,3)" fg:x="16198841331" fg:w="12137116"/><text x="24.9544%" y="303.50"></text></g><g><title>core::num::diy_float::Fp::mul (20,195,092 samples, 0.03%)</title><rect x="24.8379%" y="245" width="0.0308%" height="15" fill="rgb(206,98,19)" fg:x="16286375689" fg:w="20195092"/><text x="25.0879%" y="255.50"></text></g><g><title>core::num::diy_float::Fp::normalize (22,855,011 samples, 0.03%)</title><rect x="24.8687%" y="245" width="0.0349%" height="15" fill="rgb(217,5,26)" fg:x="16306570781" fg:w="22855011"/><text x="25.1187%" y="255.50"></text></g><g><title>core::num::diy_float::Fp::normalize_to (8,155,116 samples, 0.01%)</title><rect x="24.9035%" y="245" width="0.0124%" height="15" fill="rgb(235,190,38)" fg:x="16329425792" fg:w="8155116"/><text x="25.1535%" y="255.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::cached_power (12,033,888 samples, 0.02%)</title><rect x="24.9160%" y="245" width="0.0184%" height="15" fill="rgb(247,86,24)" fg:x="16337580908" fg:w="12033888"/><text x="25.1660%" y="255.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt::round_and_weed (24,523,775 samples, 0.04%)</title><rect x="24.9343%" y="245" width="0.0374%" height="15" fill="rgb(205,101,16)" fg:x="16349614796" fg:w="24523775"/><text x="25.1843%" y="255.50"></text></g><g><title>core::fmt::rt::Argument::fmt (477,690,512 samples, 0.73%)</title><rect x="24.2556%" y="341" width="0.7285%" height="15" fill="rgb(246,168,33)" fg:x="15904581357" fg:w="477690512"/><text x="24.5056%" y="351.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (244,127,287 samples, 0.37%)</title><rect x="24.6118%" y="325" width="0.3723%" height="15" fill="rgb(231,114,1)" fg:x="16138144582" fg:w="244127287"/><text x="24.8618%" y="335.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (206,117,487 samples, 0.31%)</title><rect x="24.6698%" y="309" width="0.3143%" height="15" fill="rgb(207,184,53)" fg:x="16176154382" fg:w="206117487"/><text x="24.9198%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (171,293,422 samples, 0.26%)</title><rect x="24.7229%" y="293" width="0.2612%" height="15" fill="rgb(224,95,51)" fg:x="16210978447" fg:w="171293422"/><text x="24.9729%" y="303.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (171,293,422 samples, 0.26%)</title><rect x="24.7229%" y="277" width="0.2612%" height="15" fill="rgb(212,188,45)" fg:x="16210978447" fg:w="171293422"/><text x="24.9729%" y="287.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (163,138,944 samples, 0.25%)</title><rect x="24.7353%" y="261" width="0.2488%" height="15" fill="rgb(223,154,38)" fg:x="16219132925" fg:w="163138944"/><text x="24.9853%" y="271.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (8,133,298 samples, 0.01%)</title><rect x="24.9717%" y="245" width="0.0124%" height="15" fill="rgb(251,22,52)" fg:x="16374138571" fg:w="8133298"/><text x="25.2217%" y="255.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (610,754,421 samples, 0.93%)</title><rect x="24.0589%" y="421" width="0.9314%" height="15" fill="rgb(229,209,22)" fg:x="15775578592" fg:w="610754421"/><text x="24.3089%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (610,754,421 samples, 0.93%)</title><rect x="24.0589%" y="405" width="0.9314%" height="15" fill="rgb(234,138,34)" fg:x="15775578592" fg:w="610754421"/><text x="24.3089%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (555,920,679 samples, 0.85%)</title><rect x="24.1425%" y="389" width="0.8478%" height="15" fill="rgb(212,95,11)" fg:x="15830412334" fg:w="555920679"/><text x="24.3925%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (555,920,679 samples, 0.85%)</title><rect x="24.1425%" y="373" width="0.8478%" height="15" fill="rgb(240,179,47)" fg:x="15830412334" fg:w="555920679"/><text x="24.3925%" y="383.50"></text></g><g><title>core::fmt::write (555,920,679 samples, 0.85%)</title><rect x="24.1425%" y="357" width="0.8478%" height="15" fill="rgb(240,163,11)" fg:x="15830412334" fg:w="555920679"/><text x="24.3925%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="309" width="0.0309%" height="15" fill="rgb(236,37,12)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="293" width="0.0309%" height="15" fill="rgb(232,164,16)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="277" width="0.0309%" height="15" fill="rgb(244,205,15)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="261" width="0.0309%" height="15" fill="rgb(223,117,47)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="245" width="0.0309%" height="15" fill="rgb(244,107,35)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="229" width="0.0309%" height="15" fill="rgb(205,140,8)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="239.50"></text></g><g><title>alloc::alloc::alloc (20,289,214 samples, 0.03%)</title><rect x="24.9903%" y="213" width="0.0309%" height="15" fill="rgb(228,84,46)" fg:x="16386333013" fg:w="20289214"/><text x="25.2403%" y="223.50"></text></g><g><title>malloc (16,261,000 samples, 0.02%)</title><rect x="24.9965%" y="197" width="0.0248%" height="15" fill="rgb(254,188,9)" fg:x="16390361227" fg:w="16261000"/><text x="25.2465%" y="207.50"></text></g><g><title>alloc::fmt::format (651,444,340 samples, 0.99%)</title><rect x="24.0589%" y="453" width="0.9935%" height="15" fill="rgb(206,112,54)" fg:x="15775578592" fg:w="651444340"/><text x="24.3089%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (651,444,340 samples, 0.99%)</title><rect x="24.0589%" y="437" width="0.9935%" height="15" fill="rgb(216,84,49)" fg:x="15775578592" fg:w="651444340"/><text x="24.3089%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="421" width="0.0621%" height="15" fill="rgb(214,194,35)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="405" width="0.0621%" height="15" fill="rgb(249,28,3)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="389" width="0.0621%" height="15" fill="rgb(222,56,52)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="373" width="0.0621%" height="15" fill="rgb(245,217,50)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="357" width="0.0621%" height="15" fill="rgb(213,201,24)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="341" width="0.0621%" height="15" fill="rgb(248,116,28)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40,689,919 samples, 0.06%)</title><rect x="24.9903%" y="325" width="0.0621%" height="15" fill="rgb(219,72,43)" fg:x="16386333013" fg:w="40689919"/><text x="25.2403%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20,400,705 samples, 0.03%)</title><rect x="25.0213%" y="309" width="0.0311%" height="15" fill="rgb(209,138,14)" fg:x="16406622227" fg:w="20400705"/><text x="25.2713%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,400,705 samples, 0.03%)</title><rect x="25.0213%" y="293" width="0.0311%" height="15" fill="rgb(222,18,33)" fg:x="16406622227" fg:w="20400705"/><text x="25.2713%" y="303.50"></text></g><g><title>[libc.so.6] (20,400,705 samples, 0.03%)</title><rect x="25.0213%" y="277" width="0.0311%" height="15" fill="rgb(213,199,7)" fg:x="16406622227" fg:w="20400705"/><text x="25.2713%" y="287.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (415,296,939 samples, 0.63%)</title><rect x="25.0586%" y="405" width="0.6334%" height="15" fill="rgb(250,110,10)" fg:x="16431099226" fg:w="415296939"/><text x="25.3086%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (361,896,255 samples, 0.55%)</title><rect x="25.1400%" y="389" width="0.5519%" height="15" fill="rgb(248,123,6)" fg:x="16484499910" fg:w="361896255"/><text x="25.3900%" y="399.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (428,525,263 samples, 0.65%)</title><rect x="25.0524%" y="437" width="0.6535%" height="15" fill="rgb(206,91,31)" fg:x="16427022932" fg:w="428525263"/><text x="25.3024%" y="447.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (428,525,263 samples, 0.65%)</title><rect x="25.0524%" y="421" width="0.6535%" height="15" fill="rgb(211,154,13)" fg:x="16427022932" fg:w="428525263"/><text x="25.3024%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9,152,030 samples, 0.01%)</title><rect x="25.6920%" y="405" width="0.0140%" height="15" fill="rgb(225,148,7)" fg:x="16846396165" fg:w="9152030"/><text x="25.9420%" y="415.50"></text></g><g><title>__rdl_realloc (12,997,161 samples, 0.02%)</title><rect x="25.7869%" y="229" width="0.0198%" height="15" fill="rgb(220,160,43)" fg:x="16908685936" fg:w="12997161"/><text x="26.0369%" y="239.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8,899,381 samples, 0.01%)</title><rect x="25.7932%" y="213" width="0.0136%" height="15" fill="rgb(213,52,39)" fg:x="16912783716" fg:w="8899381"/><text x="26.0432%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (136,227,551 samples, 0.21%)</title><rect x="25.7869%" y="293" width="0.2078%" height="15" fill="rgb(243,137,7)" fg:x="16908685936" fg:w="136227551"/><text x="26.0369%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (136,227,551 samples, 0.21%)</title><rect x="25.7869%" y="277" width="0.2078%" height="15" fill="rgb(230,79,13)" fg:x="16908685936" fg:w="136227551"/><text x="26.0369%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (136,227,551 samples, 0.21%)</title><rect x="25.7869%" y="261" width="0.2078%" height="15" fill="rgb(247,105,23)" fg:x="16908685936" fg:w="136227551"/><text x="26.0369%" y="271.50"></text></g><g><title>alloc::alloc::realloc (136,227,551 samples, 0.21%)</title><rect x="25.7869%" y="245" width="0.2078%" height="15" fill="rgb(223,179,41)" fg:x="16908685936" fg:w="136227551"/><text x="26.0369%" y="255.50"></text></g><g><title>realloc (123,230,390 samples, 0.19%)</title><rect x="25.8068%" y="229" width="0.1879%" height="15" fill="rgb(218,9,34)" fg:x="16921683097" fg:w="123230390"/><text x="26.0568%" y="239.50"></text></g><g><title>[libc.so.6] (102,937,360 samples, 0.16%)</title><rect x="25.8377%" y="213" width="0.1570%" height="15" fill="rgb(222,106,8)" fg:x="16941976127" fg:w="102937360"/><text x="26.0877%" y="223.50"></text></g><g><title>[libc.so.6] (81,577,419 samples, 0.12%)</title><rect x="25.8703%" y="197" width="0.1244%" height="15" fill="rgb(211,220,0)" fg:x="16963336068" fg:w="81577419"/><text x="26.1203%" y="207.50"></text></g><g><title>[libc.so.6] (8,110,644 samples, 0.01%)</title><rect x="25.9823%" y="181" width="0.0124%" height="15" fill="rgb(229,52,16)" fg:x="17036802843" fg:w="8110644"/><text x="26.2323%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (160,661,341 samples, 0.25%)</title><rect x="25.7559%" y="373" width="0.2450%" height="15" fill="rgb(212,155,18)" fg:x="16888330597" fg:w="160661341"/><text x="26.0059%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (160,661,341 samples, 0.25%)</title><rect x="25.7559%" y="357" width="0.2450%" height="15" fill="rgb(242,21,14)" fg:x="16888330597" fg:w="160661341"/><text x="26.0059%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (160,661,341 samples, 0.25%)</title><rect x="25.7559%" y="341" width="0.2450%" height="15" fill="rgb(222,19,48)" fg:x="16888330597" fg:w="160661341"/><text x="26.0059%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (148,448,064 samples, 0.23%)</title><rect x="25.7745%" y="325" width="0.2264%" height="15" fill="rgb(232,45,27)" fg:x="16900543874" fg:w="148448064"/><text x="26.0245%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (144,392,224 samples, 0.22%)</title><rect x="25.7807%" y="309" width="0.2202%" height="15" fill="rgb(249,103,42)" fg:x="16904599714" fg:w="144392224"/><text x="26.0307%" y="319.50"></text></g><g><title>alloc::string::String::push_str (247,585,466 samples, 0.38%)</title><rect x="25.7059%" y="437" width="0.3776%" height="15" fill="rgb(246,81,33)" fg:x="16855548195" fg:w="247585466"/><text x="25.9559%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (247,585,466 samples, 0.38%)</title><rect x="25.7059%" y="421" width="0.3776%" height="15" fill="rgb(252,33,42)" fg:x="16855548195" fg:w="247585466"/><text x="25.9559%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (247,585,466 samples, 0.38%)</title><rect x="25.7059%" y="405" width="0.3776%" height="15" fill="rgb(209,212,41)" fg:x="16855548195" fg:w="247585466"/><text x="25.9559%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (247,585,466 samples, 0.38%)</title><rect x="25.7059%" y="389" width="0.3776%" height="15" fill="rgb(207,154,6)" fg:x="16855548195" fg:w="247585466"/><text x="25.9559%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54,141,723 samples, 0.08%)</title><rect x="26.0009%" y="373" width="0.0826%" height="15" fill="rgb(223,64,47)" fg:x="17048991938" fg:w="54141723"/><text x="26.2509%" y="383.50"></text></g><g><title>[libc.so.6] (50,110,675 samples, 0.08%)</title><rect x="26.0071%" y="357" width="0.0764%" height="15" fill="rgb(211,161,38)" fg:x="17053022986" fg:w="50110675"/><text x="26.2571%" y="367.50"></text></g><g><title>alloc::string::String::with_capacity (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="437" width="0.0190%" height="15" fill="rgb(219,138,40)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="421" width="0.0190%" height="15" fill="rgb(241,228,46)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="405" width="0.0190%" height="15" fill="rgb(223,209,38)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="389" width="0.0190%" height="15" fill="rgb(236,164,45)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="373" width="0.0190%" height="15" fill="rgb(231,15,5)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="357" width="0.0190%" height="15" fill="rgb(252,35,15)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="341" width="0.0190%" height="15" fill="rgb(248,181,18)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="325" width="0.0190%" height="15" fill="rgb(233,39,42)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="335.50"></text></g><g><title>alloc::alloc::alloc (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="309" width="0.0190%" height="15" fill="rgb(238,110,33)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="319.50"></text></g><g><title>malloc (12,453,478 samples, 0.02%)</title><rect x="26.0835%" y="293" width="0.0190%" height="15" fill="rgb(233,195,10)" fg:x="17103133661" fg:w="12453478"/><text x="26.3335%" y="303.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (719,221,500 samples, 1.10%)</title><rect x="25.0524%" y="453" width="1.0969%" height="15" fill="rgb(254,105,3)" fg:x="16427022932" fg:w="719221500"/><text x="25.3024%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::match_indices (30,657,293 samples, 0.05%)</title><rect x="26.1025%" y="437" width="0.0468%" height="15" fill="rgb(221,225,9)" fg:x="17115587139" fg:w="30657293"/><text x="26.3525%" y="447.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10,460,771 samples, 0.02%)</title><rect x="26.1333%" y="421" width="0.0160%" height="15" fill="rgb(224,227,45)" fg:x="17135783661" fg:w="10460771"/><text x="26.3833%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10,460,771 samples, 0.02%)</title><rect x="26.1333%" y="405" width="0.0160%" height="15" fill="rgb(229,198,43)" fg:x="17135783661" fg:w="10460771"/><text x="26.3833%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="453" width="0.0317%" height="15" fill="rgb(206,209,35)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;cellular_raza_concepts::errors::BoundaryError&gt; (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="437" width="0.0317%" height="15" fill="rgb(245,195,53)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="421" width="0.0317%" height="15" fill="rgb(240,92,26)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="405" width="0.0317%" height="15" fill="rgb(207,40,23)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="389" width="0.0317%" height="15" fill="rgb(223,111,35)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="373" width="0.0317%" height="15" fill="rgb(229,147,28)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="357" width="0.0317%" height="15" fill="rgb(211,29,28)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="341" width="0.0317%" height="15" fill="rgb(228,72,33)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="325" width="0.0317%" height="15" fill="rgb(205,214,31)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="335.50"></text></g><g><title>cfree (20,784,865 samples, 0.03%)</title><rect x="26.1492%" y="309" width="0.0317%" height="15" fill="rgb(224,111,15)" fg:x="17146244432" fg:w="20784865"/><text x="26.3992%" y="319.50"></text></g><g><title>[libc.so.6] (16,680,220 samples, 0.03%)</title><rect x="26.1555%" y="293" width="0.0254%" height="15" fill="rgb(253,21,26)" fg:x="17150349077" fg:w="16680220"/><text x="26.4055%" y="303.50"></text></g><g><title>__rdl_dealloc (8,131,814 samples, 0.01%)</title><rect x="26.1809%" y="341" width="0.0124%" height="15" fill="rgb(245,139,43)" fg:x="17167029297" fg:w="8131814"/><text x="26.4309%" y="351.50"></text></g><g><title>cellular_raza_building_blocks::domains::cartesian_cuboid_n::CartesianSubDomain&lt;F,_&gt;::get_index_of (1,672,127,868 samples, 2.55%)</title><rect x="23.7287%" y="469" width="2.5501%" height="15" fill="rgb(252,170,7)" fg:x="15559100204" fg:w="1672127868"/><text x="23.9787%" y="479.50">ce..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="453" width="0.0979%" height="15" fill="rgb(231,118,14)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="437" width="0.0979%" height="15" fill="rgb(238,83,0)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="421" width="0.0979%" height="15" fill="rgb(221,39,39)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="405" width="0.0979%" height="15" fill="rgb(222,119,46)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="389" width="0.0979%" height="15" fill="rgb(222,165,49)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="373" width="0.0979%" height="15" fill="rgb(219,113,52)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (64,198,775 samples, 0.10%)</title><rect x="26.1809%" y="357" width="0.0979%" height="15" fill="rgb(214,7,15)" fg:x="17167029297" fg:w="64198775"/><text x="26.4309%" y="367.50"></text></g><g><title>cfree (56,066,961 samples, 0.09%)</title><rect x="26.1933%" y="341" width="0.0855%" height="15" fill="rgb(235,32,4)" fg:x="17175161111" fg:w="56066961"/><text x="26.4433%" y="351.50"></text></g><g><title>[libc.so.6] (30,544,293 samples, 0.05%)</title><rect x="26.2323%" y="325" width="0.0466%" height="15" fill="rgb(238,90,54)" fg:x="17200683779" fg:w="30544293"/><text x="26.4823%" y="335.50"></text></g><g><title>[libc.so.6] (12,153,923 samples, 0.02%)</title><rect x="26.2603%" y="309" width="0.0185%" height="15" fill="rgb(213,208,19)" fg:x="17219074149" fg:w="12153923"/><text x="26.5103%" y="319.50"></text></g><g><title>[libc.so.6] (12,153,923 samples, 0.02%)</title><rect x="26.2603%" y="293" width="0.0185%" height="15" fill="rgb(233,156,4)" fg:x="17219074149" fg:w="12153923"/><text x="26.5103%" y="303.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="469" width="0.0124%" height="15" fill="rgb(207,194,5)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="479.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="453" width="0.0124%" height="15" fill="rgb(206,111,30)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="463.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="437" width="0.0124%" height="15" fill="rgb(243,70,54)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="447.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="421" width="0.0124%" height="15" fill="rgb(242,28,8)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="405" width="0.0124%" height="15" fill="rgb(219,106,18)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="389" width="0.0124%" height="15" fill="rgb(244,222,10)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="373" width="0.0124%" height="15" fill="rgb(236,179,52)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="357" width="0.0124%" height="15" fill="rgb(213,23,39)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="341" width="0.0124%" height="15" fill="rgb(238,48,10)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="325" width="0.0124%" height="15" fill="rgb(251,196,23)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="309" width="0.0124%" height="15" fill="rgb(250,152,24)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="293" width="0.0124%" height="15" fill="rgb(209,150,17)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="277" width="0.0124%" height="15" fill="rgb(234,202,34)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="261" width="0.0124%" height="15" fill="rgb(253,148,53)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="271.50"></text></g><g><title>alloc::alloc::alloc (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="245" width="0.0124%" height="15" fill="rgb(218,129,16)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="255.50"></text></g><g><title>malloc (8,099,261 samples, 0.01%)</title><rect x="26.2850%" y="229" width="0.0124%" height="15" fill="rgb(216,85,19)" fg:x="17235284271" fg:w="8099261"/><text x="26.5350%" y="239.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::CartesianSubDomainRods&lt;F,_&gt; as cellular_raza_concepts::domain::SortCells&lt;C&gt;&gt;::get_voxel_index_of (1,692,338,427 samples, 2.58%)</title><rect x="23.7287%" y="485" width="2.5809%" height="15" fill="rgb(235,228,7)" fg:x="15559100204" fg:w="1692338427"/><text x="23.9787%" y="495.50">&lt;c..</text></g><g><title>nalgebra::base::statistics::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_sum (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="469" width="0.0123%" height="15" fill="rgb(245,175,0)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="479.50"></text></g><g><title>nalgebra::base::statistics::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::compress_rows (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="453" width="0.0123%" height="15" fill="rgb(208,168,36)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="463.50"></text></g><g><title>nalgebra::base::statistics::_&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_sum::_{{closure}} (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="437" width="0.0123%" height="15" fill="rgb(246,171,24)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="447.50"></text></g><g><title>nalgebra::base::statistics::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::sum (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="421" width="0.0123%" height="15" fill="rgb(215,142,24)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="405" width="0.0123%" height="15" fill="rgb(250,187,7)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="389" width="0.0123%" height="15" fill="rgb(228,66,33)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="373" width="0.0123%" height="15" fill="rgb(234,215,21)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="383.50"></text></g><g><title>&lt;nalgebra::base::iter::MatrixIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="357" width="0.0123%" height="15" fill="rgb(222,191,20)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="367.50"></text></g><g><title>&lt;nalgebra::base::iter::RawIter&lt;*const T,T,R,C,RStride,CStride&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,055,099 samples, 0.01%)</title><rect x="26.2974%" y="341" width="0.0123%" height="15" fill="rgb(245,79,54)" fg:x="17243383532" fg:w="8055099"/><text x="26.5474%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (1,756,565,259 samples, 2.68%)</title><rect x="23.6480%" y="549" width="2.6789%" height="15" fill="rgb(240,10,37)" fg:x="15506174129" fg:w="1756565259"/><text x="23.8980%" y="559.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,756,565,259 samples, 2.68%)</title><rect x="23.6480%" y="533" width="2.6789%" height="15" fill="rgb(214,192,32)" fg:x="15506174129" fg:w="1756565259"/><text x="23.8980%" y="543.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::partition::extend::_{{closure}} (1,748,377,630 samples, 2.67%)</title><rect x="23.6605%" y="517" width="2.6664%" height="15" fill="rgb(209,36,54)" fg:x="15514361758" fg:w="1748377630"/><text x="23.9105%" y="527.50">co..</text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::_&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::sort_cells_in_voxels_step_1::_{{closure}} (1,707,718,044 samples, 2.60%)</title><rect x="23.7225%" y="501" width="2.6044%" height="15" fill="rgb(220,10,11)" fg:x="15555021344" fg:w="1707718044"/><text x="23.9725%" y="511.50">ce..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (11,300,757 samples, 0.02%)</title><rect x="26.3097%" y="485" width="0.0172%" height="15" fill="rgb(221,106,17)" fg:x="17251438631" fg:w="11300757"/><text x="26.5597%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11,300,757 samples, 0.02%)</title><rect x="26.3097%" y="469" width="0.0172%" height="15" fill="rgb(251,142,44)" fg:x="17251438631" fg:w="11300757"/><text x="26.5597%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11,300,757 samples, 0.02%)</title><rect x="26.3097%" y="453" width="0.0172%" height="15" fill="rgb(238,13,15)" fg:x="17251438631" fg:w="11300757"/><text x="26.5597%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11,300,757 samples, 0.02%)</title><rect x="26.3097%" y="437" width="0.0172%" height="15" fill="rgb(208,107,27)" fg:x="17251438631" fg:w="11300757"/><text x="26.5597%" y="447.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (8,198,626 samples, 0.01%)</title><rect x="26.3144%" y="421" width="0.0125%" height="15" fill="rgb(205,136,37)" fg:x="17254540762" fg:w="8198626"/><text x="26.5644%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (8,198,626 samples, 0.01%)</title><rect x="26.3144%" y="405" width="0.0125%" height="15" fill="rgb(250,205,27)" fg:x="17254540762" fg:w="8198626"/><text x="26.5644%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8,198,626 samples, 0.01%)</title><rect x="26.3144%" y="389" width="0.0125%" height="15" fill="rgb(210,80,43)" fg:x="17254540762" fg:w="8198626"/><text x="26.5644%" y="399.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (8,198,626 samples, 0.01%)</title><rect x="26.3144%" y="373" width="0.0125%" height="15" fill="rgb(247,160,36)" fg:x="17254540762" fg:w="8198626"/><text x="26.5644%" y="383.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::sort_cells_in_voxels_step_1 (1,773,915,198 samples, 2.71%)</title><rect x="23.6337%" y="565" width="2.7053%" height="15" fill="rgb(234,13,49)" fg:x="15496809116" fg:w="1773915198"/><text x="23.8837%" y="575.50">ce..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(cellular_raza_core::backend::chili::aux_storage::CellBox&lt;cr_mech_coli::agent::RodAgent&gt;,cr_mech_coli::simulation::_CrAuxStorage&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,2_usize&gt;)&gt;&gt; (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="549" width="0.0122%" height="15" fill="rgb(234,122,0)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(cellular_raza_core::backend::chili::aux_storage::CellBox&lt;cr_mech_coli::agent::RodAgent&gt;,cr_mech_coli::simulation::_CrAuxStorage&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,2_usize&gt;)&gt;&gt; (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="533" width="0.0122%" height="15" fill="rgb(207,146,38)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="517" width="0.0122%" height="15" fill="rgb(207,177,25)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="501" width="0.0122%" height="15" fill="rgb(211,178,42)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="485" width="0.0122%" height="15" fill="rgb(230,69,54)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="469" width="0.0122%" height="15" fill="rgb(214,135,41)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="479.50"></text></g><g><title>cfree (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="453" width="0.0122%" height="15" fill="rgb(237,67,25)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="463.50"></text></g><g><title>[libc.so.6] (7,984,926 samples, 0.01%)</title><rect x="26.3269%" y="437" width="0.0122%" height="15" fill="rgb(222,189,50)" fg:x="17262739388" fg:w="7984926"/><text x="26.5769%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="405" width="0.1142%" height="15" fill="rgb(245,148,34)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="389" width="0.1142%" height="15" fill="rgb(222,29,6)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="373" width="0.1142%" height="15" fill="rgb(221,189,43)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="357" width="0.1142%" height="15" fill="rgb(207,36,27)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="341" width="0.1142%" height="15" fill="rgb(217,90,24)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="325" width="0.1142%" height="15" fill="rgb(224,66,35)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="335.50"></text></g><g><title>alloc::alloc::alloc (74,888,475 samples, 0.11%)</title><rect x="26.3541%" y="309" width="0.1142%" height="15" fill="rgb(221,13,50)" fg:x="17280578316" fg:w="74888475"/><text x="26.6041%" y="319.50"></text></g><g><title>malloc (66,681,029 samples, 0.10%)</title><rect x="26.3666%" y="293" width="0.1017%" height="15" fill="rgb(236,68,49)" fg:x="17288785762" fg:w="66681029"/><text x="26.6166%" y="303.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="517" width="0.2103%" height="15" fill="rgb(229,146,28)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="501" width="0.2103%" height="15" fill="rgb(225,31,38)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="485" width="0.2103%" height="15" fill="rgb(250,208,3)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="469" width="0.2103%" height="15" fill="rgb(246,54,23)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="453" width="0.2103%" height="15" fill="rgb(243,76,11)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="437" width="0.2103%" height="15" fill="rgb(245,21,50)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (137,915,427 samples, 0.21%)</title><rect x="26.3541%" y="421" width="0.2103%" height="15" fill="rgb(228,9,43)" fg:x="17280578316" fg:w="137915427"/><text x="26.6041%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (63,026,952 samples, 0.10%)</title><rect x="26.4683%" y="405" width="0.0961%" height="15" fill="rgb(208,100,47)" fg:x="17355466791" fg:w="63026952"/><text x="26.7183%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63,026,952 samples, 0.10%)</title><rect x="26.4683%" y="389" width="0.0961%" height="15" fill="rgb(232,26,8)" fg:x="17355466791" fg:w="63026952"/><text x="26.7183%" y="399.50"></text></g><g><title>[libc.so.6] (58,999,723 samples, 0.09%)</title><rect x="26.4745%" y="373" width="0.0900%" height="15" fill="rgb(216,166,38)" fg:x="17359494020" fg:w="58999723"/><text x="26.7245%" y="383.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xa (154,264,751 samples, 0.24%)</title><rect x="26.3541%" y="549" width="0.2353%" height="15" fill="rgb(251,202,51)" fg:x="17280578316" fg:w="154264751"/><text x="26.6041%" y="559.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (154,264,751 samples, 0.24%)</title><rect x="26.3541%" y="533" width="0.2353%" height="15" fill="rgb(254,216,34)" fg:x="17280578316" fg:w="154264751"/><text x="26.6041%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (16,349,324 samples, 0.02%)</title><rect x="26.5644%" y="517" width="0.0249%" height="15" fill="rgb(251,32,27)" fg:x="17418493743" fg:w="16349324"/><text x="26.8144%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (8,176,257 samples, 0.01%)</title><rect x="26.5769%" y="501" width="0.0125%" height="15" fill="rgb(208,127,28)" fg:x="17426666810" fg:w="8176257"/><text x="26.8269%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8,199,178 samples, 0.01%)</title><rect x="26.5894%" y="517" width="0.0125%" height="15" fill="rgb(224,137,22)" fg:x="17434843067" fg:w="8199178"/><text x="26.8394%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8,199,178 samples, 0.01%)</title><rect x="26.5894%" y="501" width="0.0125%" height="15" fill="rgb(254,70,32)" fg:x="17434843067" fg:w="8199178"/><text x="26.8394%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8,199,178 samples, 0.01%)</title><rect x="26.5894%" y="485" width="0.0125%" height="15" fill="rgb(229,75,37)" fg:x="17434843067" fg:w="8199178"/><text x="26.8394%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (12,301,358 samples, 0.02%)</title><rect x="26.5894%" y="549" width="0.0188%" height="15" fill="rgb(252,64,23)" fg:x="17434843067" fg:w="12301358"/><text x="26.8394%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (12,301,358 samples, 0.02%)</title><rect x="26.5894%" y="533" width="0.0188%" height="15" fill="rgb(232,162,48)" fg:x="17434843067" fg:w="12301358"/><text x="26.8394%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (8,155,134 samples, 0.01%)</title><rect x="26.6081%" y="501" width="0.0124%" height="15" fill="rgb(246,160,12)" fg:x="17447144425" fg:w="8155134"/><text x="26.8581%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,704,579 samples, 0.03%)</title><rect x="26.6081%" y="549" width="0.0270%" height="15" fill="rgb(247,166,0)" fg:x="17447144425" fg:w="17704579"/><text x="26.8581%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (17,704,579 samples, 0.03%)</title><rect x="26.6081%" y="533" width="0.0270%" height="15" fill="rgb(249,219,21)" fg:x="17447144425" fg:w="17704579"/><text x="26.8581%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (17,704,579 samples, 0.03%)</title><rect x="26.6081%" y="517" width="0.0270%" height="15" fill="rgb(205,209,3)" fg:x="17447144425" fg:w="17704579"/><text x="26.8581%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="501" width="0.0146%" height="15" fill="rgb(243,44,1)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="485" width="0.0146%" height="15" fill="rgb(206,159,16)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="495.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="469" width="0.0146%" height="15" fill="rgb(244,77,30)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="453" width="0.0146%" height="15" fill="rgb(218,69,12)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="437" width="0.0146%" height="15" fill="rgb(212,87,7)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="421" width="0.0146%" height="15" fill="rgb(245,114,25)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="405" width="0.0146%" height="15" fill="rgb(210,61,42)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="415.50"></text></g><g><title>alloc::alloc::alloc (9,549,445 samples, 0.01%)</title><rect x="26.6206%" y="389" width="0.0146%" height="15" fill="rgb(211,52,33)" fg:x="17455299559" fg:w="9549445"/><text x="26.8706%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,665,457 samples, 0.01%)</title><rect x="26.6351%" y="549" width="0.0147%" height="15" fill="rgb(234,58,33)" fg:x="17464849004" fg:w="9665457"/><text x="26.8851%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,665,457 samples, 0.01%)</title><rect x="26.6351%" y="533" width="0.0147%" height="15" fill="rgb(220,115,36)" fg:x="17464849004" fg:w="9665457"/><text x="26.8851%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,665,457 samples, 0.01%)</title><rect x="26.6351%" y="517" width="0.0147%" height="15" fill="rgb(243,153,54)" fg:x="17464849004" fg:w="9665457"/><text x="26.8851%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (9,665,439 samples, 0.01%)</title><rect x="26.6351%" y="501" width="0.0147%" height="15" fill="rgb(251,47,18)" fg:x="17464849022" fg:w="9665439"/><text x="26.8851%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9,665,439 samples, 0.01%)</title><rect x="26.6351%" y="485" width="0.0147%" height="15" fill="rgb(242,102,42)" fg:x="17464849022" fg:w="9665439"/><text x="26.8851%" y="495.50"></text></g><g><title>alloc::collections::btree::mem::replace (9,665,439 samples, 0.01%)</title><rect x="26.6351%" y="469" width="0.0147%" height="15" fill="rgb(234,31,38)" fg:x="17464849022" fg:w="9665439"/><text x="26.8851%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (9,665,439 samples, 0.01%)</title><rect x="26.6351%" y="453" width="0.0147%" height="15" fill="rgb(221,117,51)" fg:x="17464849022" fg:w="9665439"/><text x="26.8851%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (9,665,439 samples, 0.01%)</title><rect x="26.6351%" y="437" width="0.0147%" height="15" fill="rgb(212,20,18)" fg:x="17464849022" fg:w="9665439"/><text x="26.8851%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="501" width="0.0311%" height="15" fill="rgb(245,133,36)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="485" width="0.0311%" height="15" fill="rgb(212,6,19)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="469" width="0.0311%" height="15" fill="rgb(218,1,36)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="453" width="0.0311%" height="15" fill="rgb(246,84,54)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="437" width="0.0311%" height="15" fill="rgb(242,110,6)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="421" width="0.0311%" height="15" fill="rgb(214,47,5)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="405" width="0.0311%" height="15" fill="rgb(218,159,25)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (20,423,968 samples, 0.03%)</title><rect x="26.6561%" y="389" width="0.0311%" height="15" fill="rgb(215,211,28)" fg:x="17478575520" fg:w="20423968"/><text x="26.9061%" y="399.50"></text></g><g><title>cfree (12,261,353 samples, 0.02%)</title><rect x="26.6685%" y="373" width="0.0187%" height="15" fill="rgb(238,59,32)" fg:x="17486738135" fg:w="12261353"/><text x="26.9185%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (20,409,249 samples, 0.03%)</title><rect x="26.6872%" y="469" width="0.0311%" height="15" fill="rgb(226,82,3)" fg:x="17498999488" fg:w="20409249"/><text x="26.9372%" y="479.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (8,128,984 samples, 0.01%)</title><rect x="26.7183%" y="469" width="0.0124%" height="15" fill="rgb(240,164,32)" fg:x="17519408737" fg:w="8128984"/><text x="26.9683%" y="479.50"></text></g><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (53,038,644 samples, 0.08%)</title><rect x="26.6561%" y="549" width="0.0809%" height="15" fill="rgb(232,46,7)" fg:x="17478575520" fg:w="53038644"/><text x="26.9061%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (53,038,644 samples, 0.08%)</title><rect x="26.6561%" y="533" width="0.0809%" height="15" fill="rgb(229,129,53)" fg:x="17478575520" fg:w="53038644"/><text x="26.9061%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (53,038,644 samples, 0.08%)</title><rect x="26.6561%" y="517" width="0.0809%" height="15" fill="rgb(234,188,29)" fg:x="17478575520" fg:w="53038644"/><text x="26.9061%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (32,614,676 samples, 0.05%)</title><rect x="26.6872%" y="501" width="0.0497%" height="15" fill="rgb(246,141,4)" fg:x="17498999488" fg:w="32614676"/><text x="26.9372%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (32,614,676 samples, 0.05%)</title><rect x="26.6872%" y="485" width="0.0497%" height="15" fill="rgb(229,23,39)" fg:x="17498999488" fg:w="32614676"/><text x="26.9372%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="453" width="0.0678%" height="15" fill="rgb(206,12,3)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="437" width="0.0678%" height="15" fill="rgb(252,226,20)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="421" width="0.0678%" height="15" fill="rgb(216,123,35)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="405" width="0.0678%" height="15" fill="rgb(212,68,40)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="389" width="0.0678%" height="15" fill="rgb(254,125,32)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="373" width="0.0678%" height="15" fill="rgb(253,97,22)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="383.50"></text></g><g><title>alloc::alloc::alloc (44,425,671 samples, 0.07%)</title><rect x="26.7370%" y="357" width="0.0678%" height="15" fill="rgb(241,101,14)" fg:x="17531614164" fg:w="44425671"/><text x="26.9870%" y="367.50"></text></g><g><title>malloc (40,413,349 samples, 0.06%)</title><rect x="26.7431%" y="341" width="0.0616%" height="15" fill="rgb(238,103,29)" fg:x="17535626486" fg:w="40413349"/><text x="26.9931%" y="351.50"></text></g><g><title>[libc.so.6] (12,032,037 samples, 0.02%)</title><rect x="26.7864%" y="325" width="0.0183%" height="15" fill="rgb(233,195,47)" fg:x="17564007798" fg:w="12032037"/><text x="27.0364%" y="335.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="549" width="0.1283%" height="15" fill="rgb(246,218,30)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="559.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="533" width="0.1283%" height="15" fill="rgb(219,145,47)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="517" width="0.1283%" height="15" fill="rgb(243,12,26)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="501" width="0.1283%" height="15" fill="rgb(214,87,16)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="485" width="0.1283%" height="15" fill="rgb(208,99,42)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84,151,350 samples, 0.13%)</title><rect x="26.7370%" y="469" width="0.1283%" height="15" fill="rgb(253,99,2)" fg:x="17531614164" fg:w="84151350"/><text x="26.9870%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39,725,679 samples, 0.06%)</title><rect x="26.8047%" y="453" width="0.0606%" height="15" fill="rgb(220,168,23)" fg:x="17576039835" fg:w="39725679"/><text x="27.0547%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39,725,679 samples, 0.06%)</title><rect x="26.8047%" y="437" width="0.0606%" height="15" fill="rgb(242,38,24)" fg:x="17576039835" fg:w="39725679"/><text x="27.0547%" y="447.50"></text></g><g><title>[libc.so.6] (39,725,679 samples, 0.06%)</title><rect x="26.8047%" y="421" width="0.0606%" height="15" fill="rgb(225,182,9)" fg:x="17576039835" fg:w="39725679"/><text x="27.0547%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8,136,276 samples, 0.01%)</title><rect x="26.8653%" y="533" width="0.0124%" height="15" fill="rgb(243,178,37)" fg:x="17615765514" fg:w="8136276"/><text x="27.1153%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8,136,276 samples, 0.01%)</title><rect x="26.8653%" y="517" width="0.0124%" height="15" fill="rgb(232,139,19)" fg:x="17615765514" fg:w="8136276"/><text x="27.1153%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8,136,276 samples, 0.01%)</title><rect x="26.8653%" y="501" width="0.0124%" height="15" fill="rgb(225,201,24)" fg:x="17615765514" fg:w="8136276"/><text x="27.1153%" y="511.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::VoxelPlainIndex as core::cmp::Ord&gt;::cmp (8,136,276 samples, 0.01%)</title><rect x="26.8653%" y="485" width="0.0124%" height="15" fill="rgb(221,47,46)" fg:x="17615765514" fg:w="8136276"/><text x="27.1153%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (8,136,276 samples, 0.01%)</title><rect x="26.8653%" y="469" width="0.0124%" height="15" fill="rgb(249,23,13)" fg:x="17615765514" fg:w="8136276"/><text x="27.1153%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (12,203,460 samples, 0.02%)</title><rect x="26.8653%" y="549" width="0.0186%" height="15" fill="rgb(219,9,5)" fg:x="17615765514" fg:w="12203460"/><text x="27.1153%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40,723,888 samples, 0.06%)</title><rect x="26.9159%" y="389" width="0.0621%" height="15" fill="rgb(254,171,16)" fg:x="17648928546" fg:w="40723888"/><text x="27.1659%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40,723,888 samples, 0.06%)</title><rect x="26.9159%" y="373" width="0.0621%" height="15" fill="rgb(230,171,20)" fg:x="17648928546" fg:w="40723888"/><text x="27.1659%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (40,723,888 samples, 0.06%)</title><rect x="26.9159%" y="357" width="0.0621%" height="15" fill="rgb(210,71,41)" fg:x="17648928546" fg:w="40723888"/><text x="27.1659%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (40,723,888 samples, 0.06%)</title><rect x="26.9159%" y="341" width="0.0621%" height="15" fill="rgb(206,173,20)" fg:x="17648928546" fg:w="40723888"/><text x="27.1659%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36,657,865 samples, 0.06%)</title><rect x="26.9221%" y="325" width="0.0559%" height="15" fill="rgb(233,88,34)" fg:x="17652994569" fg:w="36657865"/><text x="27.1721%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36,657,865 samples, 0.06%)</title><rect x="26.9221%" y="309" width="0.0559%" height="15" fill="rgb(223,209,46)" fg:x="17652994569" fg:w="36657865"/><text x="27.1721%" y="319.50"></text></g><g><title>alloc::alloc::alloc (36,657,865 samples, 0.06%)</title><rect x="26.9221%" y="293" width="0.0559%" height="15" fill="rgb(250,43,18)" fg:x="17652994569" fg:w="36657865"/><text x="27.1721%" y="303.50"></text></g><g><title>malloc (36,657,865 samples, 0.06%)</title><rect x="26.9221%" y="277" width="0.0559%" height="15" fill="rgb(208,13,10)" fg:x="17652994569" fg:w="36657865"/><text x="27.1721%" y="287.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="501" width="0.1742%" height="15" fill="rgb(212,200,36)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="485" width="0.1742%" height="15" fill="rgb(225,90,30)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="495.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="469" width="0.1742%" height="15" fill="rgb(236,182,39)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="453" width="0.1742%" height="15" fill="rgb(212,144,35)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="437" width="0.1742%" height="15" fill="rgb(228,63,44)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="421" width="0.1742%" height="15" fill="rgb(228,109,6)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (114,247,868 samples, 0.17%)</title><rect x="26.9159%" y="405" width="0.1742%" height="15" fill="rgb(238,117,24)" fg:x="17648928546" fg:w="114247868"/><text x="27.1659%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (73,523,980 samples, 0.11%)</title><rect x="26.9780%" y="389" width="0.1121%" height="15" fill="rgb(242,26,26)" fg:x="17689652434" fg:w="73523980"/><text x="27.2280%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73,523,980 samples, 0.11%)</title><rect x="26.9780%" y="373" width="0.1121%" height="15" fill="rgb(221,92,48)" fg:x="17689652434" fg:w="73523980"/><text x="27.2280%" y="383.50"></text></g><g><title>[libc.so.6] (73,523,980 samples, 0.11%)</title><rect x="26.9780%" y="357" width="0.1121%" height="15" fill="rgb(209,209,32)" fg:x="17689652434" fg:w="73523980"/><text x="27.2280%" y="367.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xa (130,484,453 samples, 0.20%)</title><rect x="26.9159%" y="533" width="0.1990%" height="15" fill="rgb(221,70,22)" fg:x="17648928546" fg:w="130484453"/><text x="27.1659%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (130,484,453 samples, 0.20%)</title><rect x="26.9159%" y="517" width="0.1990%" height="15" fill="rgb(248,145,5)" fg:x="17648928546" fg:w="130484453"/><text x="27.1659%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (16,236,585 samples, 0.02%)</title><rect x="27.0901%" y="501" width="0.0248%" height="15" fill="rgb(226,116,26)" fg:x="17763176414" fg:w="16236585"/><text x="27.3401%" y="511.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (8,157,525 samples, 0.01%)</title><rect x="27.1211%" y="501" width="0.0124%" height="15" fill="rgb(244,5,17)" fg:x="17783494350" fg:w="8157525"/><text x="27.3711%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (8,157,525 samples, 0.01%)</title><rect x="27.1211%" y="485" width="0.0124%" height="15" fill="rgb(252,159,33)" fg:x="17783494350" fg:w="8157525"/><text x="27.3711%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (24,505,042 samples, 0.04%)</title><rect x="27.1149%" y="517" width="0.0374%" height="15" fill="rgb(206,71,0)" fg:x="17779412999" fg:w="24505042"/><text x="27.3649%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (12,266,166 samples, 0.02%)</title><rect x="27.1335%" y="501" width="0.0187%" height="15" fill="rgb(233,118,54)" fg:x="17791651875" fg:w="12266166"/><text x="27.3835%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,196,477 samples, 0.01%)</title><rect x="27.1397%" y="485" width="0.0125%" height="15" fill="rgb(234,83,48)" fg:x="17795721564" fg:w="8196477"/><text x="27.3897%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,196,477 samples, 0.01%)</title><rect x="27.1397%" y="469" width="0.0125%" height="15" fill="rgb(228,3,54)" fg:x="17795721564" fg:w="8196477"/><text x="27.3897%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57,186,819 samples, 0.09%)</title><rect x="27.1522%" y="389" width="0.0872%" height="15" fill="rgb(226,155,13)" fg:x="17803918041" fg:w="57186819"/><text x="27.4022%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57,186,819 samples, 0.09%)</title><rect x="27.1522%" y="373" width="0.0872%" height="15" fill="rgb(241,28,37)" fg:x="17803918041" fg:w="57186819"/><text x="27.4022%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (57,186,819 samples, 0.09%)</title><rect x="27.1522%" y="357" width="0.0872%" height="15" fill="rgb(233,93,10)" fg:x="17803918041" fg:w="57186819"/><text x="27.4022%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (57,186,819 samples, 0.09%)</title><rect x="27.1522%" y="341" width="0.0872%" height="15" fill="rgb(225,113,19)" fg:x="17803918041" fg:w="57186819"/><text x="27.4022%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49,015,709 samples, 0.07%)</title><rect x="27.1647%" y="325" width="0.0748%" height="15" fill="rgb(241,2,18)" fg:x="17812089151" fg:w="49015709"/><text x="27.4147%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49,015,709 samples, 0.07%)</title><rect x="27.1647%" y="309" width="0.0748%" height="15" fill="rgb(228,207,21)" fg:x="17812089151" fg:w="49015709"/><text x="27.4147%" y="319.50"></text></g><g><title>alloc::alloc::alloc (49,015,709 samples, 0.07%)</title><rect x="27.1647%" y="293" width="0.0748%" height="15" fill="rgb(213,211,35)" fg:x="17812089151" fg:w="49015709"/><text x="27.4147%" y="303.50"></text></g><g><title>malloc (40,818,374 samples, 0.06%)</title><rect x="27.1772%" y="277" width="0.0623%" height="15" fill="rgb(209,83,10)" fg:x="17820286486" fg:w="40818374"/><text x="27.4272%" y="287.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="501" width="0.1561%" height="15" fill="rgb(209,164,1)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="485" width="0.1561%" height="15" fill="rgb(213,184,43)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="495.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="469" width="0.1561%" height="15" fill="rgb(231,61,34)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="453" width="0.1561%" height="15" fill="rgb(235,75,3)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="437" width="0.1561%" height="15" fill="rgb(220,106,47)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="421" width="0.1561%" height="15" fill="rgb(210,196,33)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102,386,861 samples, 0.16%)</title><rect x="27.1522%" y="405" width="0.1561%" height="15" fill="rgb(229,154,42)" fg:x="17803918041" fg:w="102386861"/><text x="27.4022%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45,200,042 samples, 0.07%)</title><rect x="27.2395%" y="389" width="0.0689%" height="15" fill="rgb(228,114,26)" fg:x="17861104860" fg:w="45200042"/><text x="27.4895%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45,200,042 samples, 0.07%)</title><rect x="27.2395%" y="373" width="0.0689%" height="15" fill="rgb(208,144,1)" fg:x="17861104860" fg:w="45200042"/><text x="27.4895%" y="383.50"></text></g><g><title>[libc.so.6] (41,142,940 samples, 0.06%)</title><rect x="27.2456%" y="357" width="0.0627%" height="15" fill="rgb(239,112,37)" fg:x="17865161962" fg:w="41142940"/><text x="27.4956%" y="367.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xapy (143,262,621 samples, 0.22%)</title><rect x="27.1149%" y="533" width="0.2185%" height="15" fill="rgb(210,96,50)" fg:x="17779412999" fg:w="143262621"/><text x="27.3649%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (118,757,579 samples, 0.18%)</title><rect x="27.1522%" y="517" width="0.1811%" height="15" fill="rgb(222,178,2)" fg:x="17803918041" fg:w="118757579"/><text x="27.4022%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (16,370,718 samples, 0.02%)</title><rect x="27.3084%" y="501" width="0.0250%" height="15" fill="rgb(226,74,18)" fg:x="17906304902" fg:w="16370718"/><text x="27.5584%" y="511.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (8,232,383 samples, 0.01%)</title><rect x="27.3208%" y="485" width="0.0126%" height="15" fill="rgb(225,67,54)" fg:x="17914443237" fg:w="8232383"/><text x="27.5708%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (57,189,553 samples, 0.09%)</title><rect x="27.3334%" y="533" width="0.0872%" height="15" fill="rgb(251,92,32)" fg:x="17922675620" fg:w="57189553"/><text x="27.5834%" y="543.50"></text></g><g><title>__rdl_dealloc (8,202,264 samples, 0.01%)</title><rect x="27.4206%" y="357" width="0.0125%" height="15" fill="rgb(228,149,22)" fg:x="17979865173" fg:w="8202264"/><text x="27.6706%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="485" width="0.0374%" height="15" fill="rgb(243,54,13)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="469" width="0.0374%" height="15" fill="rgb(243,180,28)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="453" width="0.0374%" height="15" fill="rgb(208,167,24)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="437" width="0.0374%" height="15" fill="rgb(245,73,45)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="421" width="0.0374%" height="15" fill="rgb(237,203,48)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="405" width="0.0374%" height="15" fill="rgb(211,197,16)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="389" width="0.0374%" height="15" fill="rgb(243,99,51)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (24,542,606 samples, 0.04%)</title><rect x="27.4206%" y="373" width="0.0374%" height="15" fill="rgb(215,123,29)" fg:x="17979865173" fg:w="24542606"/><text x="27.6706%" y="383.50"></text></g><g><title>cfree (16,340,342 samples, 0.02%)</title><rect x="27.4331%" y="357" width="0.0249%" height="15" fill="rgb(239,186,37)" fg:x="17988067437" fg:w="16340342"/><text x="27.6831%" y="367.50"></text></g><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (40,849,349 samples, 0.06%)</title><rect x="27.4206%" y="533" width="0.0623%" height="15" fill="rgb(252,136,39)" fg:x="17979865173" fg:w="40849349"/><text x="27.6706%" y="543.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (40,849,349 samples, 0.06%)</title><rect x="27.4206%" y="517" width="0.0623%" height="15" fill="rgb(223,213,32)" fg:x="17979865173" fg:w="40849349"/><text x="27.6706%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (40,849,349 samples, 0.06%)</title><rect x="27.4206%" y="501" width="0.0623%" height="15" fill="rgb(233,115,5)" fg:x="17979865173" fg:w="40849349"/><text x="27.6706%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (16,306,743 samples, 0.02%)</title><rect x="27.4580%" y="485" width="0.0249%" height="15" fill="rgb(207,226,44)" fg:x="18004407779" fg:w="16306743"/><text x="27.7080%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (16,306,743 samples, 0.02%)</title><rect x="27.4580%" y="469" width="0.0249%" height="15" fill="rgb(208,126,0)" fg:x="18004407779" fg:w="16306743"/><text x="27.7080%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,217,870 samples, 0.02%)</title><rect x="27.4642%" y="453" width="0.0186%" height="15" fill="rgb(244,66,21)" fg:x="18008496652" fg:w="12217870"/><text x="27.7142%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,217,870 samples, 0.02%)</title><rect x="27.4642%" y="437" width="0.0186%" height="15" fill="rgb(222,97,12)" fg:x="18008496652" fg:w="12217870"/><text x="27.7142%" y="447.50"></text></g><g><title>__rdl_dealloc (20,362,543 samples, 0.03%)</title><rect x="27.4829%" y="405" width="0.0311%" height="15" fill="rgb(219,213,19)" fg:x="18020714522" fg:w="20362543"/><text x="27.7329%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12,217,984 samples, 0.02%)</title><rect x="27.4953%" y="389" width="0.0186%" height="15" fill="rgb(252,169,30)" fg:x="18028859081" fg:w="12217984"/><text x="27.7453%" y="399.50"></text></g><g><title>__rust_dealloc (8,150,840 samples, 0.01%)</title><rect x="27.5139%" y="405" width="0.0124%" height="15" fill="rgb(206,32,51)" fg:x="18041077065" fg:w="8150840"/><text x="27.7639%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (166,540,790 samples, 0.25%)</title><rect x="27.4829%" y="437" width="0.2540%" height="15" fill="rgb(250,172,42)" fg:x="18020714522" fg:w="166540790"/><text x="27.7329%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (166,540,790 samples, 0.25%)</title><rect x="27.4829%" y="421" width="0.2540%" height="15" fill="rgb(209,34,43)" fg:x="18020714522" fg:w="166540790"/><text x="27.7329%" y="431.50"></text></g><g><title>cfree (138,027,407 samples, 0.21%)</title><rect x="27.5264%" y="405" width="0.2105%" height="15" fill="rgb(223,11,35)" fg:x="18049227905" fg:w="138027407"/><text x="27.7764%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="533" width="0.2602%" height="15" fill="rgb(251,219,26)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="517" width="0.2602%" height="15" fill="rgb(231,119,3)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="501" width="0.2602%" height="15" fill="rgb(216,97,11)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="485" width="0.2602%" height="15" fill="rgb(223,59,9)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="469" width="0.2602%" height="15" fill="rgb(233,93,31)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (170,636,906 samples, 0.26%)</title><rect x="27.4829%" y="453" width="0.2602%" height="15" fill="rgb(239,81,33)" fg:x="18020714522" fg:w="170636906"/><text x="27.7329%" y="463.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (112,203,277 samples, 0.17%)</title><rect x="28.4302%" y="485" width="0.1711%" height="15" fill="rgb(213,120,34)" fg:x="18641871432" fg:w="112203277"/><text x="28.6802%" y="495.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (112,203,277 samples, 0.17%)</title><rect x="28.4302%" y="469" width="0.1711%" height="15" fill="rgb(243,49,53)" fg:x="18641871432" fg:w="112203277"/><text x="28.6802%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="453" width="0.0479%" height="15" fill="rgb(247,216,33)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="437" width="0.0479%" height="15" fill="rgb(226,26,14)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="421" width="0.0479%" height="15" fill="rgb(215,49,53)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="431.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="405" width="0.0479%" height="15" fill="rgb(245,162,40)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="415.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="389" width="0.0479%" height="15" fill="rgb(229,68,17)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="373" width="0.0479%" height="15" fill="rgb(213,182,10)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="383.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="357" width="0.0479%" height="15" fill="rgb(245,125,30)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="341" width="0.0479%" height="15" fill="rgb(232,202,2)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (31,412,036 samples, 0.05%)</title><rect x="28.5534%" y="325" width="0.0479%" height="15" fill="rgb(237,140,51)" fg:x="18722662673" fg:w="31412036"/><text x="28.8034%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (120,343,762 samples, 0.18%)</title><rect x="28.4302%" y="501" width="0.1835%" height="15" fill="rgb(236,157,25)" fg:x="18641871432" fg:w="120343762"/><text x="28.6802%" y="511.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="485" width="0.0124%" height="15" fill="rgb(219,209,0)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="469" width="0.0124%" height="15" fill="rgb(240,116,54)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="453" width="0.0124%" height="15" fill="rgb(216,10,36)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="437" width="0.0124%" height="15" fill="rgb(222,72,44)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="421" width="0.0124%" height="15" fill="rgb(232,159,9)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="431.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="405" width="0.0124%" height="15" fill="rgb(210,39,32)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="389" width="0.0124%" height="15" fill="rgb(216,194,45)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="373" width="0.0124%" height="15" fill="rgb(218,18,35)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="357" width="0.0124%" height="15" fill="rgb(207,83,51)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (8,140,485 samples, 0.01%)</title><rect x="28.6013%" y="341" width="0.0124%" height="15" fill="rgb(225,63,43)" fg:x="18754074709" fg:w="8140485"/><text x="28.8513%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (81,403,488 samples, 0.12%)</title><rect x="28.6137%" y="501" width="0.1241%" height="15" fill="rgb(207,57,36)" fg:x="18762215194" fg:w="81403488"/><text x="28.8637%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (16,331,373 samples, 0.02%)</title><rect x="29.7835%" y="453" width="0.0249%" height="15" fill="rgb(216,99,33)" fg:x="19529230260" fg:w="16331373"/><text x="30.0335%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1,743,049,313 samples, 2.66%)</title><rect x="29.8084%" y="453" width="2.6583%" height="15" fill="rgb(225,42,16)" fg:x="19545561633" fg:w="1743049313"/><text x="30.0584%" y="463.50">co..</text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (312,420,051 samples, 0.48%)</title><rect x="32.4666%" y="437" width="0.4765%" height="15" fill="rgb(220,201,45)" fg:x="21288610946" fg:w="312420051"/><text x="32.7166%" y="447.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (312,420,051 samples, 0.48%)</title><rect x="32.4666%" y="421" width="0.4765%" height="15" fill="rgb(225,33,4)" fg:x="21288610946" fg:w="312420051"/><text x="32.7166%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (312,420,051 samples, 0.48%)</title><rect x="32.4666%" y="405" width="0.4765%" height="15" fill="rgb(224,33,50)" fg:x="21288610946" fg:w="312420051"/><text x="32.7166%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (686,489,838 samples, 1.05%)</title><rect x="32.9431%" y="389" width="1.0469%" height="15" fill="rgb(246,198,51)" fg:x="21601030997" fg:w="686489838"/><text x="33.1931%" y="399.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (1,374,903,484 samples, 2.10%)</title><rect x="32.4666%" y="453" width="2.0968%" height="15" fill="rgb(205,22,4)" fg:x="21288610946" fg:w="1374903484"/><text x="32.7166%" y="463.50">n..</text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (1,062,483,433 samples, 1.62%)</title><rect x="32.9431%" y="437" width="1.6204%" height="15" fill="rgb(206,3,8)" fg:x="21601030997" fg:w="1062483433"/><text x="33.1931%" y="447.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (1,062,483,433 samples, 1.62%)</title><rect x="32.9431%" y="421" width="1.6204%" height="15" fill="rgb(251,23,15)" fg:x="21601030997" fg:w="1062483433"/><text x="33.1931%" y="431.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (1,062,483,433 samples, 1.62%)</title><rect x="32.9431%" y="405" width="1.6204%" height="15" fill="rgb(252,88,28)" fg:x="21601030997" fg:w="1062483433"/><text x="33.1931%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (375,993,595 samples, 0.57%)</title><rect x="33.9901%" y="389" width="0.5734%" height="15" fill="rgb(212,127,14)" fg:x="22287520835" fg:w="375993595"/><text x="34.2401%" y="399.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (5,762,888,220 samples, 8.79%)</title><rect x="28.7379%" y="501" width="8.7888%" height="15" fill="rgb(247,145,37)" fg:x="18843618682" fg:w="5762888220"/><text x="28.9879%" y="511.50">&lt;cr_mech_col..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::interaction::MorsePotentialF32 as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (5,241,323,969 samples, 7.99%)</title><rect x="29.5333%" y="485" width="7.9934%" height="15" fill="rgb(209,117,53)" fg:x="19365182933" fg:w="5241323969"/><text x="29.7833%" y="495.50">&lt;cellular_r..</text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::calculate_morse_interaction (5,241,323,969 samples, 7.99%)</title><rect x="29.5333%" y="469" width="7.9934%" height="15" fill="rgb(212,90,42)" fg:x="19365182933" fg:w="5241323969"/><text x="29.7833%" y="479.50">cellular_ra..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (1,942,992,472 samples, 2.96%)</title><rect x="34.5635%" y="453" width="2.9632%" height="15" fill="rgb(218,164,37)" fg:x="22663514430" fg:w="1942992472"/><text x="34.8135%" y="463.50">nal..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_to_statically_unchecked_uninit (1,942,992,472 samples, 2.96%)</title><rect x="34.5635%" y="437" width="2.9632%" height="15" fill="rgb(246,65,34)" fg:x="22663514430" fg:w="1942992472"/><text x="34.8135%" y="447.50">nal..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (1,938,901,454 samples, 2.96%)</title><rect x="34.5697%" y="421" width="2.9570%" height="15" fill="rgb(231,100,33)" fg:x="22667605448" fg:w="1938901454"/><text x="34.8197%" y="431.50">cor..</text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (159,477,772 samples, 0.24%)</title><rect x="39.1317%" y="485" width="0.2432%" height="15" fill="rgb(228,126,14)" fg:x="25658931423" fg:w="159477772"/><text x="39.3817%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::real::RealField&gt;::clamp (23,001,066 samples, 0.04%)</title><rect x="39.3811%" y="485" width="0.0351%" height="15" fill="rgb(215,173,21)" fg:x="25822469917" fg:w="23001066"/><text x="39.6311%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (73,720,267 samples, 0.11%)</title><rect x="39.4162%" y="453" width="0.1124%" height="15" fill="rgb(210,6,40)" fg:x="25845470998" fg:w="73720267"/><text x="39.6662%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (117,471,272 samples, 0.18%)</title><rect x="39.4162%" y="485" width="0.1792%" height="15" fill="rgb(212,48,18)" fg:x="25845470998" fg:w="117471272"/><text x="39.6662%" y="495.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (117,471,272 samples, 0.18%)</title><rect x="39.4162%" y="469" width="0.1792%" height="15" fill="rgb(230,214,11)" fg:x="25845470998" fg:w="117471272"/><text x="39.6662%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (43,751,005 samples, 0.07%)</title><rect x="39.5286%" y="453" width="0.0667%" height="15" fill="rgb(254,105,39)" fg:x="25919191265" fg:w="43751005"/><text x="39.7786%" y="463.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (122,231,110 samples, 0.19%)</title><rect x="39.5953%" y="469" width="0.1864%" height="15" fill="rgb(245,158,5)" fg:x="25962942270" fg:w="122231110"/><text x="39.8453%" y="479.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (122,231,110 samples, 0.19%)</title><rect x="39.5953%" y="453" width="0.1864%" height="15" fill="rgb(249,208,11)" fg:x="25962942270" fg:w="122231110"/><text x="39.8453%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (122,231,110 samples, 0.19%)</title><rect x="39.5953%" y="437" width="0.1864%" height="15" fill="rgb(210,39,28)" fg:x="25962942270" fg:w="122231110"/><text x="39.8453%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (222,514,495 samples, 0.34%)</title><rect x="39.7817%" y="421" width="0.3394%" height="15" fill="rgb(211,56,53)" fg:x="26085173380" fg:w="222514495"/><text x="40.0317%" y="431.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (565,116,909 samples, 0.86%)</title><rect x="39.5953%" y="485" width="0.8618%" height="15" fill="rgb(226,201,30)" fg:x="25962942270" fg:w="565116909"/><text x="39.8453%" y="495.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (442,885,799 samples, 0.68%)</title><rect x="39.7817%" y="469" width="0.6754%" height="15" fill="rgb(239,101,34)" fg:x="26085173380" fg:w="442885799"/><text x="40.0317%" y="479.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (442,885,799 samples, 0.68%)</title><rect x="39.7817%" y="453" width="0.6754%" height="15" fill="rgb(226,209,5)" fg:x="26085173380" fg:w="442885799"/><text x="40.0317%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (442,885,799 samples, 0.68%)</title><rect x="39.7817%" y="437" width="0.6754%" height="15" fill="rgb(250,105,47)" fg:x="26085173380" fg:w="442885799"/><text x="40.0317%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (220,371,304 samples, 0.34%)</title><rect x="40.1211%" y="421" width="0.3361%" height="15" fill="rgb(230,72,3)" fg:x="26307687875" fg:w="220371304"/><text x="40.3711%" y="431.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (44,826,587 samples, 0.07%)</title><rect x="40.4572%" y="485" width="0.0684%" height="15" fill="rgb(232,218,39)" fg:x="26528059179" fg:w="44826587"/><text x="40.7072%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (44,826,587 samples, 0.07%)</title><rect x="40.4572%" y="469" width="0.0684%" height="15" fill="rgb(248,166,6)" fg:x="26528059179" fg:w="44826587"/><text x="40.7072%" y="479.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (44,826,587 samples, 0.07%)</title><rect x="40.4572%" y="453" width="0.0684%" height="15" fill="rgb(247,89,20)" fg:x="26528059179" fg:w="44826587"/><text x="40.7072%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (44,826,587 samples, 0.07%)</title><rect x="40.4572%" y="437" width="0.0684%" height="15" fill="rgb(248,130,54)" fg:x="26528059179" fg:w="44826587"/><text x="40.7072%" y="447.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (410,466,102 samples, 0.63%)</title><rect x="40.5255%" y="485" width="0.6260%" height="15" fill="rgb(234,196,4)" fg:x="26572885766" fg:w="410466102"/><text x="40.7755%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (410,466,102 samples, 0.63%)</title><rect x="40.5255%" y="469" width="0.6260%" height="15" fill="rgb(250,143,31)" fg:x="26572885766" fg:w="410466102"/><text x="40.7755%" y="479.50"></text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::nearest_point_from_point_to_line (2,679,941,541 samples, 4.09%)</title><rect x="37.5267%" y="501" width="4.0871%" height="15" fill="rgb(211,110,34)" fg:x="24606506902" fg:w="2679941541"/><text x="37.7767%" y="511.50">cell..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (303,096,575 samples, 0.46%)</title><rect x="41.1515%" y="485" width="0.4622%" height="15" fill="rgb(215,124,48)" fg:x="26983351868" fg:w="303096575"/><text x="41.4015%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked_mut (303,096,575 samples, 0.46%)</title><rect x="41.1515%" y="469" width="0.4622%" height="15" fill="rgb(216,46,13)" fg:x="26983351868" fg:w="303096575"/><text x="41.4015%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (303,096,575 samples, 0.46%)</title><rect x="41.1515%" y="453" width="0.4622%" height="15" fill="rgb(205,184,25)" fg:x="26983351868" fg:w="303096575"/><text x="41.4015%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="357" width="0.1563%" height="15" fill="rgb(228,1,10)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="341" width="0.1563%" height="15" fill="rgb(213,116,27)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="325" width="0.1563%" height="15" fill="rgb(241,95,50)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="309" width="0.1563%" height="15" fill="rgb(238,48,32)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="293" width="0.1563%" height="15" fill="rgb(235,113,49)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="277" width="0.1563%" height="15" fill="rgb(205,127,43)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="261" width="0.1563%" height="15" fill="rgb(250,162,2)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="271.50"></text></g><g><title>core::ptr::write (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="245" width="0.1563%" height="15" fill="rgb(220,13,41)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="255.50"></text></g><g><title>[libc.so.6] (102,469,720 samples, 0.16%)</title><rect x="41.6138%" y="229" width="0.1563%" height="15" fill="rgb(249,221,25)" fg:x="27286448443" fg:w="102469720"/><text x="41.8638%" y="239.50"></text></g><g><title>__rust_alloc (8,175,185 samples, 0.01%)</title><rect x="41.7762%" y="229" width="0.0125%" height="15" fill="rgb(215,208,19)" fg:x="27392983210" fg:w="8175185"/><text x="42.0262%" y="239.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="501" width="0.2719%" height="15" fill="rgb(236,175,2)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="511.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="485" width="0.2719%" height="15" fill="rgb(241,52,2)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="469" width="0.2719%" height="15" fill="rgb(248,140,14)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="453" width="0.2719%" height="15" fill="rgb(253,22,42)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="463.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="437" width="0.2719%" height="15" fill="rgb(234,61,47)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="421" width="0.2719%" height="15" fill="rgb(208,226,15)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="405" width="0.2719%" height="15" fill="rgb(217,221,4)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="389" width="0.2719%" height="15" fill="rgb(212,174,34)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (178,268,095 samples, 0.27%)</title><rect x="41.6138%" y="373" width="0.2719%" height="15" fill="rgb(253,83,4)" fg:x="27286448443" fg:w="178268095"/><text x="41.8638%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (75,798,375 samples, 0.12%)</title><rect x="41.7700%" y="357" width="0.1156%" height="15" fill="rgb(250,195,49)" fg:x="27388918163" fg:w="75798375"/><text x="42.0200%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75,798,375 samples, 0.12%)</title><rect x="41.7700%" y="341" width="0.1156%" height="15" fill="rgb(241,192,25)" fg:x="27388918163" fg:w="75798375"/><text x="42.0200%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (75,798,375 samples, 0.12%)</title><rect x="41.7700%" y="325" width="0.1156%" height="15" fill="rgb(208,124,10)" fg:x="27388918163" fg:w="75798375"/><text x="42.0200%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (75,798,375 samples, 0.12%)</title><rect x="41.7700%" y="309" width="0.1156%" height="15" fill="rgb(222,33,0)" fg:x="27388918163" fg:w="75798375"/><text x="42.0200%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (75,798,375 samples, 0.12%)</title><rect x="41.7700%" y="293" width="0.1156%" height="15" fill="rgb(234,209,28)" fg:x="27388918163" fg:w="75798375"/><text x="42.0200%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71,733,328 samples, 0.11%)</title><rect x="41.7762%" y="277" width="0.1094%" height="15" fill="rgb(224,11,23)" fg:x="27392983210" fg:w="71733328"/><text x="42.0262%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71,733,328 samples, 0.11%)</title><rect x="41.7762%" y="261" width="0.1094%" height="15" fill="rgb(232,99,1)" fg:x="27392983210" fg:w="71733328"/><text x="42.0262%" y="271.50"></text></g><g><title>alloc::alloc::alloc (71,733,328 samples, 0.11%)</title><rect x="41.7762%" y="245" width="0.1094%" height="15" fill="rgb(237,95,45)" fg:x="27392983210" fg:w="71733328"/><text x="42.0262%" y="255.50"></text></g><g><title>malloc (63,558,143 samples, 0.10%)</title><rect x="41.7887%" y="229" width="0.0969%" height="15" fill="rgb(208,109,11)" fg:x="27401158395" fg:w="63558143"/><text x="42.0387%" y="239.50"></text></g><g><title>[libc.so.6] (18,746,677 samples, 0.03%)</title><rect x="41.8571%" y="213" width="0.0286%" height="15" fill="rgb(216,190,48)" fg:x="27445969861" fg:w="18746677"/><text x="42.1071%" y="223.50"></text></g><g><title>[libc.so.6] (8,197,387 samples, 0.01%)</title><rect x="41.8731%" y="197" width="0.0125%" height="15" fill="rgb(251,171,36)" fg:x="27456519151" fg:w="8197387"/><text x="42.1231%" y="207.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (303,640,548 samples, 0.46%)</title><rect x="41.8856%" y="485" width="0.4631%" height="15" fill="rgb(230,62,22)" fg:x="27464716538" fg:w="303640548"/><text x="42.1356%" y="495.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (303,640,548 samples, 0.46%)</title><rect x="41.8856%" y="469" width="0.4631%" height="15" fill="rgb(225,114,35)" fg:x="27464716538" fg:w="303640548"/><text x="42.1356%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (413,765,927 samples, 0.63%)</title><rect x="41.8856%" y="501" width="0.6310%" height="15" fill="rgb(215,118,42)" fg:x="27464716538" fg:w="413765927"/><text x="42.1356%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::BufferUninit&lt;T&gt;&gt;::assume_init (110,125,379 samples, 0.17%)</title><rect x="42.3487%" y="485" width="0.1679%" height="15" fill="rgb(243,119,21)" fg:x="27768357086" fg:w="110125379"/><text x="42.5987%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data (110,125,379 samples, 0.17%)</title><rect x="42.3487%" y="469" width="0.1679%" height="15" fill="rgb(252,177,53)" fg:x="27768357086" fg:w="110125379"/><text x="42.5987%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data_statically_unchecked (110,125,379 samples, 0.17%)</title><rect x="42.3487%" y="453" width="0.1679%" height="15" fill="rgb(237,209,29)" fg:x="27768357086" fg:w="110125379"/><text x="42.5987%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_mut (136,224,561 samples, 0.21%)</title><rect x="42.5167%" y="501" width="0.2078%" height="15" fill="rgb(212,65,23)" fg:x="27878482465" fg:w="136224561"/><text x="42.7667%" y="511.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows_mut (136,224,561 samples, 0.21%)</title><rect x="42.5167%" y="485" width="0.2078%" height="15" fill="rgb(230,222,46)" fg:x="27878482465" fg:w="136224561"/><text x="42.7667%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic_mut (136,224,561 samples, 0.21%)</title><rect x="42.5167%" y="469" width="0.2078%" height="15" fill="rgb(215,135,32)" fg:x="27878482465" fg:w="136224561"/><text x="42.7667%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::assert_view_index (136,224,561 samples, 0.21%)</title><rect x="42.5167%" y="453" width="0.2078%" height="15" fill="rgb(246,101,22)" fg:x="27878482465" fg:w="136224561"/><text x="42.7667%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (455,988,620 samples, 0.70%)</title><rect x="42.7244%" y="453" width="0.6954%" height="15" fill="rgb(206,107,13)" fg:x="28014707026" fg:w="455988620"/><text x="42.9744%" y="463.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::calculate_force_between (10,364,378,686 samples, 15.81%)</title><rect x="27.7431%" y="533" width="15.8064%" height="15" fill="rgb(250,100,44)" fg:x="18191351428" fg:w="10364378686"/><text x="27.9931%" y="543.50">cr_mech_coli::agent::_::..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::calculate_force_between (10,356,252,444 samples, 15.79%)</title><rect x="27.7555%" y="517" width="15.7940%" height="15" fill="rgb(231,147,38)" fg:x="18199477670" fg:w="10356252444"/><text x="28.0055%" y="527.50">&lt;cellular_raza_building_..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (541,023,088 samples, 0.83%)</title><rect x="42.7244%" y="501" width="0.8251%" height="15" fill="rgb(229,8,40)" fg:x="28014707026" fg:w="541023088"/><text x="42.9744%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (541,023,088 samples, 0.83%)</title><rect x="42.7244%" y="485" width="0.8251%" height="15" fill="rgb(221,135,30)" fg:x="28014707026" fg:w="541023088"/><text x="42.9744%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (541,023,088 samples, 0.83%)</title><rect x="42.7244%" y="469" width="0.8251%" height="15" fill="rgb(249,193,18)" fg:x="28014707026" fg:w="541023088"/><text x="42.9744%" y="479.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="453" width="0.1297%" height="15" fill="rgb(209,133,39)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="463.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndexMut&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="437" width="0.1297%" height="15" fill="rgb(232,100,14)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="447.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_unchecked_mut (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="421" width="0.1297%" height="15" fill="rgb(224,185,1)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="431.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="405" width="0.1297%" height="15" fill="rgb(223,139,8)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="389" width="0.1297%" height="15" fill="rgb(232,213,38)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="373" width="0.1297%" height="15" fill="rgb(207,94,22)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (85,034,468 samples, 0.13%)</title><rect x="43.4198%" y="357" width="0.1297%" height="15" fill="rgb(219,183,54)" fg:x="28470695646" fg:w="85034468"/><text x="43.6698%" y="367.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (37,374,425 samples, 0.06%)</title><rect x="43.6674%" y="485" width="0.0570%" height="15" fill="rgb(216,185,54)" fg:x="28633058720" fg:w="37374425"/><text x="43.9174%" y="495.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (37,374,425 samples, 0.06%)</title><rect x="43.6674%" y="469" width="0.0570%" height="15" fill="rgb(254,217,39)" fg:x="28633058720" fg:w="37374425"/><text x="43.9174%" y="479.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (37,374,425 samples, 0.06%)</title><rect x="43.6674%" y="453" width="0.0570%" height="15" fill="rgb(240,178,23)" fg:x="28633058720" fg:w="37374425"/><text x="43.9174%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (37,374,425 samples, 0.06%)</title><rect x="43.6674%" y="437" width="0.0570%" height="15" fill="rgb(218,11,47)" fg:x="28633058720" fg:w="37374425"/><text x="43.9174%" y="447.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="453" width="0.0728%" height="15" fill="rgb(218,51,51)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="463.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="437" width="0.0728%" height="15" fill="rgb(238,126,27)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::into_owned (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="421" width="0.0728%" height="15" fill="rgb(249,202,22)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="431.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="405" width="0.0728%" height="15" fill="rgb(254,195,49)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="415.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::allocate_from_iterator (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="389" width="0.0728%" height="15" fill="rgb(208,123,14)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="373" width="0.0728%" height="15" fill="rgb(224,200,8)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="357" width="0.0728%" height="15" fill="rgb(217,61,36)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="341" width="0.0728%" height="15" fill="rgb(206,35,45)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="325" width="0.0728%" height="15" fill="rgb(217,65,33)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="335.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (47,723,954 samples, 0.07%)</title><rect x="43.7244%" y="309" width="0.0728%" height="15" fill="rgb(222,158,48)" fg:x="28670433145" fg:w="47723954"/><text x="43.9744%" y="319.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::is_neighbor (166,315,234 samples, 0.25%)</title><rect x="43.5495%" y="533" width="0.2536%" height="15" fill="rgb(254,2,54)" fg:x="28555730114" fg:w="166315234"/><text x="43.7995%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::is_neighbor (166,315,234 samples, 0.25%)</title><rect x="43.5495%" y="517" width="0.2536%" height="15" fill="rgb(250,143,38)" fg:x="28555730114" fg:w="166315234"/><text x="43.7995%" y="527.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::is_neighbor (166,315,234 samples, 0.25%)</title><rect x="43.5495%" y="501" width="0.2536%" height="15" fill="rgb(248,25,0)" fg:x="28555730114" fg:w="166315234"/><text x="43.7995%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (51,612,203 samples, 0.08%)</title><rect x="43.7244%" y="485" width="0.0787%" height="15" fill="rgb(206,152,27)" fg:x="28670433145" fg:w="51612203"/><text x="43.9744%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (51,612,203 samples, 0.08%)</title><rect x="43.7244%" y="469" width="0.0787%" height="15" fill="rgb(240,77,30)" fg:x="28670433145" fg:w="51612203"/><text x="43.9744%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87,459,081 samples, 0.13%)</title><rect x="43.8279%" y="341" width="0.1334%" height="15" fill="rgb(231,5,3)" fg:x="28738298857" fg:w="87459081"/><text x="44.0779%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87,459,081 samples, 0.13%)</title><rect x="43.8279%" y="325" width="0.1334%" height="15" fill="rgb(207,226,32)" fg:x="28738298857" fg:w="87459081"/><text x="44.0779%" y="335.50"></text></g><g><title>alloc::alloc::alloc (87,459,081 samples, 0.13%)</title><rect x="43.8279%" y="309" width="0.1334%" height="15" fill="rgb(222,207,47)" fg:x="28738298857" fg:w="87459081"/><text x="44.0779%" y="319.50"></text></g><g><title>malloc (83,391,630 samples, 0.13%)</title><rect x="43.8342%" y="293" width="0.1272%" height="15" fill="rgb(229,115,45)" fg:x="28742366308" fg:w="83391630"/><text x="44.0842%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (115,939,776 samples, 0.18%)</title><rect x="43.8032%" y="405" width="0.1768%" height="15" fill="rgb(224,191,6)" fg:x="28722045348" fg:w="115939776"/><text x="44.0532%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (115,939,776 samples, 0.18%)</title><rect x="43.8032%" y="389" width="0.1768%" height="15" fill="rgb(230,227,24)" fg:x="28722045348" fg:w="115939776"/><text x="44.0532%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (115,939,776 samples, 0.18%)</title><rect x="43.8032%" y="373" width="0.1768%" height="15" fill="rgb(228,80,19)" fg:x="28722045348" fg:w="115939776"/><text x="44.0532%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (115,939,776 samples, 0.18%)</title><rect x="43.8032%" y="357" width="0.1768%" height="15" fill="rgb(247,229,0)" fg:x="28722045348" fg:w="115939776"/><text x="44.0532%" y="367.50"></text></g><g><title>alloc::raw_vec::layout_array (12,227,186 samples, 0.02%)</title><rect x="43.9613%" y="341" width="0.0186%" height="15" fill="rgb(237,194,15)" fg:x="28825757938" fg:w="12227186"/><text x="44.2113%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat (12,227,186 samples, 0.02%)</title><rect x="43.9613%" y="325" width="0.0186%" height="15" fill="rgb(219,203,20)" fg:x="28825757938" fg:w="12227186"/><text x="44.2113%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (8,156,379 samples, 0.01%)</title><rect x="43.9675%" y="309" width="0.0124%" height="15" fill="rgb(234,128,8)" fg:x="28829828745" fg:w="8156379"/><text x="44.2175%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8,156,379 samples, 0.01%)</title><rect x="43.9675%" y="293" width="0.0124%" height="15" fill="rgb(248,202,8)" fg:x="28829828745" fg:w="8156379"/><text x="44.2175%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (8,156,379 samples, 0.01%)</title><rect x="43.9675%" y="277" width="0.0124%" height="15" fill="rgb(206,104,37)" fg:x="28829828745" fg:w="8156379"/><text x="44.2175%" y="287.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="533" width="0.3514%" height="15" fill="rgb(223,8,27)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="517" width="0.3514%" height="15" fill="rgb(216,217,28)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="527.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="501" width="0.3514%" height="15" fill="rgb(249,199,1)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="485" width="0.3514%" height="15" fill="rgb(240,85,17)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="469" width="0.3514%" height="15" fill="rgb(206,108,45)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="453" width="0.3514%" height="15" fill="rgb(245,210,41)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="437" width="0.3514%" height="15" fill="rgb(206,13,37)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (230,383,562 samples, 0.35%)</title><rect x="43.8032%" y="421" width="0.3514%" height="15" fill="rgb(250,61,18)" fg:x="28722045348" fg:w="230383562"/><text x="44.0532%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (114,443,786 samples, 0.17%)</title><rect x="43.9800%" y="405" width="0.1745%" height="15" fill="rgb(235,172,48)" fg:x="28837985124" fg:w="114443786"/><text x="44.2300%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (114,443,786 samples, 0.17%)</title><rect x="43.9800%" y="389" width="0.1745%" height="15" fill="rgb(249,201,17)" fg:x="28837985124" fg:w="114443786"/><text x="44.2300%" y="399.50"></text></g><g><title>[libc.so.6] (114,443,786 samples, 0.17%)</title><rect x="43.9800%" y="373" width="0.1745%" height="15" fill="rgb(219,208,6)" fg:x="28837985124" fg:w="114443786"/><text x="44.2300%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="405" width="0.0367%" height="15" fill="rgb(248,31,23)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="389" width="0.0367%" height="15" fill="rgb(245,15,42)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="373" width="0.0367%" height="15" fill="rgb(222,217,39)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="357" width="0.0367%" height="15" fill="rgb(210,219,27)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="341" width="0.0367%" height="15" fill="rgb(252,166,36)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="325" width="0.0367%" height="15" fill="rgb(245,132,34)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="335.50"></text></g><g><title>alloc::alloc::alloc (24,091,229 samples, 0.04%)</title><rect x="44.1545%" y="309" width="0.0367%" height="15" fill="rgb(236,54,3)" fg:x="28952428910" fg:w="24091229"/><text x="44.4045%" y="319.50"></text></g><g><title>malloc (20,026,246 samples, 0.03%)</title><rect x="44.1607%" y="293" width="0.0305%" height="15" fill="rgb(241,173,43)" fg:x="28956493893" fg:w="20026246"/><text x="44.4107%" y="303.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::Voxel&lt;C,A&gt;&gt;::calculate_force_between_cells_external (11,380,741,297 samples, 17.36%)</title><rect x="26.8839%" y="549" width="17.3564%" height="15" fill="rgb(215,190,9)" fg:x="17627968974" fg:w="11380741297"/><text x="27.1339%" y="559.50">cellular_raza_core::backend..</text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::velocity (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="533" width="0.0858%" height="15" fill="rgb(242,101,16)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::velocity (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="517" width="0.0858%" height="15" fill="rgb(223,190,21)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="527.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="501" width="0.0858%" height="15" fill="rgb(215,228,25)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="485" width="0.0858%" height="15" fill="rgb(225,36,22)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="469" width="0.0858%" height="15" fill="rgb(251,106,46)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="453" width="0.0858%" height="15" fill="rgb(208,90,1)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="437" width="0.0858%" height="15" fill="rgb(243,10,4)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56,281,361 samples, 0.09%)</title><rect x="44.1545%" y="421" width="0.0858%" height="15" fill="rgb(212,137,27)" fg:x="28952428910" fg:w="56281361"/><text x="44.4045%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (32,190,132 samples, 0.05%)</title><rect x="44.1913%" y="405" width="0.0491%" height="15" fill="rgb(231,220,49)" fg:x="28976520139" fg:w="32190132"/><text x="44.4413%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32,190,132 samples, 0.05%)</title><rect x="44.1913%" y="389" width="0.0491%" height="15" fill="rgb(237,96,20)" fg:x="28976520139" fg:w="32190132"/><text x="44.4413%" y="399.50"></text></g><g><title>[libc.so.6] (32,190,132 samples, 0.05%)</title><rect x="44.1913%" y="373" width="0.0491%" height="15" fill="rgb(239,229,30)" fg:x="28976520139" fg:w="32190132"/><text x="44.4413%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;cellular_raza_core::backend::chili::VoxelPlainIndex&gt;&gt; (8,703,779 samples, 0.01%)</title><rect x="44.2403%" y="549" width="0.0133%" height="15" fill="rgb(219,65,33)" fg:x="29008710392" fg:w="8703779"/><text x="44.4903%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;cellular_raza_core::backend::chili::VoxelPlainIndex,alloc::collections::btree::set_val::SetValZST&gt;&gt; (8,703,779 samples, 0.01%)</title><rect x="44.2403%" y="533" width="0.0133%" height="15" fill="rgb(243,134,7)" fg:x="29008710392" fg:w="8703779"/><text x="44.4903%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt;&gt; (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="549" width="0.0153%" height="15" fill="rgb(216,177,54)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="533" width="0.0153%" height="15" fill="rgb(211,160,20)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="517" width="0.0153%" height="15" fill="rgb(239,85,39)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="501" width="0.0153%" height="15" fill="rgb(232,125,22)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="485" width="0.0153%" height="15" fill="rgb(244,57,34)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="469" width="0.0153%" height="15" fill="rgb(214,203,32)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="453" width="0.0153%" height="15" fill="rgb(207,58,43)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="437" width="0.0153%" height="15" fill="rgb(215,193,15)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="421" width="0.0153%" height="15" fill="rgb(232,15,44)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="431.50"></text></g><g><title>__rust_dealloc (10,006,840 samples, 0.02%)</title><rect x="44.2536%" y="405" width="0.0153%" height="15" fill="rgb(212,3,48)" fg:x="29017414171" fg:w="10006840"/><text x="44.5036%" y="415.50"></text></g><g><title>__rdl_dealloc (12,248,379 samples, 0.02%)</title><rect x="44.2751%" y="421" width="0.0187%" height="15" fill="rgb(218,128,7)" fg:x="29031515532" fg:w="12248379"/><text x="44.5251%" y="431.50"></text></g><g><title>__rust_dealloc (8,178,094 samples, 0.01%)</title><rect x="44.2938%" y="421" width="0.0125%" height="15" fill="rgb(226,216,39)" fg:x="29043763911" fg:w="8178094"/><text x="44.5438%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="549" width="0.1420%" height="15" fill="rgb(243,47,51)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="533" width="0.1420%" height="15" fill="rgb(241,183,40)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="517" width="0.1420%" height="15" fill="rgb(231,217,32)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="501" width="0.1420%" height="15" fill="rgb(229,61,38)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="485" width="0.1420%" height="15" fill="rgb(225,210,5)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="469" width="0.1420%" height="15" fill="rgb(231,79,45)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="453" width="0.1420%" height="15" fill="rgb(224,100,7)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (93,089,929 samples, 0.14%)</title><rect x="44.2689%" y="437" width="0.1420%" height="15" fill="rgb(241,198,18)" fg:x="29027421011" fg:w="93089929"/><text x="44.5189%" y="447.50"></text></g><g><title>cfree (68,568,935 samples, 0.10%)</title><rect x="44.3063%" y="421" width="0.1046%" height="15" fill="rgb(252,97,53)" fg:x="29051942005" fg:w="68568935"/><text x="44.5563%" y="431.50"></text></g><g><title>[libc.so.6] (15,608,142 samples, 0.02%)</title><rect x="44.3870%" y="405" width="0.0238%" height="15" fill="rgb(220,88,7)" fg:x="29104902798" fg:w="15608142"/><text x="44.6370%" y="415.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81,952,197 samples, 0.12%)</title><rect x="44.7737%" y="501" width="0.1250%" height="15" fill="rgb(213,176,14)" fg:x="29358411551" fg:w="81952197"/><text x="45.0237%" y="511.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (81,952,197 samples, 0.12%)</title><rect x="44.7737%" y="485" width="0.1250%" height="15" fill="rgb(246,73,7)" fg:x="29358411551" fg:w="81952197"/><text x="45.0237%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="469" width="0.0125%" height="15" fill="rgb(245,64,36)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="453" width="0.0125%" height="15" fill="rgb(245,80,10)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="437" width="0.0125%" height="15" fill="rgb(232,107,50)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="421" width="0.0125%" height="15" fill="rgb(253,3,0)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="431.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="405" width="0.0125%" height="15" fill="rgb(212,99,53)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="389" width="0.0125%" height="15" fill="rgb(249,111,54)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="373" width="0.0125%" height="15" fill="rgb(249,55,30)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="357" width="0.0125%" height="15" fill="rgb(237,47,42)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (8,192,961 samples, 0.01%)</title><rect x="44.8862%" y="341" width="0.0125%" height="15" fill="rgb(211,20,18)" fg:x="29432170787" fg:w="8192961"/><text x="45.1362%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (94,152,107 samples, 0.14%)</title><rect x="44.7737%" y="517" width="0.1436%" height="15" fill="rgb(231,203,46)" fg:x="29358411551" fg:w="94152107"/><text x="45.0237%" y="527.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="501" width="0.0186%" height="15" fill="rgb(237,142,3)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="511.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="485" width="0.0186%" height="15" fill="rgb(241,107,1)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="469" width="0.0186%" height="15" fill="rgb(229,83,13)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="453" width="0.0186%" height="15" fill="rgb(241,91,40)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="437" width="0.0186%" height="15" fill="rgb(225,3,45)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="421" width="0.0186%" height="15" fill="rgb(244,223,14)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="431.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="405" width="0.0186%" height="15" fill="rgb(224,124,37)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="389" width="0.0186%" height="15" fill="rgb(251,171,30)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="373" width="0.0186%" height="15" fill="rgb(236,46,54)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (12,199,910 samples, 0.02%)</title><rect x="44.8986%" y="357" width="0.0186%" height="15" fill="rgb(245,213,5)" fg:x="29440363748" fg:w="12199910"/><text x="45.1486%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (82,371,304 samples, 0.13%)</title><rect x="44.9173%" y="517" width="0.1256%" height="15" fill="rgb(230,144,27)" fg:x="29452563658" fg:w="82371304"/><text x="45.1673%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (49,395,085 samples, 0.08%)</title><rect x="45.9572%" y="469" width="0.0753%" height="15" fill="rgb(220,86,6)" fg:x="30134470465" fg:w="49395085"/><text x="46.2072%" y="479.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::exp (175,970,829 samples, 0.27%)</title><rect x="46.0325%" y="469" width="0.2684%" height="15" fill="rgb(240,20,13)" fg:x="30183865550" fg:w="175970829"/><text x="46.2825%" y="479.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::exp (175,970,829 samples, 0.27%)</title><rect x="46.0325%" y="453" width="0.2684%" height="15" fill="rgb(217,89,34)" fg:x="30183865550" fg:w="175970829"/><text x="46.2825%" y="463.50"></text></g><g><title>[libm.so.6] (175,970,829 samples, 0.27%)</title><rect x="46.0325%" y="437" width="0.2684%" height="15" fill="rgb(229,13,5)" fg:x="30183865550" fg:w="175970829"/><text x="46.2825%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (1,029,937,367 samples, 1.57%)</title><rect x="46.3009%" y="469" width="1.5707%" height="15" fill="rgb(244,67,35)" fg:x="30359836397" fg:w="1029937367"/><text x="46.5509%" y="479.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (155,709,035 samples, 0.24%)</title><rect x="47.8716%" y="453" width="0.2375%" height="15" fill="rgb(221,40,2)" fg:x="31389773764" fg:w="155709035"/><text x="48.1216%" y="463.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (155,709,035 samples, 0.24%)</title><rect x="47.8716%" y="437" width="0.2375%" height="15" fill="rgb(237,157,21)" fg:x="31389773764" fg:w="155709035"/><text x="48.1216%" y="447.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (155,709,035 samples, 0.24%)</title><rect x="47.8716%" y="421" width="0.2375%" height="15" fill="rgb(222,94,11)" fg:x="31389773764" fg:w="155709035"/><text x="48.1216%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (454,077,100 samples, 0.69%)</title><rect x="48.1091%" y="405" width="0.6925%" height="15" fill="rgb(249,113,6)" fg:x="31545482799" fg:w="454077100"/><text x="48.3591%" y="415.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (802,537,603 samples, 1.22%)</title><rect x="47.8716%" y="469" width="1.2239%" height="15" fill="rgb(238,137,36)" fg:x="31389773764" fg:w="802537603"/><text x="48.1216%" y="479.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (646,828,568 samples, 0.99%)</title><rect x="48.1091%" y="453" width="0.9865%" height="15" fill="rgb(210,102,26)" fg:x="31545482799" fg:w="646828568"/><text x="48.3591%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (646,828,568 samples, 0.99%)</title><rect x="48.1091%" y="437" width="0.9865%" height="15" fill="rgb(218,30,30)" fg:x="31545482799" fg:w="646828568"/><text x="48.3591%" y="447.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (646,828,568 samples, 0.99%)</title><rect x="48.1091%" y="421" width="0.9865%" height="15" fill="rgb(214,67,26)" fg:x="31545482799" fg:w="646828568"/><text x="48.3591%" y="431.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (192,751,468 samples, 0.29%)</title><rect x="48.8016%" y="405" width="0.2940%" height="15" fill="rgb(251,9,53)" fg:x="31999559899" fg:w="192751468"/><text x="49.0516%" y="415.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Div&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::div (60,549,869 samples, 0.09%)</title><rect x="49.0956%" y="469" width="0.0923%" height="15" fill="rgb(228,204,25)" fg:x="32192311367" fg:w="60549869"/><text x="49.3456%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (60,549,869 samples, 0.09%)</title><rect x="49.0956%" y="453" width="0.0923%" height="15" fill="rgb(207,153,8)" fg:x="32192311367" fg:w="60549869"/><text x="49.3456%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (24,775,366 samples, 0.04%)</title><rect x="49.1879%" y="469" width="0.0378%" height="15" fill="rgb(242,9,16)" fg:x="32252861236" fg:w="24775366"/><text x="49.4379%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (24,775,366 samples, 0.04%)</title><rect x="49.1879%" y="453" width="0.0378%" height="15" fill="rgb(217,211,10)" fg:x="32252861236" fg:w="24775366"/><text x="49.4379%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Neg for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::neg (8,141,393 samples, 0.01%)</title><rect x="49.2257%" y="469" width="0.0124%" height="15" fill="rgb(219,228,52)" fg:x="32277636602" fg:w="8141393"/><text x="49.4757%" y="479.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::neg_mut (8,141,393 samples, 0.01%)</title><rect x="49.2257%" y="453" width="0.0124%" height="15" fill="rgb(231,92,29)" fg:x="32277636602" fg:w="8141393"/><text x="49.4757%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Neg&gt;::neg (8,141,393 samples, 0.01%)</title><rect x="49.2257%" y="437" width="0.0124%" height="15" fill="rgb(232,8,23)" fg:x="32277636602" fg:w="8141393"/><text x="49.4757%" y="447.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (4,016,804,884 samples, 6.13%)</title><rect x="45.0429%" y="517" width="6.1259%" height="15" fill="rgb(216,211,34)" fg:x="29534934962" fg:w="4016804884"/><text x="45.2929%" y="527.50">&lt;cr_mech..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::interaction::MorsePotentialF32 as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (3,690,016,479 samples, 5.63%)</title><rect x="45.5413%" y="501" width="5.6275%" height="15" fill="rgb(236,151,0)" fg:x="29861723367" fg:w="3690016479"/><text x="45.7913%" y="511.50">&lt;cellul..</text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::calculate_morse_interaction (3,690,016,479 samples, 5.63%)</title><rect x="45.5413%" y="485" width="5.6275%" height="15" fill="rgb(209,168,3)" fg:x="29861723367" fg:w="3690016479"/><text x="45.7913%" y="495.50">cellula..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (1,265,961,851 samples, 1.93%)</title><rect x="49.2381%" y="469" width="1.9307%" height="15" fill="rgb(208,129,28)" fg:x="32285777995" fg:w="1265961851"/><text x="49.4881%" y="479.50">n..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_to_statically_unchecked_uninit (1,265,961,851 samples, 1.93%)</title><rect x="49.2381%" y="453" width="1.9307%" height="15" fill="rgb(229,78,22)" fg:x="32285777995" fg:w="1265961851"/><text x="49.4881%" y="463.50">n..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (1,265,961,851 samples, 1.93%)</title><rect x="49.2381%" y="437" width="1.9307%" height="15" fill="rgb(228,187,13)" fg:x="32285777995" fg:w="1265961851"/><text x="49.4881%" y="447.50">c..</text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (145,735,588 samples, 0.22%)</title><rect x="52.1998%" y="501" width="0.2223%" height="15" fill="rgb(240,119,24)" fg:x="34227791280" fg:w="145735588"/><text x="52.4498%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (16,358,387 samples, 0.02%)</title><rect x="52.4221%" y="501" width="0.0249%" height="15" fill="rgb(209,194,42)" fg:x="34373526868" fg:w="16358387"/><text x="52.6721%" y="511.50"></text></g><g><title>&lt;f32 as simba::scalar::real::RealField&gt;::clamp (12,145,990 samples, 0.02%)</title><rect x="52.4470%" y="501" width="0.0185%" height="15" fill="rgb(247,200,46)" fg:x="34389885255" fg:w="12145990"/><text x="52.6970%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (36,752,648 samples, 0.06%)</title><rect x="52.4655%" y="469" width="0.0561%" height="15" fill="rgb(218,76,16)" fg:x="34402031246" fg:w="36752648"/><text x="52.7155%" y="479.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (69,470,942 samples, 0.11%)</title><rect x="52.4655%" y="501" width="0.1059%" height="15" fill="rgb(225,21,48)" fg:x="34402031246" fg:w="69470942"/><text x="52.7155%" y="511.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (69,470,942 samples, 0.11%)</title><rect x="52.4655%" y="485" width="0.1059%" height="15" fill="rgb(239,223,50)" fg:x="34402031246" fg:w="69470942"/><text x="52.7155%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (32,718,294 samples, 0.05%)</title><rect x="52.5216%" y="469" width="0.0499%" height="15" fill="rgb(244,45,21)" fg:x="34438783894" fg:w="32718294"/><text x="52.7716%" y="479.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (116,971,169 samples, 0.18%)</title><rect x="52.5715%" y="485" width="0.1784%" height="15" fill="rgb(232,33,43)" fg:x="34471502188" fg:w="116971169"/><text x="52.8215%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (116,971,169 samples, 0.18%)</title><rect x="52.5715%" y="469" width="0.1784%" height="15" fill="rgb(209,8,3)" fg:x="34471502188" fg:w="116971169"/><text x="52.8215%" y="479.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (116,971,169 samples, 0.18%)</title><rect x="52.5715%" y="453" width="0.1784%" height="15" fill="rgb(214,25,53)" fg:x="34471502188" fg:w="116971169"/><text x="52.8215%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (171,051,212 samples, 0.26%)</title><rect x="52.7499%" y="437" width="0.2609%" height="15" fill="rgb(254,186,54)" fg:x="34588473357" fg:w="171051212"/><text x="52.9999%" y="447.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (478,002,518 samples, 0.73%)</title><rect x="52.5715%" y="501" width="0.7290%" height="15" fill="rgb(208,174,49)" fg:x="34471502188" fg:w="478002518"/><text x="52.8215%" y="511.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (361,031,349 samples, 0.55%)</title><rect x="52.7499%" y="485" width="0.5506%" height="15" fill="rgb(233,191,51)" fg:x="34588473357" fg:w="361031349"/><text x="52.9999%" y="495.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (361,031,349 samples, 0.55%)</title><rect x="52.7499%" y="469" width="0.5506%" height="15" fill="rgb(222,134,10)" fg:x="34588473357" fg:w="361031349"/><text x="52.9999%" y="479.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (361,031,349 samples, 0.55%)</title><rect x="52.7499%" y="453" width="0.5506%" height="15" fill="rgb(230,226,20)" fg:x="34588473357" fg:w="361031349"/><text x="52.9999%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (189,980,137 samples, 0.29%)</title><rect x="53.0107%" y="437" width="0.2897%" height="15" fill="rgb(251,111,25)" fg:x="34759524569" fg:w="189980137"/><text x="53.2607%" y="447.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (32,748,672 samples, 0.05%)</title><rect x="53.3005%" y="501" width="0.0499%" height="15" fill="rgb(224,40,46)" fg:x="34949504706" fg:w="32748672"/><text x="53.5505%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (32,748,672 samples, 0.05%)</title><rect x="53.3005%" y="485" width="0.0499%" height="15" fill="rgb(236,108,47)" fg:x="34949504706" fg:w="32748672"/><text x="53.5505%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (32,748,672 samples, 0.05%)</title><rect x="53.3005%" y="469" width="0.0499%" height="15" fill="rgb(234,93,0)" fg:x="34949504706" fg:w="32748672"/><text x="53.5505%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (32,748,672 samples, 0.05%)</title><rect x="53.3005%" y="453" width="0.0499%" height="15" fill="rgb(224,213,32)" fg:x="34949504706" fg:w="32748672"/><text x="53.5505%" y="463.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (371,411,189 samples, 0.57%)</title><rect x="53.3504%" y="501" width="0.5664%" height="15" fill="rgb(251,11,48)" fg:x="34982253378" fg:w="371411189"/><text x="53.6004%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (371,411,189 samples, 0.57%)</title><rect x="53.3504%" y="485" width="0.5664%" height="15" fill="rgb(236,173,5)" fg:x="34982253378" fg:w="371411189"/><text x="53.6004%" y="495.50"></text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::nearest_point_from_point_to_line (2,044,133,090 samples, 3.12%)</title><rect x="51.1761%" y="517" width="3.1174%" height="15" fill="rgb(230,95,12)" fg:x="33556541531" fg:w="2044133090"/><text x="51.4261%" y="527.50">cel..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (247,010,054 samples, 0.38%)</title><rect x="53.9169%" y="501" width="0.3767%" height="15" fill="rgb(232,209,1)" fg:x="35353664567" fg:w="247010054"/><text x="54.1669%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked_mut (247,010,054 samples, 0.38%)</title><rect x="53.9169%" y="485" width="0.3767%" height="15" fill="rgb(232,6,1)" fg:x="35353664567" fg:w="247010054"/><text x="54.1669%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (247,010,054 samples, 0.38%)</title><rect x="53.9169%" y="469" width="0.3767%" height="15" fill="rgb(210,224,50)" fg:x="35353664567" fg:w="247010054"/><text x="54.1669%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="373" width="0.0948%" height="15" fill="rgb(228,127,35)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="357" width="0.0948%" height="15" fill="rgb(245,102,45)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="341" width="0.0948%" height="15" fill="rgb(214,1,49)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="325" width="0.0948%" height="15" fill="rgb(226,163,40)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="309" width="0.0948%" height="15" fill="rgb(239,212,28)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="293" width="0.0948%" height="15" fill="rgb(220,20,13)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="277" width="0.0948%" height="15" fill="rgb(210,164,35)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="287.50"></text></g><g><title>core::ptr::write (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="261" width="0.0948%" height="15" fill="rgb(248,109,41)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="271.50"></text></g><g><title>[libc.so.6] (62,144,141 samples, 0.09%)</title><rect x="54.2936%" y="245" width="0.0948%" height="15" fill="rgb(238,23,50)" fg:x="35600674621" fg:w="62144141"/><text x="54.5436%" y="255.50"></text></g><g><title>__rust_alloc (12,591,385 samples, 0.02%)</title><rect x="54.3945%" y="245" width="0.0192%" height="15" fill="rgb(211,48,49)" fg:x="35666864781" fg:w="12591385"/><text x="54.6445%" y="255.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="517" width="0.1645%" height="15" fill="rgb(223,36,21)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="527.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="501" width="0.1645%" height="15" fill="rgb(207,123,46)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="511.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="485" width="0.1645%" height="15" fill="rgb(240,218,32)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="469" width="0.1645%" height="15" fill="rgb(252,5,43)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="479.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="453" width="0.1645%" height="15" fill="rgb(252,84,19)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="437" width="0.1645%" height="15" fill="rgb(243,152,39)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="421" width="0.1645%" height="15" fill="rgb(234,160,15)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="405" width="0.1645%" height="15" fill="rgb(237,34,20)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (107,892,684 samples, 0.16%)</title><rect x="54.2936%" y="389" width="0.1645%" height="15" fill="rgb(229,97,13)" fg:x="35600674621" fg:w="107892684"/><text x="54.5436%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (45,748,543 samples, 0.07%)</title><rect x="54.3883%" y="373" width="0.0698%" height="15" fill="rgb(234,71,50)" fg:x="35662818762" fg:w="45748543"/><text x="54.6383%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45,748,543 samples, 0.07%)</title><rect x="54.3883%" y="357" width="0.0698%" height="15" fill="rgb(253,155,4)" fg:x="35662818762" fg:w="45748543"/><text x="54.6383%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45,748,543 samples, 0.07%)</title><rect x="54.3883%" y="341" width="0.0698%" height="15" fill="rgb(222,185,37)" fg:x="35662818762" fg:w="45748543"/><text x="54.6383%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (45,748,543 samples, 0.07%)</title><rect x="54.3883%" y="325" width="0.0698%" height="15" fill="rgb(251,177,13)" fg:x="35662818762" fg:w="45748543"/><text x="54.6383%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (45,748,543 samples, 0.07%)</title><rect x="54.3883%" y="309" width="0.0698%" height="15" fill="rgb(250,179,40)" fg:x="35662818762" fg:w="45748543"/><text x="54.6383%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41,702,524 samples, 0.06%)</title><rect x="54.3945%" y="293" width="0.0636%" height="15" fill="rgb(242,44,2)" fg:x="35666864781" fg:w="41702524"/><text x="54.6445%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41,702,524 samples, 0.06%)</title><rect x="54.3945%" y="277" width="0.0636%" height="15" fill="rgb(216,177,13)" fg:x="35666864781" fg:w="41702524"/><text x="54.6445%" y="287.50"></text></g><g><title>alloc::alloc::alloc (41,702,524 samples, 0.06%)</title><rect x="54.3945%" y="261" width="0.0636%" height="15" fill="rgb(216,106,43)" fg:x="35666864781" fg:w="41702524"/><text x="54.6445%" y="271.50"></text></g><g><title>malloc (29,111,139 samples, 0.04%)</title><rect x="54.4137%" y="245" width="0.0444%" height="15" fill="rgb(216,183,2)" fg:x="35679456166" fg:w="29111139"/><text x="54.6637%" y="255.50"></text></g><g><title>[libc.so.6] (16,184,911 samples, 0.02%)</title><rect x="54.4334%" y="229" width="0.0247%" height="15" fill="rgb(249,75,3)" fg:x="35692382394" fg:w="16184911"/><text x="54.6834%" y="239.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (244,174,886 samples, 0.37%)</title><rect x="54.4581%" y="501" width="0.3724%" height="15" fill="rgb(219,67,39)" fg:x="35708567305" fg:w="244174886"/><text x="54.7081%" y="511.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (244,174,886 samples, 0.37%)</title><rect x="54.4581%" y="485" width="0.3724%" height="15" fill="rgb(253,228,2)" fg:x="35708567305" fg:w="244174886"/><text x="54.7081%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (309,491,279 samples, 0.47%)</title><rect x="54.4581%" y="517" width="0.4720%" height="15" fill="rgb(235,138,27)" fg:x="35708567305" fg:w="309491279"/><text x="54.7081%" y="527.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::BufferUninit&lt;T&gt;&gt;::assume_init (65,316,393 samples, 0.10%)</title><rect x="54.8305%" y="501" width="0.0996%" height="15" fill="rgb(236,97,51)" fg:x="35952742191" fg:w="65316393"/><text x="55.0805%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data (65,316,393 samples, 0.10%)</title><rect x="54.8305%" y="485" width="0.0996%" height="15" fill="rgb(240,80,30)" fg:x="35952742191" fg:w="65316393"/><text x="55.0805%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data_statically_unchecked (65,316,393 samples, 0.10%)</title><rect x="54.8305%" y="469" width="0.0996%" height="15" fill="rgb(230,178,19)" fg:x="35952742191" fg:w="65316393"/><text x="55.0805%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_mut (104,326,810 samples, 0.16%)</title><rect x="54.9301%" y="517" width="0.1591%" height="15" fill="rgb(210,190,27)" fg:x="36018058584" fg:w="104326810"/><text x="55.1801%" y="527.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows_mut (104,326,810 samples, 0.16%)</title><rect x="54.9301%" y="501" width="0.1591%" height="15" fill="rgb(222,107,31)" fg:x="36018058584" fg:w="104326810"/><text x="55.1801%" y="511.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic_mut (104,326,810 samples, 0.16%)</title><rect x="54.9301%" y="485" width="0.1591%" height="15" fill="rgb(216,127,34)" fg:x="36018058584" fg:w="104326810"/><text x="55.1801%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::assert_view_index (104,326,810 samples, 0.16%)</title><rect x="54.9301%" y="469" width="0.1591%" height="15" fill="rgb(234,116,52)" fg:x="36018058584" fg:w="104326810"/><text x="55.1801%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (257,440,091 samples, 0.39%)</title><rect x="55.1203%" y="469" width="0.3926%" height="15" fill="rgb(222,124,15)" fg:x="36142759819" fg:w="257440091"/><text x="55.3703%" y="479.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::calculate_force_between (7,353,010,681 samples, 11.21%)</title><rect x="44.4108%" y="549" width="11.2139%" height="15" fill="rgb(231,179,28)" fg:x="29120510940" fg:w="7353010681"/><text x="44.6608%" y="559.50">cr_mech_coli::age..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::calculate_force_between (7,353,010,681 samples, 11.21%)</title><rect x="44.4108%" y="533" width="11.2139%" height="15" fill="rgb(226,93,45)" fg:x="29120510940" fg:w="7353010681"/><text x="44.6608%" y="543.50">&lt;cellular_raza_bu..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (351,136,227 samples, 0.54%)</title><rect x="55.0892%" y="517" width="0.5355%" height="15" fill="rgb(215,8,51)" fg:x="36122385394" fg:w="351136227"/><text x="55.3392%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (351,136,227 samples, 0.54%)</title><rect x="55.0892%" y="501" width="0.5355%" height="15" fill="rgb(223,106,5)" fg:x="36122385394" fg:w="351136227"/><text x="55.3392%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (351,136,227 samples, 0.54%)</title><rect x="55.0892%" y="485" width="0.5355%" height="15" fill="rgb(250,191,5)" fg:x="36122385394" fg:w="351136227"/><text x="55.3392%" y="495.50"></text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="469" width="0.1118%" height="15" fill="rgb(242,132,44)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="479.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndexMut&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="453" width="0.1118%" height="15" fill="rgb(251,152,29)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="463.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_unchecked_mut (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="437" width="0.1118%" height="15" fill="rgb(218,179,5)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="447.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="421" width="0.1118%" height="15" fill="rgb(227,67,19)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="431.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="405" width="0.1118%" height="15" fill="rgb(233,119,31)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="389" width="0.1118%" height="15" fill="rgb(241,120,22)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (73,321,711 samples, 0.11%)</title><rect x="55.5129%" y="373" width="0.1118%" height="15" fill="rgb(224,102,30)" fg:x="36400199910" fg:w="73321711"/><text x="55.7629%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12,222,219 samples, 0.02%)</title><rect x="55.6372%" y="517" width="0.0186%" height="15" fill="rgb(210,164,37)" fg:x="36481677468" fg:w="12222219"/><text x="55.8872%" y="527.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (8,191,815 samples, 0.01%)</title><rect x="55.6994%" y="501" width="0.0125%" height="15" fill="rgb(226,191,16)" fg:x="36522513513" fg:w="8191815"/><text x="55.9494%" y="511.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (8,191,815 samples, 0.01%)</title><rect x="55.6994%" y="485" width="0.0125%" height="15" fill="rgb(214,40,45)" fg:x="36522513513" fg:w="8191815"/><text x="55.9494%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (8,191,815 samples, 0.01%)</title><rect x="55.6994%" y="469" width="0.0125%" height="15" fill="rgb(244,29,26)" fg:x="36522513513" fg:w="8191815"/><text x="55.9494%" y="479.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (8,191,815 samples, 0.01%)</title><rect x="55.6994%" y="453" width="0.0125%" height="15" fill="rgb(216,16,5)" fg:x="36522513513" fg:w="8191815"/><text x="55.9494%" y="463.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::is_neighbor (55,918,592 samples, 0.09%)</title><rect x="55.6558%" y="517" width="0.0853%" height="15" fill="rgb(249,76,35)" fg:x="36493899687" fg:w="55918592"/><text x="55.9058%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="501" width="0.0291%" height="15" fill="rgb(207,11,44)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="485" width="0.0291%" height="15" fill="rgb(228,190,49)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="469" width="0.0291%" height="15" fill="rgb(214,173,12)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="453" width="0.0291%" height="15" fill="rgb(218,26,35)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="463.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::into_owned (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="437" width="0.0291%" height="15" fill="rgb(220,200,19)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="421" width="0.0291%" height="15" fill="rgb(239,95,49)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="431.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::allocate_from_iterator (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="405" width="0.0291%" height="15" fill="rgb(235,85,53)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="389" width="0.0291%" height="15" fill="rgb(233,133,31)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="373" width="0.0291%" height="15" fill="rgb(218,25,20)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="357" width="0.0291%" height="15" fill="rgb(252,210,38)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="341" width="0.0291%" height="15" fill="rgb(242,134,21)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="351.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (19,112,951 samples, 0.03%)</title><rect x="55.7119%" y="325" width="0.0291%" height="15" fill="rgb(213,28,48)" fg:x="36530705328" fg:w="19112951"/><text x="55.9619%" y="335.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::is_neighbor (92,344,996 samples, 0.14%)</title><rect x="55.6247%" y="549" width="0.1408%" height="15" fill="rgb(250,196,2)" fg:x="36473521621" fg:w="92344996"/><text x="55.8747%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::is_neighbor (92,344,996 samples, 0.14%)</title><rect x="55.6247%" y="533" width="0.1408%" height="15" fill="rgb(227,5,17)" fg:x="36473521621" fg:w="92344996"/><text x="55.8747%" y="543.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (12,268,660 samples, 0.02%)</title><rect x="55.7468%" y="517" width="0.0187%" height="15" fill="rgb(221,226,24)" fg:x="36553597957" fg:w="12268660"/><text x="55.9968%" y="527.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::BufferUninit&lt;T&gt;&gt;::assume_init (8,181,131 samples, 0.01%)</title><rect x="55.7531%" y="501" width="0.0125%" height="15" fill="rgb(211,5,48)" fg:x="36557685486" fg:w="8181131"/><text x="56.0031%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data (8,181,131 samples, 0.01%)</title><rect x="55.7531%" y="485" width="0.0125%" height="15" fill="rgb(219,150,6)" fg:x="36557685486" fg:w="8181131"/><text x="56.0031%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data_statically_unchecked (8,181,131 samples, 0.01%)</title><rect x="55.7531%" y="469" width="0.0125%" height="15" fill="rgb(251,46,16)" fg:x="36557685486" fg:w="8181131"/><text x="56.0031%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,202,163 samples, 0.02%)</title><rect x="55.7655%" y="421" width="0.0186%" height="15" fill="rgb(220,204,40)" fg:x="36565866617" fg:w="12202163"/><text x="56.0155%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,202,163 samples, 0.02%)</title><rect x="55.7655%" y="405" width="0.0186%" height="15" fill="rgb(211,85,2)" fg:x="36565866617" fg:w="12202163"/><text x="56.0155%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,202,163 samples, 0.02%)</title><rect x="55.7655%" y="389" width="0.0186%" height="15" fill="rgb(229,17,7)" fg:x="36565866617" fg:w="12202163"/><text x="56.0155%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,202,163 samples, 0.02%)</title><rect x="55.7655%" y="373" width="0.0186%" height="15" fill="rgb(239,72,28)" fg:x="36565866617" fg:w="12202163"/><text x="56.0155%" y="383.50"></text></g><g><title>alloc::raw_vec::layout_array (8,099,141 samples, 0.01%)</title><rect x="55.7718%" y="357" width="0.0124%" height="15" fill="rgb(230,47,54)" fg:x="36569969639" fg:w="8099141"/><text x="56.0218%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8,099,141 samples, 0.01%)</title><rect x="55.7718%" y="341" width="0.0124%" height="15" fill="rgb(214,50,8)" fg:x="36569969639" fg:w="8099141"/><text x="56.0218%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (8,099,141 samples, 0.01%)</title><rect x="55.7718%" y="325" width="0.0124%" height="15" fill="rgb(216,198,43)" fg:x="36569969639" fg:w="8099141"/><text x="56.0218%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8,099,141 samples, 0.01%)</title><rect x="55.7718%" y="309" width="0.0124%" height="15" fill="rgb(234,20,35)" fg:x="36569969639" fg:w="8099141"/><text x="56.0218%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (8,099,141 samples, 0.01%)</title><rect x="55.7718%" y="293" width="0.0124%" height="15" fill="rgb(254,45,19)" fg:x="36569969639" fg:w="8099141"/><text x="56.0218%" y="303.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="549" width="0.0435%" height="15" fill="rgb(219,14,44)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="559.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="533" width="0.0435%" height="15" fill="rgb(217,220,26)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="543.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="517" width="0.0435%" height="15" fill="rgb(213,158,28)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="527.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="501" width="0.0435%" height="15" fill="rgb(252,51,52)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="485" width="0.0435%" height="15" fill="rgb(246,89,16)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="469" width="0.0435%" height="15" fill="rgb(216,158,49)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="453" width="0.0435%" height="15" fill="rgb(236,107,19)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,495,676 samples, 0.04%)</title><rect x="55.7655%" y="437" width="0.0435%" height="15" fill="rgb(228,185,30)" fg:x="36565866617" fg:w="28495676"/><text x="56.0155%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16,293,513 samples, 0.02%)</title><rect x="55.7842%" y="421" width="0.0248%" height="15" fill="rgb(246,134,8)" fg:x="36578068780" fg:w="16293513"/><text x="56.0342%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16,293,513 samples, 0.02%)</title><rect x="55.7842%" y="405" width="0.0248%" height="15" fill="rgb(214,143,50)" fg:x="36578068780" fg:w="16293513"/><text x="56.0342%" y="415.50"></text></g><g><title>[libc.so.6] (16,293,513 samples, 0.02%)</title><rect x="55.7842%" y="389" width="0.0248%" height="15" fill="rgb(228,75,8)" fg:x="36578068780" fg:w="16293513"/><text x="56.0342%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="517" width="0.0184%" height="15" fill="rgb(207,175,4)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;cellular_raza_concepts::errors::IndexError&gt; (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="501" width="0.0184%" height="15" fill="rgb(205,108,24)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="485" width="0.0184%" height="15" fill="rgb(244,120,49)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="469" width="0.0184%" height="15" fill="rgb(223,47,38)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="453" width="0.0184%" height="15" fill="rgb(229,179,11)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="437" width="0.0184%" height="15" fill="rgb(231,122,1)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="421" width="0.0184%" height="15" fill="rgb(245,119,9)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="405" width="0.0184%" height="15" fill="rgb(241,163,25)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="389" width="0.0184%" height="15" fill="rgb(217,214,3)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="399.50"></text></g><g><title>cfree (12,059,740 samples, 0.02%)</title><rect x="55.8214%" y="373" width="0.0184%" height="15" fill="rgb(240,86,28)" fg:x="36602484458" fg:w="12059740"/><text x="56.0714%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (12,260,937 samples, 0.02%)</title><rect x="55.8855%" y="469" width="0.0187%" height="15" fill="rgb(215,47,9)" fg:x="36644514167" fg:w="12260937"/><text x="56.1355%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (12,260,937 samples, 0.02%)</title><rect x="55.8855%" y="453" width="0.0187%" height="15" fill="rgb(252,25,45)" fg:x="36644514167" fg:w="12260937"/><text x="56.1355%" y="463.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (36,720,990 samples, 0.06%)</title><rect x="55.8731%" y="485" width="0.0560%" height="15" fill="rgb(251,164,9)" fg:x="36636359860" fg:w="36720990"/><text x="56.1231%" y="495.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::new (16,305,746 samples, 0.02%)</title><rect x="55.9042%" y="469" width="0.0249%" height="15" fill="rgb(233,194,0)" fg:x="36656775104" fg:w="16305746"/><text x="56.1542%" y="479.50"></text></g><g><title>alloc::alloc::alloc_zeroed (16,305,746 samples, 0.02%)</title><rect x="55.9042%" y="453" width="0.0249%" height="15" fill="rgb(249,111,24)" fg:x="36656775104" fg:w="16305746"/><text x="56.1542%" y="463.50"></text></g><g><title>__libc_calloc (12,310,383 samples, 0.02%)</title><rect x="55.9103%" y="437" width="0.0188%" height="15" fill="rgb(250,223,3)" fg:x="36660770467" fg:w="12310383"/><text x="56.1603%" y="447.50"></text></g><g><title>[libc.so.6] (12,040,484 samples, 0.02%)</title><rect x="55.9107%" y="421" width="0.0184%" height="15" fill="rgb(236,178,37)" fg:x="36661040366" fg:w="12040484"/><text x="56.1607%" y="431.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::update_mechanics_interaction_step_1 (19,414,387,347 samples, 29.61%)</title><rect x="26.3391%" y="565" width="29.6083%" height="15" fill="rgb(241,158,50)" fg:x="17270724317" fg:w="19414387347"/><text x="26.5891%" y="575.50">cellular_raza_core::backend::chili::update_mecha..</text></g><g><title>cr_mech_coli::simulation::_::&lt;impl cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;Pos,Vel,Inf&gt;&gt; for cr_mech_coli::simulation::_CrCommunicator&lt;I,Cel,Aux,Pos,Vel,For,Inf&gt;&gt;::send (86,684,972 samples, 0.13%)</title><rect x="55.8152%" y="549" width="0.1322%" height="15" fill="rgb(213,121,41)" fg:x="36598426692" fg:w="86684972"/><text x="56.0652%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::simulation_flow::ChannelComm&lt;I,T&gt; as cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,T&gt;&gt;::send (86,684,972 samples, 0.13%)</title><rect x="55.8152%" y="533" width="0.1322%" height="15" fill="rgb(240,92,3)" fg:x="36598426692" fg:w="86684972"/><text x="56.0652%" y="543.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (70,567,466 samples, 0.11%)</title><rect x="55.8398%" y="517" width="0.1076%" height="15" fill="rgb(205,123,3)" fg:x="36614544198" fg:w="70567466"/><text x="56.0898%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (58,322,559 samples, 0.09%)</title><rect x="55.8585%" y="501" width="0.0889%" height="15" fill="rgb(205,97,47)" fg:x="36626789105" fg:w="58322559"/><text x="56.1085%" y="511.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (12,030,814 samples, 0.02%)</title><rect x="55.9291%" y="485" width="0.0183%" height="15" fill="rgb(247,152,14)" fg:x="36673080850" fg:w="12030814"/><text x="56.1791%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8,124,747 samples, 0.01%)</title><rect x="55.9350%" y="469" width="0.0124%" height="15" fill="rgb(248,195,53)" fg:x="36676986917" fg:w="8124747"/><text x="56.1850%" y="479.50"></text></g><g><title>core::ptr::write (8,124,747 samples, 0.01%)</title><rect x="55.9350%" y="453" width="0.0124%" height="15" fill="rgb(226,201,16)" fg:x="36676986917" fg:w="8124747"/><text x="56.1850%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (22,535,773 samples, 0.03%)</title><rect x="55.9602%" y="549" width="0.0344%" height="15" fill="rgb(205,98,0)" fg:x="36693485440" fg:w="22535773"/><text x="56.2102%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (22,535,773 samples, 0.03%)</title><rect x="55.9602%" y="533" width="0.0344%" height="15" fill="rgb(214,191,48)" fg:x="36693485440" fg:w="22535773"/><text x="56.2102%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22,535,773 samples, 0.03%)</title><rect x="55.9602%" y="517" width="0.0344%" height="15" fill="rgb(237,112,39)" fg:x="36693485440" fg:w="22535773"/><text x="56.2102%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22,535,773 samples, 0.03%)</title><rect x="55.9602%" y="501" width="0.0344%" height="15" fill="rgb(247,203,27)" fg:x="36693485440" fg:w="22535773"/><text x="56.2102%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22,535,773 samples, 0.03%)</title><rect x="55.9602%" y="485" width="0.0344%" height="15" fill="rgb(235,124,28)" fg:x="36693485440" fg:w="22535773"/><text x="56.2102%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12,275,560 samples, 0.02%)</title><rect x="55.9945%" y="549" width="0.0187%" height="15" fill="rgb(208,207,46)" fg:x="36716021213" fg:w="12275560"/><text x="56.2445%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (20,294,906 samples, 0.03%)</title><rect x="56.0133%" y="549" width="0.0310%" height="15" fill="rgb(234,176,4)" fg:x="36728309844" fg:w="20294906"/><text x="56.2633%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20,294,905 samples, 0.03%)</title><rect x="56.0133%" y="533" width="0.0310%" height="15" fill="rgb(230,133,28)" fg:x="36728309845" fg:w="20294905"/><text x="56.2633%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20,294,905 samples, 0.03%)</title><rect x="56.0133%" y="517" width="0.0310%" height="15" fill="rgb(211,137,40)" fg:x="36728309845" fg:w="20294905"/><text x="56.2633%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20,294,905 samples, 0.03%)</title><rect x="56.0133%" y="501" width="0.0310%" height="15" fill="rgb(254,35,13)" fg:x="36728309845" fg:w="20294905"/><text x="56.2633%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="485" width="0.0276%" height="15" fill="rgb(225,49,51)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="469" width="0.0276%" height="15" fill="rgb(251,10,15)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="453" width="0.0276%" height="15" fill="rgb(228,207,15)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="437" width="0.0276%" height="15" fill="rgb(241,99,19)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="421" width="0.0276%" height="15" fill="rgb(207,104,49)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="405" width="0.0276%" height="15" fill="rgb(234,99,18)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="389" width="0.0276%" height="15" fill="rgb(213,191,49)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="373" width="0.0276%" height="15" fill="rgb(210,226,19)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="383.50"></text></g><g><title>alloc::alloc::alloc (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="357" width="0.0276%" height="15" fill="rgb(229,97,18)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="367.50"></text></g><g><title>malloc (18,068,853 samples, 0.03%)</title><rect x="56.0567%" y="341" width="0.0276%" height="15" fill="rgb(211,167,15)" fg:x="36756792691" fg:w="18068853"/><text x="56.3067%" y="351.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (16,311,634 samples, 0.02%)</title><rect x="56.0843%" y="485" width="0.0249%" height="15" fill="rgb(210,169,34)" fg:x="36774861544" fg:w="16311634"/><text x="56.3343%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (12,218,254 samples, 0.02%)</title><rect x="56.0905%" y="469" width="0.0186%" height="15" fill="rgb(241,121,31)" fg:x="36778954924" fg:w="12218254"/><text x="56.3405%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (12,218,254 samples, 0.02%)</title><rect x="56.0905%" y="453" width="0.0186%" height="15" fill="rgb(232,40,11)" fg:x="36778954924" fg:w="12218254"/><text x="56.3405%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,218,254 samples, 0.02%)</title><rect x="56.0905%" y="437" width="0.0186%" height="15" fill="rgb(205,86,26)" fg:x="36778954924" fg:w="12218254"/><text x="56.3405%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,218,254 samples, 0.02%)</title><rect x="56.0905%" y="421" width="0.0186%" height="15" fill="rgb(231,126,28)" fg:x="36778954924" fg:w="12218254"/><text x="56.3405%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="437" width="0.0183%" height="15" fill="rgb(219,221,18)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="447.50"></text></g><g><title>alloc::string::String::push_str (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="421" width="0.0183%" height="15" fill="rgb(211,40,0)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="405" width="0.0183%" height="15" fill="rgb(239,85,43)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="389" width="0.0183%" height="15" fill="rgb(231,55,21)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="373" width="0.0183%" height="15" fill="rgb(225,184,43)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="357" width="0.0183%" height="15" fill="rgb(251,158,41)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="367.50"></text></g><g><title>[libc.so.6] (11,967,165 samples, 0.02%)</title><rect x="56.1340%" y="341" width="0.0183%" height="15" fill="rgb(234,159,37)" fg:x="36807477103" fg:w="11967165"/><text x="56.3840%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (12,249,227 samples, 0.02%)</title><rect x="56.1836%" y="309" width="0.0187%" height="15" fill="rgb(216,204,22)" fg:x="36839989666" fg:w="12249227"/><text x="56.4336%" y="319.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (32,586,473 samples, 0.05%)</title><rect x="56.1775%" y="389" width="0.0497%" height="15" fill="rgb(214,17,3)" fg:x="36835972061" fg:w="32586473"/><text x="56.4275%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with (32,586,473 samples, 0.05%)</title><rect x="56.1775%" y="373" width="0.0497%" height="15" fill="rgb(212,111,17)" fg:x="36835972061" fg:w="32586473"/><text x="56.4275%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32,586,473 samples, 0.05%)</title><rect x="56.1775%" y="357" width="0.0497%" height="15" fill="rgb(221,157,24)" fg:x="36835972061" fg:w="32586473"/><text x="56.4275%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with::_{{closure}} (32,586,473 samples, 0.05%)</title><rect x="56.1775%" y="341" width="0.0497%" height="15" fill="rgb(252,16,13)" fg:x="36835972061" fg:w="32586473"/><text x="56.4275%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (28,568,868 samples, 0.04%)</title><rect x="56.1836%" y="325" width="0.0436%" height="15" fill="rgb(221,62,2)" fg:x="36839989666" fg:w="28568868"/><text x="56.4336%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (16,319,641 samples, 0.02%)</title><rect x="56.2023%" y="309" width="0.0249%" height="15" fill="rgb(247,87,22)" fg:x="36852238893" fg:w="16319641"/><text x="56.4523%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8,158,501 samples, 0.01%)</title><rect x="56.2147%" y="293" width="0.0124%" height="15" fill="rgb(215,73,9)" fg:x="36860400033" fg:w="8158501"/><text x="56.4647%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8,158,077 samples, 0.01%)</title><rect x="56.2147%" y="277" width="0.0124%" height="15" fill="rgb(207,175,33)" fg:x="36860400457" fg:w="8158077"/><text x="56.4647%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (61,136,781 samples, 0.09%)</title><rect x="56.1585%" y="437" width="0.0932%" height="15" fill="rgb(243,129,54)" fg:x="36823539430" fg:w="61136781"/><text x="56.4085%" y="447.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::VoxelPlainIndex as core::fmt::Debug&gt;::fmt (61,136,769 samples, 0.09%)</title><rect x="56.1585%" y="421" width="0.0932%" height="15" fill="rgb(227,119,45)" fg:x="36823539442" fg:w="61136769"/><text x="56.4085%" y="431.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (56,738,047 samples, 0.09%)</title><rect x="56.1652%" y="405" width="0.0865%" height="15" fill="rgb(205,109,36)" fg:x="36827938164" fg:w="56738047"/><text x="56.4152%" y="415.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (16,117,677 samples, 0.02%)</title><rect x="56.2272%" y="389" width="0.0246%" height="15" fill="rgb(205,6,39)" fg:x="36868558534" fg:w="16117677"/><text x="56.4772%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (16,117,677 samples, 0.02%)</title><rect x="56.2272%" y="373" width="0.0246%" height="15" fill="rgb(221,32,16)" fg:x="36868558534" fg:w="16117677"/><text x="56.4772%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16,117,677 samples, 0.02%)</title><rect x="56.2272%" y="357" width="0.0246%" height="15" fill="rgb(228,144,50)" fg:x="36868558534" fg:w="16117677"/><text x="56.4772%" y="367.50"></text></g><g><title>alloc::string::String::push_str (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="341" width="0.0125%" height="15" fill="rgb(229,201,53)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="325" width="0.0125%" height="15" fill="rgb(249,153,27)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="309" width="0.0125%" height="15" fill="rgb(227,106,25)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="293" width="0.0125%" height="15" fill="rgb(230,65,29)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="277" width="0.0125%" height="15" fill="rgb(221,57,46)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="287.50"></text></g><g><title>[libc.so.6] (8,189,305 samples, 0.01%)</title><rect x="56.2393%" y="261" width="0.0125%" height="15" fill="rgb(229,161,17)" fg:x="36876486906" fg:w="8189305"/><text x="56.4893%" y="271.50"></text></g><g><title>alloc::fmt::format (136,251,406 samples, 0.21%)</title><rect x="56.0442%" y="549" width="0.2078%" height="15" fill="rgb(222,213,11)" fg:x="36748604750" fg:w="136251406"/><text x="56.2942%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (136,251,406 samples, 0.21%)</title><rect x="56.0442%" y="533" width="0.2078%" height="15" fill="rgb(235,35,13)" fg:x="36748604750" fg:w="136251406"/><text x="56.2942%" y="543.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (136,251,406 samples, 0.21%)</title><rect x="56.0442%" y="517" width="0.2078%" height="15" fill="rgb(233,158,34)" fg:x="36748604750" fg:w="136251406"/><text x="56.2942%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (136,251,406 samples, 0.21%)</title><rect x="56.0442%" y="501" width="0.2078%" height="15" fill="rgb(215,151,48)" fg:x="36748604750" fg:w="136251406"/><text x="56.2942%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (93,682,978 samples, 0.14%)</title><rect x="56.1092%" y="485" width="0.1429%" height="15" fill="rgb(229,84,14)" fg:x="36791173178" fg:w="93682978"/><text x="56.3592%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (93,682,978 samples, 0.14%)</title><rect x="56.1092%" y="469" width="0.1429%" height="15" fill="rgb(229,68,14)" fg:x="36791173178" fg:w="93682978"/><text x="56.3592%" y="479.50"></text></g><g><title>core::fmt::write (93,682,978 samples, 0.14%)</title><rect x="56.1092%" y="453" width="0.1429%" height="15" fill="rgb(243,106,26)" fg:x="36791173178" fg:w="93682978"/><text x="56.3592%" y="463.50"></text></g><g><title>core::slice::sort::stable::drift::create_run (8,192,653 samples, 0.01%)</title><rect x="56.2520%" y="469" width="0.0125%" height="15" fill="rgb(206,45,38)" fg:x="36884856156" fg:w="8192653"/><text x="56.5020%" y="479.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (8,192,653 samples, 0.01%)</title><rect x="56.2520%" y="453" width="0.0125%" height="15" fill="rgb(226,6,15)" fg:x="36884856156" fg:w="8192653"/><text x="56.5020%" y="463.50"></text></g><g><title>&lt;T as core::slice::sort::shared::smallsort::StableSmallSortTypeImpl&gt;::small_sort (8,192,653 samples, 0.01%)</title><rect x="56.2520%" y="437" width="0.0125%" height="15" fill="rgb(232,22,54)" fg:x="36884856156" fg:w="8192653"/><text x="56.5020%" y="447.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (8,192,653 samples, 0.01%)</title><rect x="56.2520%" y="421" width="0.0125%" height="15" fill="rgb(229,222,32)" fg:x="36884856156" fg:w="8192653"/><text x="56.5020%" y="431.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (8,192,653 samples, 0.01%)</title><rect x="56.2520%" y="405" width="0.0125%" height="15" fill="rgb(228,62,29)" fg:x="36884856156" fg:w="8192653"/><text x="56.5020%" y="415.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (8,172,241 samples, 0.01%)</title><rect x="56.2645%" y="421" width="0.0125%" height="15" fill="rgb(251,103,34)" fg:x="36893048809" fg:w="8172241"/><text x="56.5145%" y="431.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (8,172,241 samples, 0.01%)</title><rect x="56.2645%" y="405" width="0.0125%" height="15" fill="rgb(233,12,30)" fg:x="36893048809" fg:w="8172241"/><text x="56.5145%" y="415.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (8,172,241 samples, 0.01%)</title><rect x="56.2645%" y="389" width="0.0125%" height="15" fill="rgb(238,52,0)" fg:x="36893048809" fg:w="8172241"/><text x="56.5145%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,365,780 samples, 0.02%)</title><rect x="56.2770%" y="405" width="0.0204%" height="15" fill="rgb(223,98,5)" fg:x="36901221050" fg:w="13365780"/><text x="56.5270%" y="415.50"></text></g><g><title>[libc.so.6] (9,296,204 samples, 0.01%)</title><rect x="56.2832%" y="389" width="0.0142%" height="15" fill="rgb(228,75,37)" fg:x="36905290626" fg:w="9296204"/><text x="56.5332%" y="399.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (25,634,971 samples, 0.04%)</title><rect x="56.2645%" y="437" width="0.0391%" height="15" fill="rgb(205,115,49)" fg:x="36893048809" fg:w="25634971"/><text x="56.5145%" y="447.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (17,462,730 samples, 0.03%)</title><rect x="56.2770%" y="421" width="0.0266%" height="15" fill="rgb(250,154,43)" fg:x="36901221050" fg:w="17462730"/><text x="56.5270%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (41,903,888 samples, 0.06%)</title><rect x="56.2520%" y="549" width="0.0639%" height="15" fill="rgb(226,43,29)" fg:x="36884856156" fg:w="41903888"/><text x="56.5020%" y="559.50"></text></g><g><title>alloc::slice::stable_sort (41,903,888 samples, 0.06%)</title><rect x="56.2520%" y="533" width="0.0639%" height="15" fill="rgb(249,228,39)" fg:x="36884856156" fg:w="41903888"/><text x="56.5020%" y="543.50"></text></g><g><title>core::slice::sort::stable::sort (41,903,888 samples, 0.06%)</title><rect x="56.2520%" y="517" width="0.0639%" height="15" fill="rgb(216,79,43)" fg:x="36884856156" fg:w="41903888"/><text x="56.5020%" y="527.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (41,903,888 samples, 0.06%)</title><rect x="56.2520%" y="501" width="0.0639%" height="15" fill="rgb(228,95,12)" fg:x="36884856156" fg:w="41903888"/><text x="56.5020%" y="511.50"></text></g><g><title>core::slice::sort::stable::drift::sort (41,903,888 samples, 0.06%)</title><rect x="56.2520%" y="485" width="0.0639%" height="15" fill="rgb(249,221,15)" fg:x="36884856156" fg:w="41903888"/><text x="56.5020%" y="495.50"></text></g><g><title>core::slice::sort::stable::drift::stable_quicksort (33,711,235 samples, 0.05%)</title><rect x="56.2645%" y="469" width="0.0514%" height="15" fill="rgb(233,34,13)" fg:x="36893048809" fg:w="33711235"/><text x="56.5145%" y="479.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (33,711,235 samples, 0.05%)</title><rect x="56.2645%" y="453" width="0.0514%" height="15" fill="rgb(214,103,39)" fg:x="36893048809" fg:w="33711235"/><text x="56.5145%" y="463.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (8,076,264 samples, 0.01%)</title><rect x="56.3036%" y="437" width="0.0123%" height="15" fill="rgb(251,126,39)" fg:x="36918683780" fg:w="8076264"/><text x="56.5536%" y="447.50"></text></g><g><title>__rust_alloc (7,365,057 samples, 0.01%)</title><rect x="56.4401%" y="277" width="0.0112%" height="15" fill="rgb(214,216,36)" fg:x="37008170045" fg:w="7365057"/><text x="56.6901%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (92,728,194 samples, 0.14%)</title><rect x="56.4401%" y="325" width="0.1414%" height="15" fill="rgb(220,221,8)" fg:x="37008170045" fg:w="92728194"/><text x="56.6901%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (92,728,194 samples, 0.14%)</title><rect x="56.4401%" y="309" width="0.1414%" height="15" fill="rgb(240,216,3)" fg:x="37008170045" fg:w="92728194"/><text x="56.6901%" y="319.50"></text></g><g><title>alloc::alloc::alloc (92,728,194 samples, 0.14%)</title><rect x="56.4401%" y="293" width="0.1414%" height="15" fill="rgb(232,218,17)" fg:x="37008170045" fg:w="92728194"/><text x="56.6901%" y="303.50"></text></g><g><title>malloc (85,363,137 samples, 0.13%)</title><rect x="56.4513%" y="277" width="0.1302%" height="15" fill="rgb(229,163,45)" fg:x="37015535102" fg:w="85363137"/><text x="56.7013%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (109,014,604 samples, 0.17%)</title><rect x="56.4277%" y="389" width="0.1663%" height="15" fill="rgb(231,110,42)" fg:x="37000037283" fg:w="109014604"/><text x="56.6777%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109,014,604 samples, 0.17%)</title><rect x="56.4277%" y="373" width="0.1663%" height="15" fill="rgb(208,170,48)" fg:x="37000037283" fg:w="109014604"/><text x="56.6777%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (109,014,604 samples, 0.17%)</title><rect x="56.4277%" y="357" width="0.1663%" height="15" fill="rgb(239,116,25)" fg:x="37000037283" fg:w="109014604"/><text x="56.6777%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (109,014,604 samples, 0.17%)</title><rect x="56.4277%" y="341" width="0.1663%" height="15" fill="rgb(219,200,50)" fg:x="37000037283" fg:w="109014604"/><text x="56.6777%" y="351.50"></text></g><g><title>alloc::raw_vec::layout_array (8,153,648 samples, 0.01%)</title><rect x="56.5815%" y="325" width="0.0124%" height="15" fill="rgb(245,200,0)" fg:x="37100898239" fg:w="8153648"/><text x="56.8315%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8,153,648 samples, 0.01%)</title><rect x="56.5815%" y="309" width="0.0124%" height="15" fill="rgb(245,119,33)" fg:x="37100898239" fg:w="8153648"/><text x="56.8315%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (8,153,648 samples, 0.01%)</title><rect x="56.5815%" y="293" width="0.0124%" height="15" fill="rgb(231,125,12)" fg:x="37100898239" fg:w="8153648"/><text x="56.8315%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8,153,648 samples, 0.01%)</title><rect x="56.5815%" y="277" width="0.0124%" height="15" fill="rgb(216,96,41)" fg:x="37100898239" fg:w="8153648"/><text x="56.8315%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (8,153,648 samples, 0.01%)</title><rect x="56.5815%" y="261" width="0.0124%" height="15" fill="rgb(248,43,45)" fg:x="37100898239" fg:w="8153648"/><text x="56.8315%" y="271.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="501" width="0.3575%" height="15" fill="rgb(217,222,7)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="485" width="0.3575%" height="15" fill="rgb(233,28,6)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="495.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="469" width="0.3575%" height="15" fill="rgb(231,218,15)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="453" width="0.3575%" height="15" fill="rgb(226,171,48)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="437" width="0.3575%" height="15" fill="rgb(235,201,9)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="421" width="0.3575%" height="15" fill="rgb(217,80,15)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (234,392,825 samples, 0.36%)</title><rect x="56.4277%" y="405" width="0.3575%" height="15" fill="rgb(219,152,8)" fg:x="37000037283" fg:w="234392825"/><text x="56.6777%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (125,378,221 samples, 0.19%)</title><rect x="56.5939%" y="389" width="0.1912%" height="15" fill="rgb(243,107,38)" fg:x="37109051887" fg:w="125378221"/><text x="56.8439%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (125,378,221 samples, 0.19%)</title><rect x="56.5939%" y="373" width="0.1912%" height="15" fill="rgb(231,17,5)" fg:x="37109051887" fg:w="125378221"/><text x="56.8439%" y="383.50"></text></g><g><title>[libc.so.6] (125,378,221 samples, 0.19%)</title><rect x="56.5939%" y="357" width="0.1912%" height="15" fill="rgb(209,25,54)" fg:x="37109051887" fg:w="125378221"/><text x="56.8439%" y="367.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xa (246,601,093 samples, 0.38%)</title><rect x="56.4277%" y="533" width="0.3761%" height="15" fill="rgb(219,0,2)" fg:x="37000037283" fg:w="246601093"/><text x="56.6777%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (246,601,093 samples, 0.38%)</title><rect x="56.4277%" y="517" width="0.3761%" height="15" fill="rgb(246,9,5)" fg:x="37000037283" fg:w="246601093"/><text x="56.6777%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (12,208,268 samples, 0.02%)</title><rect x="56.7852%" y="501" width="0.0186%" height="15" fill="rgb(226,159,4)" fg:x="37234430108" fg:w="12208268"/><text x="57.0352%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,183,172 samples, 0.01%)</title><rect x="56.7913%" y="485" width="0.0125%" height="15" fill="rgb(219,175,34)" fg:x="37238455204" fg:w="8183172"/><text x="57.0413%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (8,143,155 samples, 0.01%)</title><rect x="56.8603%" y="501" width="0.0124%" height="15" fill="rgb(236,10,46)" fg:x="37283717393" fg:w="8143155"/><text x="57.1103%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (8,143,155 samples, 0.01%)</title><rect x="56.8603%" y="485" width="0.0124%" height="15" fill="rgb(240,211,16)" fg:x="37283717393" fg:w="8143155"/><text x="57.1103%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (28,817,662 samples, 0.04%)</title><rect x="56.8727%" y="485" width="0.0439%" height="15" fill="rgb(205,3,43)" fg:x="37291860548" fg:w="28817662"/><text x="57.1227%" y="495.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (8,678,869 samples, 0.01%)</title><rect x="56.9167%" y="485" width="0.0132%" height="15" fill="rgb(245,7,22)" fg:x="37320678210" fg:w="8678869"/><text x="57.1667%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (60,672,266 samples, 0.09%)</title><rect x="56.8541%" y="517" width="0.0925%" height="15" fill="rgb(239,132,32)" fg:x="37279640074" fg:w="60672266"/><text x="57.1041%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (48,451,792 samples, 0.07%)</title><rect x="56.8727%" y="501" width="0.0739%" height="15" fill="rgb(228,202,34)" fg:x="37291860548" fg:w="48451792"/><text x="57.1227%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10,955,261 samples, 0.02%)</title><rect x="56.9299%" y="485" width="0.0167%" height="15" fill="rgb(254,200,22)" fg:x="37329357079" fg:w="10955261"/><text x="57.1799%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10,955,261 samples, 0.02%)</title><rect x="56.9299%" y="469" width="0.0167%" height="15" fill="rgb(219,10,39)" fg:x="37329357079" fg:w="10955261"/><text x="57.1799%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12,250,801 samples, 0.02%)</title><rect x="56.9466%" y="437" width="0.0187%" height="15" fill="rgb(226,210,39)" fg:x="37340312340" fg:w="12250801"/><text x="57.1966%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (12,250,801 samples, 0.02%)</title><rect x="56.9466%" y="421" width="0.0187%" height="15" fill="rgb(208,219,16)" fg:x="37340312340" fg:w="12250801"/><text x="57.1966%" y="431.50"></text></g><g><title>__rust_alloc (12,327,227 samples, 0.02%)</title><rect x="56.9839%" y="277" width="0.0188%" height="15" fill="rgb(216,158,51)" fg:x="37364775587" fg:w="12327227"/><text x="57.2339%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81,629,550 samples, 0.12%)</title><rect x="56.9653%" y="389" width="0.1245%" height="15" fill="rgb(233,14,44)" fg:x="37352563141" fg:w="81629550"/><text x="57.2153%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81,629,550 samples, 0.12%)</title><rect x="56.9653%" y="373" width="0.1245%" height="15" fill="rgb(237,97,39)" fg:x="37352563141" fg:w="81629550"/><text x="57.2153%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (81,629,550 samples, 0.12%)</title><rect x="56.9653%" y="357" width="0.1245%" height="15" fill="rgb(218,198,43)" fg:x="37352563141" fg:w="81629550"/><text x="57.2153%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (81,629,550 samples, 0.12%)</title><rect x="56.9653%" y="341" width="0.1245%" height="15" fill="rgb(231,104,20)" fg:x="37352563141" fg:w="81629550"/><text x="57.2153%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77,561,578 samples, 0.12%)</title><rect x="56.9715%" y="325" width="0.1183%" height="15" fill="rgb(254,36,13)" fg:x="37356631113" fg:w="77561578"/><text x="57.2215%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77,561,578 samples, 0.12%)</title><rect x="56.9715%" y="309" width="0.1183%" height="15" fill="rgb(248,14,50)" fg:x="37356631113" fg:w="77561578"/><text x="57.2215%" y="319.50"></text></g><g><title>alloc::alloc::alloc (77,561,578 samples, 0.12%)</title><rect x="56.9715%" y="293" width="0.1183%" height="15" fill="rgb(217,107,29)" fg:x="37356631113" fg:w="77561578"/><text x="57.2215%" y="303.50"></text></g><g><title>malloc (57,089,877 samples, 0.09%)</title><rect x="57.0027%" y="277" width="0.0871%" height="15" fill="rgb(251,169,33)" fg:x="37377102814" fg:w="57089877"/><text x="57.2527%" y="287.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::clone_owned (211,437,193 samples, 0.32%)</title><rect x="56.9466%" y="501" width="0.3225%" height="15" fill="rgb(217,108,32)" fg:x="37340312340" fg:w="211437193"/><text x="57.1966%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,nalgebra::base::dimension::Dyn,C&gt; as nalgebra::base::storage::Storage&lt;T,nalgebra::base::dimension::Dyn,C&gt;&gt;::clone_owned (211,437,193 samples, 0.32%)</title><rect x="56.9466%" y="485" width="0.3225%" height="15" fill="rgb(219,66,42)" fg:x="37340312340" fg:w="211437193"/><text x="57.1966%" y="495.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (211,437,193 samples, 0.32%)</title><rect x="56.9466%" y="469" width="0.3225%" height="15" fill="rgb(206,180,7)" fg:x="37340312340" fg:w="211437193"/><text x="57.1966%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (211,437,193 samples, 0.32%)</title><rect x="56.9466%" y="453" width="0.3225%" height="15" fill="rgb(208,226,31)" fg:x="37340312340" fg:w="211437193"/><text x="57.1966%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (199,186,392 samples, 0.30%)</title><rect x="56.9653%" y="437" width="0.3038%" height="15" fill="rgb(218,26,49)" fg:x="37352563141" fg:w="199186392"/><text x="57.2153%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (199,186,392 samples, 0.30%)</title><rect x="56.9653%" y="421" width="0.3038%" height="15" fill="rgb(233,197,48)" fg:x="37352563141" fg:w="199186392"/><text x="57.2153%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (199,186,392 samples, 0.30%)</title><rect x="56.9653%" y="405" width="0.3038%" height="15" fill="rgb(252,181,51)" fg:x="37352563141" fg:w="199186392"/><text x="57.2153%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (117,556,842 samples, 0.18%)</title><rect x="57.0898%" y="389" width="0.1793%" height="15" fill="rgb(253,90,19)" fg:x="37434192691" fg:w="117556842"/><text x="57.3398%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (117,556,842 samples, 0.18%)</title><rect x="57.0898%" y="373" width="0.1793%" height="15" fill="rgb(215,171,30)" fg:x="37434192691" fg:w="117556842"/><text x="57.3398%" y="383.50"></text></g><g><title>[libc.so.6] (117,556,842 samples, 0.18%)</title><rect x="57.0898%" y="357" width="0.1793%" height="15" fill="rgb(214,222,9)" fg:x="37434192691" fg:w="117556842"/><text x="57.3398%" y="367.50"></text></g><g><title>&lt;X as cellular_raza_concepts::reactions::Xapy&lt;F&gt;&gt;::xapy (325,544,187 samples, 0.50%)</title><rect x="56.8038%" y="533" width="0.4965%" height="15" fill="rgb(223,3,22)" fg:x="37246638376" fg:w="325544187"/><text x="57.0538%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (231,870,223 samples, 0.35%)</title><rect x="56.9466%" y="517" width="0.3536%" height="15" fill="rgb(225,196,46)" fg:x="37340312340" fg:w="231870223"/><text x="57.1966%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (20,433,030 samples, 0.03%)</title><rect x="57.2691%" y="501" width="0.0312%" height="15" fill="rgb(209,110,37)" fg:x="37551749533" fg:w="20433030"/><text x="57.5191%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (173,363,376 samples, 0.26%)</title><rect x="57.3002%" y="533" width="0.2644%" height="15" fill="rgb(249,89,12)" fg:x="37572182563" fg:w="173363376"/><text x="57.5502%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="485" width="0.0814%" height="15" fill="rgb(226,27,33)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="469" width="0.0814%" height="15" fill="rgb(213,82,22)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="453" width="0.0814%" height="15" fill="rgb(248,140,0)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="437" width="0.0814%" height="15" fill="rgb(228,106,3)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="421" width="0.0814%" height="15" fill="rgb(209,23,37)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="405" width="0.0814%" height="15" fill="rgb(241,93,50)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="389" width="0.0814%" height="15" fill="rgb(253,46,43)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (53,383,057 samples, 0.08%)</title><rect x="57.5710%" y="373" width="0.0814%" height="15" fill="rgb(226,206,43)" fg:x="37749735565" fg:w="53383057"/><text x="57.8210%" y="383.50"></text></g><g><title>cfree (36,522,844 samples, 0.06%)</title><rect x="57.5967%" y="357" width="0.0557%" height="15" fill="rgb(217,54,7)" fg:x="37766595778" fg:w="36522844"/><text x="57.8467%" y="367.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (36,511,344 samples, 0.06%)</title><rect x="57.6649%" y="453" width="0.0557%" height="15" fill="rgb(223,5,52)" fg:x="37811267800" fg:w="36511344"/><text x="57.9149%" y="463.50"></text></g><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (106,218,879 samples, 0.16%)</title><rect x="57.5710%" y="533" width="0.1620%" height="15" fill="rgb(206,52,46)" fg:x="37749735565" fg:w="106218879"/><text x="57.8210%" y="543.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (106,218,879 samples, 0.16%)</title><rect x="57.5710%" y="517" width="0.1620%" height="15" fill="rgb(253,136,11)" fg:x="37749735565" fg:w="106218879"/><text x="57.8210%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (106,218,879 samples, 0.16%)</title><rect x="57.5710%" y="501" width="0.1620%" height="15" fill="rgb(208,106,33)" fg:x="37749735565" fg:w="106218879"/><text x="57.8210%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (52,835,822 samples, 0.08%)</title><rect x="57.6524%" y="485" width="0.0806%" height="15" fill="rgb(206,54,4)" fg:x="37803118622" fg:w="52835822"/><text x="57.9024%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (52,835,822 samples, 0.08%)</title><rect x="57.6524%" y="469" width="0.0806%" height="15" fill="rgb(213,3,15)" fg:x="37803118622" fg:w="52835822"/><text x="57.9024%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,175,300 samples, 0.01%)</title><rect x="57.7206%" y="453" width="0.0125%" height="15" fill="rgb(252,211,39)" fg:x="37847779144" fg:w="8175300"/><text x="57.9706%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,175,300 samples, 0.01%)</title><rect x="57.7206%" y="437" width="0.0125%" height="15" fill="rgb(223,6,36)" fg:x="37847779144" fg:w="8175300"/><text x="57.9706%" y="447.50"></text></g><g><title>__rdl_dealloc (36,789,858 samples, 0.06%)</title><rect x="57.7454%" y="405" width="0.0561%" height="15" fill="rgb(252,169,45)" fg:x="37864089907" fg:w="36789858"/><text x="57.9954%" y="415.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8,059,122 samples, 0.01%)</title><rect x="57.7892%" y="389" width="0.0123%" height="15" fill="rgb(212,48,26)" fg:x="37892820643" fg:w="8059122"/><text x="58.0392%" y="399.50"></text></g><g><title>__rust_dealloc (51,460,059 samples, 0.08%)</title><rect x="57.8015%" y="405" width="0.0785%" height="15" fill="rgb(251,102,48)" fg:x="37900879765" fg:w="51460059"/><text x="58.0515%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (383,326,576 samples, 0.58%)</title><rect x="57.7392%" y="437" width="0.5846%" height="15" fill="rgb(243,208,16)" fg:x="37860029150" fg:w="383326576"/><text x="57.9892%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (383,326,576 samples, 0.58%)</title><rect x="57.7392%" y="421" width="0.5846%" height="15" fill="rgb(219,96,24)" fg:x="37860029150" fg:w="383326576"/><text x="57.9892%" y="431.50"></text></g><g><title>cfree (291,015,902 samples, 0.44%)</title><rect x="57.8800%" y="405" width="0.4438%" height="15" fill="rgb(219,33,29)" fg:x="37952339824" fg:w="291015902"/><text x="58.1300%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (391,435,112 samples, 0.60%)</title><rect x="57.7330%" y="533" width="0.5970%" height="15" fill="rgb(223,176,5)" fg:x="37855954444" fg:w="391435112"/><text x="57.9830%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (391,435,112 samples, 0.60%)</title><rect x="57.7330%" y="517" width="0.5970%" height="15" fill="rgb(228,140,14)" fg:x="37855954444" fg:w="391435112"/><text x="57.9830%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (391,435,112 samples, 0.60%)</title><rect x="57.7330%" y="501" width="0.5970%" height="15" fill="rgb(217,179,31)" fg:x="37855954444" fg:w="391435112"/><text x="57.9830%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (391,435,112 samples, 0.60%)</title><rect x="57.7330%" y="485" width="0.5970%" height="15" fill="rgb(230,9,30)" fg:x="37855954444" fg:w="391435112"/><text x="57.9830%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (391,435,112 samples, 0.60%)</title><rect x="57.7330%" y="469" width="0.5970%" height="15" fill="rgb(230,136,20)" fg:x="37855954444" fg:w="391435112"/><text x="57.9830%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (387,360,406 samples, 0.59%)</title><rect x="57.7392%" y="453" width="0.5908%" height="15" fill="rgb(215,210,22)" fg:x="37860029150" fg:w="387360406"/><text x="57.9892%" y="463.50"></text></g><g><title>&lt;itertools::tuple_impl::TupleWindows&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (274,764,152 samples, 0.42%)</title><rect x="59.9735%" y="485" width="0.4190%" height="15" fill="rgb(218,43,5)" fg:x="39325029832" fg:w="274764152"/><text x="60.2235%" y="495.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (274,764,152 samples, 0.42%)</title><rect x="59.9735%" y="469" width="0.4190%" height="15" fill="rgb(216,11,5)" fg:x="39325029832" fg:w="274764152"/><text x="60.2235%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="453" width="0.0624%" height="15" fill="rgb(209,82,29)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="437" width="0.0624%" height="15" fill="rgb(244,115,12)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="421" width="0.0624%" height="15" fill="rgb(222,82,18)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="431.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="405" width="0.0624%" height="15" fill="rgb(249,227,8)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="415.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="389" width="0.0624%" height="15" fill="rgb(253,141,45)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="373" width="0.0624%" height="15" fill="rgb(234,184,4)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="383.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="357" width="0.0624%" height="15" fill="rgb(218,194,23)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="341" width="0.0624%" height="15" fill="rgb(235,66,41)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (40,940,622 samples, 0.06%)</title><rect x="60.3301%" y="325" width="0.0624%" height="15" fill="rgb(245,217,1)" fg:x="39558853362" fg:w="40940622"/><text x="60.5801%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (311,638,940 samples, 0.48%)</title><rect x="59.9673%" y="501" width="0.4753%" height="15" fill="rgb(229,91,1)" fg:x="39320999136" fg:w="311638940"/><text x="60.2173%" y="511.50"></text></g><g><title>&lt;nalgebra::base::iter::RowIter&lt;T,R,C,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="485" width="0.0501%" height="15" fill="rgb(207,101,30)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="469" width="0.0501%" height="15" fill="rgb(223,82,49)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="453" width="0.0501%" height="15" fill="rgb(218,167,17)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="437" width="0.0501%" height="15" fill="rgb(208,103,14)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="447.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_unchecked (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="421" width="0.0501%" height="15" fill="rgb(238,20,8)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="431.50"></text></g><g><title>nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new_with_strides_unchecked (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="405" width="0.0501%" height="15" fill="rgb(218,80,54)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="389" width="0.0501%" height="15" fill="rgb(240,144,17)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="399.50"></text></g><g><title>nalgebra::base::storage::RawStorage::get_address_unchecked_linear (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="373" width="0.0501%" height="15" fill="rgb(245,27,50)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="357" width="0.0501%" height="15" fill="rgb(251,51,7)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (32,844,092 samples, 0.05%)</title><rect x="60.3925%" y="341" width="0.0501%" height="15" fill="rgb(245,217,29)" fg:x="39599793984" fg:w="32844092"/><text x="60.6425%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (209,797,648 samples, 0.32%)</title><rect x="60.4426%" y="501" width="0.3200%" height="15" fill="rgb(221,176,29)" fg:x="39632638076" fg:w="209797648"/><text x="60.6926%" y="511.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::exp (12,294,072 samples, 0.02%)</title><rect x="63.5209%" y="453" width="0.0187%" height="15" fill="rgb(212,180,24)" fg:x="41651095116" fg:w="12294072"/><text x="63.7709%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::exp (12,294,072 samples, 0.02%)</title><rect x="63.5209%" y="437" width="0.0187%" height="15" fill="rgb(254,24,2)" fg:x="41651095116" fg:w="12294072"/><text x="63.7709%" y="447.50"></text></g><g><title>[libm.so.6] (12,294,072 samples, 0.02%)</title><rect x="63.5209%" y="421" width="0.0187%" height="15" fill="rgb(230,100,2)" fg:x="41651095116" fg:w="12294072"/><text x="63.7709%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::gt (3,907,126,629 samples, 5.96%)</title><rect x="63.5396%" y="453" width="5.9586%" height="15" fill="rgb(219,142,25)" fg:x="41663389188" fg:w="3907126629"/><text x="63.7896%" y="463.50">core::cm..</text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (562,044,962 samples, 0.86%)</title><rect x="69.4983%" y="437" width="0.8572%" height="15" fill="rgb(240,73,43)" fg:x="45570515817" fg:w="562044962"/><text x="69.7483%" y="447.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (562,044,962 samples, 0.86%)</title><rect x="69.4983%" y="421" width="0.8572%" height="15" fill="rgb(214,114,15)" fg:x="45570515817" fg:w="562044962"/><text x="69.7483%" y="431.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (562,044,962 samples, 0.86%)</title><rect x="69.4983%" y="405" width="0.8572%" height="15" fill="rgb(207,130,4)" fg:x="45570515817" fg:w="562044962"/><text x="69.7483%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1,810,737,604 samples, 2.76%)</title><rect x="70.3554%" y="389" width="2.7615%" height="15" fill="rgb(221,25,40)" fg:x="46132560779" fg:w="1810737604"/><text x="70.6054%" y="399.50">&lt;f..</text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (3,044,225,134 samples, 4.64%)</title><rect x="69.4983%" y="453" width="4.6427%" height="15" fill="rgb(241,184,7)" fg:x="45570515817" fg:w="3044225134"/><text x="69.7483%" y="463.50">nalge..</text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (2,482,180,172 samples, 3.79%)</title><rect x="70.3554%" y="437" width="3.7855%" height="15" fill="rgb(235,159,4)" fg:x="46132560779" fg:w="2482180172"/><text x="70.6054%" y="447.50">nalg..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (2,482,180,172 samples, 3.79%)</title><rect x="70.3554%" y="421" width="3.7855%" height="15" fill="rgb(214,87,48)" fg:x="46132560779" fg:w="2482180172"/><text x="70.6054%" y="431.50">nalg..</text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (2,482,180,172 samples, 3.79%)</title><rect x="70.3554%" y="405" width="3.7855%" height="15" fill="rgb(246,198,24)" fg:x="46132560779" fg:w="2482180172"/><text x="70.6054%" y="415.50">nalg..</text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (671,442,568 samples, 1.02%)</title><rect x="73.1169%" y="389" width="1.0240%" height="15" fill="rgb(209,66,40)" fg:x="47943298383" fg:w="671442568"/><text x="73.3669%" y="399.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (13,487,820,225 samples, 20.57%)</title><rect x="60.7625%" y="501" width="20.5699%" height="15" fill="rgb(233,147,39)" fg:x="39842435724" fg:w="13487820225"/><text x="61.0125%" y="511.50">&lt;cr_mech_coli::agent::PhysicalIn..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::interaction::MorsePotentialF32 as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,_,1_usize&gt;&gt;,f32&gt;&gt;::calculate_force_between (12,190,077,898 samples, 18.59%)</title><rect x="62.7417%" y="485" width="18.5907%" height="15" fill="rgb(231,145,52)" fg:x="41140178051" fg:w="12190077898"/><text x="62.9917%" y="495.50">&lt;cellular_raza_building_block..</text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::calculate_morse_interaction (12,190,077,898 samples, 18.59%)</title><rect x="62.7417%" y="469" width="18.5907%" height="15" fill="rgb(206,20,26)" fg:x="41140178051" fg:w="12190077898"/><text x="62.9917%" y="479.50">cellular_raza_building_blocks..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (4,715,514,998 samples, 7.19%)</title><rect x="74.1409%" y="453" width="7.1915%" height="15" fill="rgb(238,220,4)" fg:x="48614740951" fg:w="4715514998"/><text x="74.3909%" y="463.50">nalgebra::..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_to_statically_unchecked_uninit (4,715,514,998 samples, 7.19%)</title><rect x="74.1409%" y="437" width="7.1915%" height="15" fill="rgb(252,195,42)" fg:x="48614740951" fg:w="4715514998"/><text x="74.3909%" y="447.50">nalgebra::..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (4,715,514,998 samples, 7.19%)</title><rect x="74.1409%" y="421" width="7.1915%" height="15" fill="rgb(209,10,6)" fg:x="48614740951" fg:w="4715514998"/><text x="74.3909%" y="431.50">core::clon..</text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (343,680,654 samples, 0.52%)</title><rect x="85.9107%" y="485" width="0.5241%" height="15" fill="rgb(229,3,52)" fg:x="56332285629" fg:w="343680654"/><text x="86.1607%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (12,261,348 samples, 0.02%)</title><rect x="86.4349%" y="485" width="0.0187%" height="15" fill="rgb(253,49,37)" fg:x="56675966283" fg:w="12261348"/><text x="86.6849%" y="495.50"></text></g><g><title>&lt;f32 as simba::scalar::real::RealField&gt;::clamp (39,401,410 samples, 0.06%)</title><rect x="86.4536%" y="485" width="0.0601%" height="15" fill="rgb(240,103,49)" fg:x="56688227631" fg:w="39401410"/><text x="86.7036%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (233,750,676 samples, 0.36%)</title><rect x="86.5137%" y="453" width="0.3565%" height="15" fill="rgb(250,182,30)" fg:x="56727630252" fg:w="233750676"/><text x="86.7637%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dot (384,071,956 samples, 0.59%)</title><rect x="86.5137%" y="485" width="0.5857%" height="15" fill="rgb(248,8,30)" fg:x="56727630252" fg:w="384071956"/><text x="86.7637%" y="495.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (384,071,956 samples, 0.59%)</title><rect x="86.5137%" y="469" width="0.5857%" height="15" fill="rgb(237,120,30)" fg:x="56727630252" fg:w="384071956"/><text x="86.7637%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (150,321,280 samples, 0.23%)</title><rect x="86.8702%" y="453" width="0.2293%" height="15" fill="rgb(221,146,34)" fg:x="56961380928" fg:w="150321280"/><text x="87.1202%" y="463.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (366,554,800 samples, 0.56%)</title><rect x="87.0994%" y="469" width="0.5590%" height="15" fill="rgb(242,55,13)" fg:x="57111702208" fg:w="366554800"/><text x="87.3494%" y="479.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (366,554,800 samples, 0.56%)</title><rect x="87.0994%" y="453" width="0.5590%" height="15" fill="rgb(242,112,31)" fg:x="57111702208" fg:w="366554800"/><text x="87.3494%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (366,554,800 samples, 0.56%)</title><rect x="87.0994%" y="437" width="0.5590%" height="15" fill="rgb(249,192,27)" fg:x="57111702208" fg:w="366554800"/><text x="87.3494%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (448,308,514 samples, 0.68%)</title><rect x="87.6584%" y="421" width="0.6837%" height="15" fill="rgb(208,204,44)" fg:x="57478257008" fg:w="448308514"/><text x="87.9084%" y="431.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (1,419,548,828 samples, 2.16%)</title><rect x="87.0994%" y="485" width="2.1649%" height="15" fill="rgb(208,93,54)" fg:x="57111702208" fg:w="1419548828"/><text x="87.3494%" y="495.50">n..</text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm_squared (1,052,994,028 samples, 1.61%)</title><rect x="87.6584%" y="469" width="1.6059%" height="15" fill="rgb(242,1,31)" fg:x="57478257008" fg:w="1052994028"/><text x="87.9084%" y="479.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotc (1,052,994,028 samples, 1.61%)</title><rect x="87.6584%" y="453" width="1.6059%" height="15" fill="rgb(241,83,25)" fg:x="57478257008" fg:w="1052994028"/><text x="87.9084%" y="463.50"></text></g><g><title>nalgebra::base::blas::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::dotx (1,052,994,028 samples, 1.61%)</title><rect x="87.6584%" y="437" width="1.6059%" height="15" fill="rgb(205,169,50)" fg:x="57478257008" fg:w="1052994028"/><text x="87.9084%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (604,685,514 samples, 0.92%)</title><rect x="88.3421%" y="421" width="0.9222%" height="15" fill="rgb(239,186,37)" fg:x="57926565522" fg:w="604685514"/><text x="88.5921%" y="431.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (130,675,841 samples, 0.20%)</title><rect x="89.2643%" y="485" width="0.1993%" height="15" fill="rgb(205,221,10)" fg:x="58531251036" fg:w="130675841"/><text x="89.5143%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Add&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add (130,675,841 samples, 0.20%)</title><rect x="89.2643%" y="469" width="0.1993%" height="15" fill="rgb(218,196,15)" fg:x="58531251036" fg:w="130675841"/><text x="89.5143%" y="479.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (130,675,841 samples, 0.20%)</title><rect x="89.2643%" y="453" width="0.1993%" height="15" fill="rgb(218,196,35)" fg:x="58531251036" fg:w="130675841"/><text x="89.5143%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (130,675,841 samples, 0.20%)</title><rect x="89.2643%" y="437" width="0.1993%" height="15" fill="rgb(233,63,24)" fg:x="58531251036" fg:w="130675841"/><text x="89.5143%" y="447.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Mul&lt;T&gt; for nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::mul (1,096,245,487 samples, 1.67%)</title><rect x="89.4636%" y="485" width="1.6719%" height="15" fill="rgb(225,8,4)" fg:x="58661926877" fg:w="1096245487"/><text x="89.7136%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1,096,245,487 samples, 1.67%)</title><rect x="89.4636%" y="469" width="1.6719%" height="15" fill="rgb(234,105,35)" fg:x="58661926877" fg:w="1096245487"/><text x="89.7136%" y="479.50"></text></g><g><title>cellular_raza_building_blocks::cell_building_blocks::interaction::nearest_point_from_point_to_line (7,160,330,865 samples, 10.92%)</title><rect x="81.3324%" y="501" width="10.9200%" height="15" fill="rgb(236,21,32)" fg:x="53330255949" fg:w="7160330865"/><text x="81.5824%" y="511.50">cellular_raza_bu..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for &amp;nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (732,414,450 samples, 1.12%)</title><rect x="91.1355%" y="485" width="1.1170%" height="15" fill="rgb(228,109,6)" fg:x="59758172364" fg:w="732414450"/><text x="91.3855%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub_assign_statically_unchecked_mut (732,414,450 samples, 1.12%)</title><rect x="91.1355%" y="469" width="1.1170%" height="15" fill="rgb(229,215,31)" fg:x="59758172364" fg:w="732414450"/><text x="91.3855%" y="479.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (732,414,450 samples, 1.12%)</title><rect x="91.1355%" y="453" width="1.1170%" height="15" fill="rgb(221,52,54)" fg:x="59758172364" fg:w="732414450"/><text x="91.3855%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="357" width="0.3280%" height="15" fill="rgb(252,129,43)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="341" width="0.3280%" height="15" fill="rgb(248,183,27)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="325" width="0.3280%" height="15" fill="rgb(250,0,22)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="309" width="0.3280%" height="15" fill="rgb(213,166,10)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="293" width="0.3280%" height="15" fill="rgb(207,163,36)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="277" width="0.3280%" height="15" fill="rgb(208,122,22)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="261" width="0.3280%" height="15" fill="rgb(207,104,49)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="271.50"></text></g><g><title>core::ptr::write (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="245" width="0.3280%" height="15" fill="rgb(248,211,50)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="255.50"></text></g><g><title>[libc.so.6] (215,095,958 samples, 0.33%)</title><rect x="92.2524%" y="229" width="0.3280%" height="15" fill="rgb(217,13,45)" fg:x="60490586814" fg:w="215095958"/><text x="92.5024%" y="239.50"></text></g><g><title>__rdl_alloc (12,273,618 samples, 0.02%)</title><rect x="92.5945%" y="229" width="0.0187%" height="15" fill="rgb(211,216,49)" fg:x="60714848447" fg:w="12273618"/><text x="92.8445%" y="239.50"></text></g><g><title>__rust_alloc (16,311,684 samples, 0.02%)</title><rect x="92.6132%" y="229" width="0.0249%" height="15" fill="rgb(221,58,53)" fg:x="60727122065" fg:w="16311684"/><text x="92.8632%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (141,824,824 samples, 0.22%)</title><rect x="92.5805%" y="277" width="0.2163%" height="15" fill="rgb(220,112,41)" fg:x="60705682772" fg:w="141824824"/><text x="92.8305%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (141,824,824 samples, 0.22%)</title><rect x="92.5805%" y="261" width="0.2163%" height="15" fill="rgb(236,38,28)" fg:x="60705682772" fg:w="141824824"/><text x="92.8305%" y="271.50"></text></g><g><title>alloc::alloc::alloc (141,824,824 samples, 0.22%)</title><rect x="92.5805%" y="245" width="0.2163%" height="15" fill="rgb(227,195,22)" fg:x="60705682772" fg:w="141824824"/><text x="92.8305%" y="255.50"></text></g><g><title>malloc (104,073,847 samples, 0.16%)</title><rect x="92.6381%" y="229" width="0.1587%" height="15" fill="rgb(214,55,33)" fg:x="60743433749" fg:w="104073847"/><text x="92.8881%" y="239.50"></text></g><g><title>[libc.so.6] (62,400,041 samples, 0.10%)</title><rect x="92.7016%" y="213" width="0.0952%" height="15" fill="rgb(248,80,13)" fg:x="60785107555" fg:w="62400041"/><text x="92.9516%" y="223.50"></text></g><g><title>[libc.so.6] (7,604,925 samples, 0.01%)</title><rect x="92.7852%" y="197" width="0.0116%" height="15" fill="rgb(238,52,6)" fg:x="60839902671" fg:w="7604925"/><text x="93.0352%" y="207.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,nalgebra::base::dimension::Dyn,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="501" width="0.5506%" height="15" fill="rgb(224,198,47)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="511.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::zeros_generic (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="485" width="0.5506%" height="15" fill="rgb(233,171,20)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="495.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_element_generic (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="469" width="0.5506%" height="15" fill="rgb(241,30,25)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="479.50"></text></g><g><title>nalgebra::base::construction::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::Buffer&lt;T&gt;&gt;&gt;::from_iterator_generic (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="453" width="0.5506%" height="15" fill="rgb(207,171,38)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="463.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Dyn,C&gt;&gt;::allocate_from_iterator (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="437" width="0.5506%" height="15" fill="rgb(234,70,1)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="421" width="0.5506%" height="15" fill="rgb(232,178,18)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="405" width="0.5506%" height="15" fill="rgb(241,78,40)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="389" width="0.5506%" height="15" fill="rgb(222,35,25)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (361,007,886 samples, 0.55%)</title><rect x="92.2524%" y="373" width="0.5506%" height="15" fill="rgb(207,92,16)" fg:x="60490586814" fg:w="361007886"/><text x="92.5024%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (145,911,928 samples, 0.22%)</title><rect x="92.5805%" y="357" width="0.2225%" height="15" fill="rgb(216,59,51)" fg:x="60705682772" fg:w="145911928"/><text x="92.8305%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (145,911,928 samples, 0.22%)</title><rect x="92.5805%" y="341" width="0.2225%" height="15" fill="rgb(213,80,28)" fg:x="60705682772" fg:w="145911928"/><text x="92.8305%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (145,911,928 samples, 0.22%)</title><rect x="92.5805%" y="325" width="0.2225%" height="15" fill="rgb(220,93,7)" fg:x="60705682772" fg:w="145911928"/><text x="92.8305%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (145,911,928 samples, 0.22%)</title><rect x="92.5805%" y="309" width="0.2225%" height="15" fill="rgb(225,24,44)" fg:x="60705682772" fg:w="145911928"/><text x="92.8305%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (145,911,928 samples, 0.22%)</title><rect x="92.5805%" y="293" width="0.2225%" height="15" fill="rgb(243,74,40)" fg:x="60705682772" fg:w="145911928"/><text x="92.8305%" y="303.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose_to_uninit (774,227,151 samples, 1.18%)</title><rect x="92.8092%" y="485" width="1.1808%" height="15" fill="rgb(228,39,7)" fg:x="60855678315" fg:w="774227151"/><text x="93.0592%" y="495.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (774,227,151 samples, 1.18%)</title><rect x="92.8092%" y="469" width="1.1808%" height="15" fill="rgb(227,79,8)" fg:x="60855678315" fg:w="774227151"/><text x="93.0592%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (1,031,874,792 samples, 1.57%)</title><rect x="92.8092%" y="501" width="1.5737%" height="15" fill="rgb(236,58,11)" fg:x="60855678315" fg:w="1031874792"/><text x="93.0592%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::BufferUninit&lt;T&gt;&gt;::assume_init (257,647,641 samples, 0.39%)</title><rect x="93.9900%" y="485" width="0.3929%" height="15" fill="rgb(249,63,35)" fg:x="61629905466" fg:w="257647641"/><text x="94.2400%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data (257,647,641 samples, 0.39%)</title><rect x="93.9900%" y="469" width="0.3929%" height="15" fill="rgb(252,114,16)" fg:x="61629905466" fg:w="257647641"/><text x="94.2400%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data_statically_unchecked (257,647,641 samples, 0.39%)</title><rect x="93.9900%" y="453" width="0.3929%" height="15" fill="rgb(254,151,24)" fg:x="61629905466" fg:w="257647641"/><text x="94.2400%" y="463.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::row_mut (217,392,436 samples, 0.33%)</title><rect x="94.3829%" y="501" width="0.3315%" height="15" fill="rgb(253,54,39)" fg:x="61887553107" fg:w="217392436"/><text x="94.6329%" y="511.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::fixed_rows_mut (217,392,436 samples, 0.33%)</title><rect x="94.3829%" y="485" width="0.3315%" height="15" fill="rgb(243,25,45)" fg:x="61887553107" fg:w="217392436"/><text x="94.6329%" y="495.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::rows_generic_mut (217,392,436 samples, 0.33%)</title><rect x="94.3829%" y="469" width="0.3315%" height="15" fill="rgb(234,134,9)" fg:x="61887553107" fg:w="217392436"/><text x="94.6329%" y="479.50"></text></g><g><title>nalgebra::base::matrix_view::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::assert_view_index (217,392,436 samples, 0.33%)</title><rect x="94.3829%" y="453" width="0.3315%" height="15" fill="rgb(227,166,31)" fg:x="61887553107" fg:w="217392436"/><text x="94.6329%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (1,082,081,010 samples, 1.65%)</title><rect x="94.7207%" y="453" width="1.6503%" height="15" fill="rgb(245,143,41)" fg:x="62109031234" fg:w="1082081010"/><text x="94.9707%" y="463.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::calculate_force_between (25,204,366,963 samples, 38.44%)</title><rect x="58.3300%" y="533" width="38.4385%" height="15" fill="rgb(238,181,32)" fg:x="38247389556" fg:w="25204366963"/><text x="58.5800%" y="543.50">cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interacti..</text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::calculate_force_between (25,196,220,145 samples, 38.43%)</title><rect x="58.3424%" y="517" width="38.4260%" height="15" fill="rgb(224,113,18)" fg:x="38255536374" fg:w="25196220145"/><text x="58.5924%" y="527.50">&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (1,346,810,976 samples, 2.05%)</title><rect x="94.7145%" y="501" width="2.0540%" height="15" fill="rgb(240,229,28)" fg:x="62104945543" fg:w="1346810976"/><text x="94.9645%" y="511.50">n..</text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (1,346,810,976 samples, 2.05%)</title><rect x="94.7145%" y="485" width="2.0540%" height="15" fill="rgb(250,185,3)" fg:x="62104945543" fg:w="1346810976"/><text x="94.9645%" y="495.50">n..</text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (1,346,810,976 samples, 2.05%)</title><rect x="94.7145%" y="469" width="2.0540%" height="15" fill="rgb(212,59,25)" fg:x="62104945543" fg:w="1346810976"/><text x="94.9645%" y="479.50">n..</text></g><g><title>nalgebra::base::indexing::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="453" width="0.3975%" height="15" fill="rgb(221,87,20)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="463.50"></text></g><g><title>&lt;(usize,usize) as nalgebra::base::indexing::MatrixIndexMut&lt;T,R,C,S&gt;&gt;::get_unchecked_mut (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="437" width="0.3975%" height="15" fill="rgb(213,74,28)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="447.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_unchecked_mut (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="421" width="0.3975%" height="15" fill="rgb(224,132,34)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="431.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="405" width="0.3975%" height="15" fill="rgb(222,101,24)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="415.50"></text></g><g><title>nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="389" width="0.3975%" height="15" fill="rgb(254,142,4)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="373" width="0.3975%" height="15" fill="rgb(230,229,49)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (260,644,275 samples, 0.40%)</title><rect x="96.3709%" y="357" width="0.3975%" height="15" fill="rgb(238,70,47)" fg:x="63191112244" fg:w="260644275"/><text x="96.6209%" y="367.50"></text></g><g><title>nalgebra::base::norm::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;&gt;::norm (61,034,314 samples, 0.09%)</title><rect x="97.0319%" y="485" width="0.0931%" height="15" fill="rgb(231,160,17)" fg:x="63624525121" fg:w="61034314"/><text x="97.2819%" y="495.50"></text></g><g><title>&lt;T as simba::simd::simd_complex::SimdComplexField&gt;::simd_sqrt (61,034,314 samples, 0.09%)</title><rect x="97.0319%" y="469" width="0.0931%" height="15" fill="rgb(218,68,53)" fg:x="63624525121" fg:w="61034314"/><text x="97.2819%" y="479.50"></text></g><g><title>&lt;f32 as simba::scalar::complex::ComplexField&gt;::sqrt (61,034,314 samples, 0.09%)</title><rect x="97.0319%" y="453" width="0.0931%" height="15" fill="rgb(236,111,10)" fg:x="63624525121" fg:w="61034314"/><text x="97.2819%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (61,034,314 samples, 0.09%)</title><rect x="97.0319%" y="437" width="0.0931%" height="15" fill="rgb(224,34,41)" fg:x="63624525121" fg:w="61034314"/><text x="97.2819%" y="447.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned_sum (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="453" width="0.1622%" height="15" fill="rgb(241,118,19)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="463.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::into_owned (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="437" width="0.1622%" height="15" fill="rgb(238,129,25)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="447.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::into_owned (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="421" width="0.1622%" height="15" fill="rgb(238,22,31)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="431.50"></text></g><g><title>&lt;nalgebra::base::matrix_view::ViewStorage&lt;T,R,C,RStride,CStride&gt; as nalgebra::base::storage::Storage&lt;T,R,C&gt;&gt;::clone_owned (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="405" width="0.1622%" height="15" fill="rgb(222,174,48)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="415.50"></text></g><g><title>&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;::allocate_from_iterator (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="389" width="0.1622%" height="15" fill="rgb(206,152,40)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="373" width="0.1622%" height="15" fill="rgb(218,99,54)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="357" width="0.1622%" height="15" fill="rgb(220,174,26)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="341" width="0.1622%" height="15" fill="rgb(245,116,9)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="325" width="0.1622%" height="15" fill="rgb(209,72,35)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="335.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (106,380,700 samples, 0.16%)</title><rect x="97.1250%" y="309" width="0.1622%" height="15" fill="rgb(226,126,21)" fg:x="63685559435" fg:w="106380700"/><text x="97.3750%" y="319.50"></text></g><g><title>&lt;cr_mech_coli::agent::PhysicalInteraction as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::dimension::Const&lt;1_usize&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3_usize,1_usize&gt;&gt;,f32&gt;&gt;::is_neighbor (336,080,223 samples, 0.51%)</title><rect x="96.7809%" y="501" width="0.5125%" height="15" fill="rgb(227,192,1)" fg:x="63459929328" fg:w="336080223"/><text x="97.0309%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (110,450,116 samples, 0.17%)</title><rect x="97.1250%" y="485" width="0.1684%" height="15" fill="rgb(237,180,29)" fg:x="63685559435" fg:w="110450116"/><text x="97.3750%" y="495.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::Sub&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::sub (110,450,116 samples, 0.17%)</title><rect x="97.1250%" y="469" width="0.1684%" height="15" fill="rgb(230,197,35)" fg:x="63685559435" fg:w="110450116"/><text x="97.3750%" y="479.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::interaction::Interaction&lt;__cr_private_Pos,__cr_private_Vel,__cr_private_For,__cr_private_Inf&gt; for cr_mech_coli::agent::RodAgent&gt;::is_neighbor (360,545,405 samples, 0.55%)</title><rect x="96.7684%" y="533" width="0.5499%" height="15" fill="rgb(246,193,31)" fg:x="63451756519" fg:w="360545405"/><text x="97.0184%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodInteraction&lt;I&gt; as cellular_raza_concepts::interaction::Interaction&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;,Inf&gt;&gt;::is_neighbor (360,545,405 samples, 0.55%)</title><rect x="96.7684%" y="517" width="0.5499%" height="15" fill="rgb(241,36,4)" fg:x="63451756519" fg:w="360545405"/><text x="97.0184%" y="527.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::transpose (12,177,236 samples, 0.02%)</title><rect x="97.2997%" y="501" width="0.0186%" height="15" fill="rgb(241,130,17)" fg:x="63800124688" fg:w="12177236"/><text x="97.5497%" y="511.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,R,C,&lt;nalgebra::base::default_allocator::DefaultAllocator as nalgebra::base::allocator::Allocator&lt;R,C&gt;&gt;::BufferUninit&lt;T&gt;&gt;::assume_init (8,130,797 samples, 0.01%)</title><rect x="97.3059%" y="485" width="0.0124%" height="15" fill="rgb(206,137,32)" fg:x="63804171127" fg:w="8130797"/><text x="97.5559%" y="495.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data (8,130,797 samples, 0.01%)</title><rect x="97.3059%" y="469" width="0.0124%" height="15" fill="rgb(237,228,51)" fg:x="63804171127" fg:w="8130797"/><text x="97.5559%" y="479.50"></text></g><g><title>nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt;::from_data_statically_unchecked (8,130,797 samples, 0.01%)</title><rect x="97.3059%" y="453" width="0.0124%" height="15" fill="rgb(243,6,42)" fg:x="63804171127" fg:w="8130797"/><text x="97.5559%" y="463.50"></text></g><g><title>__rdl_alloc (12,250,404 samples, 0.02%)</title><rect x="97.3349%" y="293" width="0.0187%" height="15" fill="rgb(251,74,28)" fg:x="63823178268" fg:w="12250404"/><text x="97.5849%" y="303.50"></text></g><g><title>__rust_alloc (12,151,348 samples, 0.02%)</title><rect x="97.3536%" y="293" width="0.0185%" height="15" fill="rgb(218,20,49)" fg:x="63835428672" fg:w="12151348"/><text x="97.6036%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (212,790,559 samples, 0.32%)</title><rect x="97.3287%" y="341" width="0.3245%" height="15" fill="rgb(238,28,14)" fg:x="63819109917" fg:w="212790559"/><text x="97.5787%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (212,790,559 samples, 0.32%)</title><rect x="97.3287%" y="325" width="0.3245%" height="15" fill="rgb(229,40,46)" fg:x="63819109917" fg:w="212790559"/><text x="97.5787%" y="335.50"></text></g><g><title>alloc::alloc::alloc (212,790,559 samples, 0.32%)</title><rect x="97.3287%" y="309" width="0.3245%" height="15" fill="rgb(244,195,20)" fg:x="63819109917" fg:w="212790559"/><text x="97.5787%" y="319.50"></text></g><g><title>malloc (184,320,456 samples, 0.28%)</title><rect x="97.3721%" y="293" width="0.2811%" height="15" fill="rgb(253,56,35)" fg:x="63847580020" fg:w="184320456"/><text x="97.6221%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (256,597,370 samples, 0.39%)</title><rect x="97.3183%" y="405" width="0.3913%" height="15" fill="rgb(210,149,44)" fg:x="63812301924" fg:w="256597370"/><text x="97.5683%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (256,597,370 samples, 0.39%)</title><rect x="97.3183%" y="389" width="0.3913%" height="15" fill="rgb(240,135,12)" fg:x="63812301924" fg:w="256597370"/><text x="97.5683%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (256,597,370 samples, 0.39%)</title><rect x="97.3183%" y="373" width="0.3913%" height="15" fill="rgb(251,24,50)" fg:x="63812301924" fg:w="256597370"/><text x="97.5683%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (256,597,370 samples, 0.39%)</title><rect x="97.3183%" y="357" width="0.3913%" height="15" fill="rgb(243,200,47)" fg:x="63812301924" fg:w="256597370"/><text x="97.5683%" y="367.50"></text></g><g><title>alloc::raw_vec::layout_array (36,998,818 samples, 0.06%)</title><rect x="97.6532%" y="341" width="0.0564%" height="15" fill="rgb(224,166,26)" fg:x="64031900476" fg:w="36998818"/><text x="97.9032%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat (36,998,818 samples, 0.06%)</title><rect x="97.6532%" y="325" width="0.0564%" height="15" fill="rgb(233,0,47)" fg:x="64031900476" fg:w="36998818"/><text x="97.9032%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (16,386,061 samples, 0.02%)</title><rect x="97.6846%" y="309" width="0.0250%" height="15" fill="rgb(253,80,5)" fg:x="64052513233" fg:w="16386061"/><text x="97.9346%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16,386,061 samples, 0.02%)</title><rect x="97.6846%" y="293" width="0.0250%" height="15" fill="rgb(214,133,25)" fg:x="64052513233" fg:w="16386061"/><text x="97.9346%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16,386,061 samples, 0.02%)</title><rect x="97.6846%" y="277" width="0.0250%" height="15" fill="rgb(209,27,14)" fg:x="64052513233" fg:w="16386061"/><text x="97.9346%" y="287.50"></text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Position&lt;__cr_private_Pos&gt; for cr_mech_coli::agent::RodAgent&gt;::pos (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="533" width="0.8294%" height="15" fill="rgb(219,102,51)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Position&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::pos (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="517" width="0.8294%" height="15" fill="rgb(237,18,16)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="527.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="501" width="0.8294%" height="15" fill="rgb(241,85,17)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="485" width="0.8294%" height="15" fill="rgb(236,90,42)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="469" width="0.8294%" height="15" fill="rgb(249,57,21)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="453" width="0.8294%" height="15" fill="rgb(243,12,36)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="437" width="0.8294%" height="15" fill="rgb(253,128,47)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (543,812,042 samples, 0.83%)</title><rect x="97.3183%" y="421" width="0.8294%" height="15" fill="rgb(207,33,20)" fg:x="63812301924" fg:w="543812042"/><text x="97.5683%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (287,214,672 samples, 0.44%)</title><rect x="97.7096%" y="405" width="0.4380%" height="15" fill="rgb(233,215,35)" fg:x="64068899294" fg:w="287214672"/><text x="97.9596%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (287,214,672 samples, 0.44%)</title><rect x="97.7096%" y="389" width="0.4380%" height="15" fill="rgb(249,188,52)" fg:x="64068899294" fg:w="287214672"/><text x="97.9596%" y="399.50"></text></g><g><title>[libc.so.6] (287,214,672 samples, 0.44%)</title><rect x="97.7096%" y="373" width="0.4380%" height="15" fill="rgb(225,12,32)" fg:x="64068899294" fg:w="287214672"/><text x="97.9596%" y="383.50"></text></g><g><title>__rust_alloc (8,176,336 samples, 0.01%)</title><rect x="98.1668%" y="293" width="0.0125%" height="15" fill="rgb(247,98,14)" fg:x="64368647236" fg:w="8176336"/><text x="98.4168%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48,926,562 samples, 0.07%)</title><rect x="98.1605%" y="341" width="0.0746%" height="15" fill="rgb(247,219,48)" fg:x="64364561818" fg:w="48926562"/><text x="98.4105%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48,926,562 samples, 0.07%)</title><rect x="98.1605%" y="325" width="0.0746%" height="15" fill="rgb(253,60,48)" fg:x="64364561818" fg:w="48926562"/><text x="98.4105%" y="335.50"></text></g><g><title>alloc::alloc::alloc (48,926,562 samples, 0.07%)</title><rect x="98.1605%" y="309" width="0.0746%" height="15" fill="rgb(245,15,52)" fg:x="64364561818" fg:w="48926562"/><text x="98.4105%" y="319.50"></text></g><g><title>malloc (36,664,808 samples, 0.06%)</title><rect x="98.1792%" y="293" width="0.0559%" height="15" fill="rgb(220,133,28)" fg:x="64376823572" fg:w="36664808"/><text x="98.4292%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (52,296,041 samples, 0.08%)</title><rect x="98.1605%" y="405" width="0.0798%" height="15" fill="rgb(217,180,4)" fg:x="64364561818" fg:w="52296041"/><text x="98.4105%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (52,296,041 samples, 0.08%)</title><rect x="98.1605%" y="389" width="0.0798%" height="15" fill="rgb(251,24,1)" fg:x="64364561818" fg:w="52296041"/><text x="98.4105%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (52,296,041 samples, 0.08%)</title><rect x="98.1605%" y="373" width="0.0798%" height="15" fill="rgb(212,185,49)" fg:x="64364561818" fg:w="52296041"/><text x="98.4105%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (52,296,041 samples, 0.08%)</title><rect x="98.1605%" y="357" width="0.0798%" height="15" fill="rgb(215,175,22)" fg:x="64364561818" fg:w="52296041"/><text x="98.4105%" y="367.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::Voxel&lt;C,A&gt;&gt;::calculate_force_between_cells_external (27,628,842,086 samples, 42.14%)</title><rect x="56.3159%" y="549" width="42.1359%" height="15" fill="rgb(250,205,14)" fg:x="36926760044" fg:w="27628842086"/><text x="56.5659%" y="559.50">cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_..</text></g><g><title>cr_mech_coli::agent::_::&lt;impl cellular_raza_concepts::mechanics::Velocity&lt;__cr_private_Vel&gt; for cr_mech_coli::agent::RodAgent&gt;::velocity (199,488,164 samples, 0.30%)</title><rect x="98.1476%" y="533" width="0.3042%" height="15" fill="rgb(225,211,22)" fg:x="64356113966" fg:w="199488164"/><text x="98.3976%" y="543.50"></text></g><g><title>&lt;cellular_raza_building_blocks::cell_building_blocks::bacterial_rods::RodMechanics&lt;F,_&gt; as cellular_raza_concepts::mechanics::Velocity&lt;nalgebra::base::matrix::Matrix&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;,nalgebra::base::vec_storage::VecStorage&lt;F,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;_&gt;&gt;&gt;&gt;&gt;::velocity (199,488,164 samples, 0.30%)</title><rect x="98.1476%" y="517" width="0.3042%" height="15" fill="rgb(251,179,42)" fg:x="64356113966" fg:w="199488164"/><text x="98.3976%" y="527.50"></text></g><g><title>&lt;nalgebra::base::matrix::Matrix&lt;T,R,C,S&gt; as core::clone::Clone&gt;::clone (199,488,164 samples, 0.30%)</title><rect x="98.1476%" y="501" width="0.3042%" height="15" fill="rgb(208,216,51)" fg:x="64356113966" fg:w="199488164"/><text x="98.3976%" y="511.50"></text></g><g><title>&lt;nalgebra::base::vec_storage::VecStorage&lt;T,R,C&gt; as core::clone::Clone&gt;::clone (191,040,312 samples, 0.29%)</title><rect x="98.1605%" y="485" width="0.2914%" height="15" fill="rgb(235,36,11)" fg:x="64364561818" fg:w="191040312"/><text x="98.4105%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (191,040,312 samples, 0.29%)</title><rect x="98.1605%" y="469" width="0.2914%" height="15" fill="rgb(213,189,28)" fg:x="64364561818" fg:w="191040312"/><text x="98.4105%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (191,040,312 samples, 0.29%)</title><rect x="98.1605%" y="453" width="0.2914%" height="15" fill="rgb(227,203,42)" fg:x="64364561818" fg:w="191040312"/><text x="98.4105%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (191,040,312 samples, 0.29%)</title><rect x="98.1605%" y="437" width="0.2914%" height="15" fill="rgb(244,72,36)" fg:x="64364561818" fg:w="191040312"/><text x="98.4105%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (191,040,312 samples, 0.29%)</title><rect x="98.1605%" y="421" width="0.2914%" height="15" fill="rgb(213,53,17)" fg:x="64364561818" fg:w="191040312"/><text x="98.4105%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (138,744,271 samples, 0.21%)</title><rect x="98.2403%" y="405" width="0.2116%" height="15" fill="rgb(207,167,3)" fg:x="64416857859" fg:w="138744271"/><text x="98.4903%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (138,744,271 samples, 0.21%)</title><rect x="98.2403%" y="389" width="0.2116%" height="15" fill="rgb(216,98,30)" fg:x="64416857859" fg:w="138744271"/><text x="98.4903%" y="399.50"></text></g><g><title>[libc.so.6] (134,656,337 samples, 0.21%)</title><rect x="98.2465%" y="373" width="0.2054%" height="15" fill="rgb(236,123,15)" fg:x="64420945793" fg:w="134656337"/><text x="98.4965%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,f32&gt;&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="549" width="0.1009%" height="15" fill="rgb(248,81,50)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="533" width="0.1009%" height="15" fill="rgb(214,120,4)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,f32&gt;]&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="517" width="0.1009%" height="15" fill="rgb(208,179,34)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,f32&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="501" width="0.1009%" height="15" fill="rgb(227,140,7)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="485" width="0.1009%" height="15" fill="rgb(214,22,6)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="469" width="0.1009%" height="15" fill="rgb(207,137,27)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="453" width="0.1009%" height="15" fill="rgb(210,8,46)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="437" width="0.1009%" height="15" fill="rgb(240,16,54)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="421" width="0.1009%" height="15" fill="rgb(211,209,29)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="405" width="0.1009%" height="15" fill="rgb(226,228,24)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="389" width="0.1009%" height="15" fill="rgb(222,84,9)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (66,131,296 samples, 0.10%)</title><rect x="98.4581%" y="373" width="0.1009%" height="15" fill="rgb(234,203,30)" fg:x="64559687539" fg:w="66131296"/><text x="98.7081%" y="383.50"></text></g><g><title>cfree (62,228,278 samples, 0.09%)</title><rect x="98.4641%" y="357" width="0.0949%" height="15" fill="rgb(238,109,14)" fg:x="64563590557" fg:w="62228278"/><text x="98.7141%" y="367.50"></text></g><g><title>[libc.so.6] (50,026,205 samples, 0.08%)</title><rect x="98.4827%" y="341" width="0.0763%" height="15" fill="rgb(233,206,34)" fg:x="64575792630" fg:w="50026205"/><text x="98.7327%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (20,898,403 samples, 0.03%)</title><rect x="98.5590%" y="517" width="0.0319%" height="15" fill="rgb(220,167,47)" fg:x="64625818835" fg:w="20898403"/><text x="98.8090%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20,898,403 samples, 0.03%)</title><rect x="98.5590%" y="501" width="0.0319%" height="15" fill="rgb(238,105,10)" fg:x="64625818835" fg:w="20898403"/><text x="98.8090%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20,898,403 samples, 0.03%)</title><rect x="98.5590%" y="485" width="0.0319%" height="15" fill="rgb(213,227,17)" fg:x="64625818835" fg:w="20898403"/><text x="98.8090%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20,898,403 samples, 0.03%)</title><rect x="98.5590%" y="469" width="0.0319%" height="15" fill="rgb(217,132,38)" fg:x="64625818835" fg:w="20898403"/><text x="98.8090%" y="479.50"></text></g><g><title>alloc::fmt::format (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="517" width="0.0310%" height="15" fill="rgb(242,146,4)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="501" width="0.0310%" height="15" fill="rgb(212,61,9)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="485" width="0.0310%" height="15" fill="rgb(247,126,22)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="469" width="0.0310%" height="15" fill="rgb(220,196,2)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="453" width="0.0310%" height="15" fill="rgb(208,46,4)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="437" width="0.0310%" height="15" fill="rgb(252,104,46)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="421" width="0.0310%" height="15" fill="rgb(237,152,48)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="405" width="0.0310%" height="15" fill="rgb(221,59,37)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="389" width="0.0310%" height="15" fill="rgb(209,202,51)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="373" width="0.0310%" height="15" fill="rgb(228,81,30)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="357" width="0.0310%" height="15" fill="rgb(227,42,39)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="341" width="0.0310%" height="15" fill="rgb(221,26,2)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,334,236 samples, 0.03%)</title><rect x="98.5908%" y="325" width="0.0310%" height="15" fill="rgb(254,61,31)" fg:x="64646717238" fg:w="20334236"/><text x="98.8408%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,264,599 samples, 0.02%)</title><rect x="98.5970%" y="309" width="0.0248%" height="15" fill="rgb(222,173,38)" fg:x="64650786875" fg:w="16264599"/><text x="98.8470%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,264,599 samples, 0.02%)</title><rect x="98.5970%" y="293" width="0.0248%" height="15" fill="rgb(218,50,12)" fg:x="64650786875" fg:w="16264599"/><text x="98.8470%" y="303.50"></text></g><g><title>alloc::alloc::alloc (16,264,599 samples, 0.02%)</title><rect x="98.5970%" y="277" width="0.0248%" height="15" fill="rgb(223,88,40)" fg:x="64650786875" fg:w="16264599"/><text x="98.8470%" y="287.50"></text></g><g><title>malloc (12,200,332 samples, 0.02%)</title><rect x="98.6032%" y="261" width="0.0186%" height="15" fill="rgb(237,54,19)" fg:x="64654851142" fg:w="12200332"/><text x="98.8532%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="517" width="0.0125%" height="15" fill="rgb(251,129,25)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;cellular_raza_concepts::errors::IndexError&gt; (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="501" width="0.0125%" height="15" fill="rgb(238,97,19)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="485" width="0.0125%" height="15" fill="rgb(240,169,18)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="469" width="0.0125%" height="15" fill="rgb(230,187,49)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="453" width="0.0125%" height="15" fill="rgb(209,44,26)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="437" width="0.0125%" height="15" fill="rgb(244,0,6)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="421" width="0.0125%" height="15" fill="rgb(248,18,21)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="405" width="0.0125%" height="15" fill="rgb(245,180,19)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="389" width="0.0125%" height="15" fill="rgb(252,118,36)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="399.50"></text></g><g><title>cfree (8,171,634 samples, 0.01%)</title><rect x="98.6218%" y="373" width="0.0125%" height="15" fill="rgb(210,224,19)" fg:x="64667051474" fg:w="8171634"/><text x="98.8718%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15,023,715 samples, 0.02%)</title><rect x="98.6592%" y="469" width="0.0229%" height="15" fill="rgb(218,30,24)" fg:x="64691514486" fg:w="15023715"/><text x="98.9092%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (15,023,715 samples, 0.02%)</title><rect x="98.6592%" y="453" width="0.0229%" height="15" fill="rgb(219,75,50)" fg:x="64691514486" fg:w="15023715"/><text x="98.9092%" y="463.50"></text></g><g><title>[libc.so.6] (6,798,422 samples, 0.01%)</title><rect x="98.6843%" y="437" width="0.0104%" height="15" fill="rgb(234,72,50)" fg:x="64707980077" fg:w="6798422"/><text x="98.9343%" y="447.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (60,224,347 samples, 0.09%)</title><rect x="98.6530%" y="485" width="0.0918%" height="15" fill="rgb(219,100,48)" fg:x="64687453490" fg:w="60224347"/><text x="98.9030%" y="495.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::new (39,697,760 samples, 0.06%)</title><rect x="98.6843%" y="469" width="0.0605%" height="15" fill="rgb(253,5,41)" fg:x="64707980077" fg:w="39697760"/><text x="98.9343%" y="479.50"></text></g><g><title>alloc::alloc::alloc_zeroed (39,697,760 samples, 0.06%)</title><rect x="98.6843%" y="453" width="0.0605%" height="15" fill="rgb(247,181,11)" fg:x="64707980077" fg:w="39697760"/><text x="98.9343%" y="463.50"></text></g><g><title>__libc_calloc (32,899,338 samples, 0.05%)</title><rect x="98.6946%" y="437" width="0.0502%" height="15" fill="rgb(222,223,25)" fg:x="64714778499" fg:w="32899338"/><text x="98.9446%" y="447.50"></text></g><g><title>[libc.so.6] (32,899,338 samples, 0.05%)</title><rect x="98.6946%" y="421" width="0.0502%" height="15" fill="rgb(214,198,28)" fg:x="64714778499" fg:w="32899338"/><text x="98.9446%" y="431.50"></text></g><g><title>[libc.so.6] (20,669,053 samples, 0.03%)</title><rect x="98.7133%" y="405" width="0.0315%" height="15" fill="rgb(230,46,43)" fg:x="64727008784" fg:w="20669053"/><text x="98.9633%" y="415.50"></text></g><g><title>[libc.so.6] (8,087,365 samples, 0.01%)</title><rect x="98.7325%" y="389" width="0.0123%" height="15" fill="rgb(233,65,53)" fg:x="64739590472" fg:w="8087365"/><text x="98.9825%" y="399.50"></text></g><g><title>cr_mech_coli::simulation::_::&lt;impl cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,cellular_raza_core::backend::chili::update_mechanics::ForceInformation&lt;For&gt;&gt; for cr_mech_coli::simulation::_CrCommunicator&lt;I,Cel,Aux,Pos,Vel,For,Inf&gt;&gt;::send (167,411,960 samples, 0.26%)</title><rect x="98.5590%" y="549" width="0.2553%" height="15" fill="rgb(221,121,27)" fg:x="64625818835" fg:w="167411960"/><text x="98.8090%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::simulation_flow::ChannelComm&lt;I,T&gt; as cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,T&gt;&gt;::send (167,411,960 samples, 0.26%)</title><rect x="98.5590%" y="533" width="0.2553%" height="15" fill="rgb(247,70,47)" fg:x="64625818835" fg:w="167411960"/><text x="98.8090%" y="543.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (118,007,687 samples, 0.18%)</title><rect x="98.6343%" y="517" width="0.1800%" height="15" fill="rgb(228,85,35)" fg:x="64675223108" fg:w="118007687"/><text x="98.8843%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (113,938,511 samples, 0.17%)</title><rect x="98.6405%" y="501" width="0.1738%" height="15" fill="rgb(209,50,18)" fg:x="64679292284" fg:w="113938511"/><text x="98.8905%" y="511.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (45,552,958 samples, 0.07%)</title><rect x="98.7448%" y="485" width="0.0695%" height="15" fill="rgb(250,19,35)" fg:x="64747677837" fg:w="45552958"/><text x="98.9948%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (8,142,728 samples, 0.01%)</title><rect x="98.8205%" y="405" width="0.0124%" height="15" fill="rgb(253,107,29)" fg:x="64797304218" fg:w="8142728"/><text x="99.0705%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (12,637,299 samples, 0.02%)</title><rect x="98.8329%" y="357" width="0.0193%" height="15" fill="rgb(252,179,29)" fg:x="64805446946" fg:w="12637299"/><text x="99.0829%" y="367.50"></text></g><g><title>core::ptr::read (12,637,299 samples, 0.02%)</title><rect x="98.8329%" y="341" width="0.0193%" height="15" fill="rgb(238,194,6)" fg:x="64805446946" fg:w="12637299"/><text x="99.0829%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8,157,133 samples, 0.01%)</title><rect x="98.8522%" y="357" width="0.0124%" height="15" fill="rgb(238,164,29)" fg:x="64818084245" fg:w="8157133"/><text x="99.1022%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_or (8,157,133 samples, 0.01%)</title><rect x="98.8522%" y="341" width="0.0124%" height="15" fill="rgb(224,25,9)" fg:x="64818084245" fg:w="8157133"/><text x="99.1022%" y="351.50"></text></g><g><title>[libc.so.6] (16,357,178 samples, 0.02%)</title><rect x="98.8646%" y="245" width="0.0249%" height="15" fill="rgb(244,153,23)" fg:x="64826241396" fg:w="16357178"/><text x="99.1146%" y="255.50"></text></g><g><title>__lll_lock_wait_private (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="229" width="0.0125%" height="15" fill="rgb(212,203,14)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="239.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="213" width="0.0125%" height="15" fill="rgb(220,164,20)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="223.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="197" width="0.0125%" height="15" fill="rgb(222,203,48)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="207.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="181" width="0.0125%" height="15" fill="rgb(215,159,22)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="191.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="165" width="0.0125%" height="15" fill="rgb(216,183,47)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="175.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="149" width="0.0125%" height="15" fill="rgb(229,195,25)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="159.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="133" width="0.0125%" height="15" fill="rgb(224,132,51)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="143.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="117" width="0.0125%" height="15" fill="rgb(240,63,7)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="127.50"></text></g><g><title>[unknown] (8,210,723 samples, 0.01%)</title><rect x="98.8770%" y="101" width="0.0125%" height="15" fill="rgb(249,182,41)" fg:x="64834387851" fg:w="8210723"/><text x="99.1270%" y="111.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (16,477,106 samples, 0.03%)</title><rect x="98.8646%" y="357" width="0.0251%" height="15" fill="rgb(243,47,26)" fg:x="64826241378" fg:w="16477106"/><text x="99.1146%" y="367.50"></text></g><g><title>core::mem::drop (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="341" width="0.0251%" height="15" fill="rgb(233,48,2)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;,f32&gt;&gt;&gt;&gt; (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="325" width="0.0251%" height="15" fill="rgb(244,165,34)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="309" width="0.0251%" height="15" fill="rgb(207,89,7)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="293" width="0.0251%" height="15" fill="rgb(244,117,36)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="277" width="0.0251%" height="15" fill="rgb(226,144,34)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="287.50"></text></g><g><title>cfree (16,477,088 samples, 0.03%)</title><rect x="98.8646%" y="261" width="0.0251%" height="15" fill="rgb(213,23,19)" fg:x="64826241396" fg:w="16477088"/><text x="99.1146%" y="271.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (37,271,556 samples, 0.06%)</title><rect x="98.8329%" y="373" width="0.0568%" height="15" fill="rgb(217,75,12)" fg:x="64805446946" fg:w="37271556"/><text x="99.0829%" y="383.50"></text></g><g><title>&lt;crossbeam_channel::channel::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (72,951,275 samples, 0.11%)</title><rect x="98.8205%" y="421" width="0.1113%" height="15" fill="rgb(224,159,17)" fg:x="64797304218" fg:w="72951275"/><text x="99.0705%" y="431.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (64,808,547 samples, 0.10%)</title><rect x="98.8329%" y="405" width="0.0988%" height="15" fill="rgb(217,118,1)" fg:x="64805446946" fg:w="64808547"/><text x="99.0829%" y="415.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (64,808,547 samples, 0.10%)</title><rect x="98.8329%" y="389" width="0.0988%" height="15" fill="rgb(232,180,48)" fg:x="64805446946" fg:w="64808547"/><text x="99.0829%" y="399.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (27,536,991 samples, 0.04%)</title><rect x="98.8898%" y="373" width="0.0420%" height="15" fill="rgb(230,27,33)" fg:x="64842718502" fg:w="27536991"/><text x="99.1398%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16,182,457 samples, 0.02%)</title><rect x="98.9071%" y="357" width="0.0247%" height="15" fill="rgb(205,31,21)" fg:x="64854073036" fg:w="16182457"/><text x="99.1571%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (16,182,457 samples, 0.02%)</title><rect x="98.9071%" y="341" width="0.0247%" height="15" fill="rgb(253,59,4)" fg:x="64854073036" fg:w="16182457"/><text x="99.1571%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="421" width="0.0246%" height="15" fill="rgb(224,201,9)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="405" width="0.0246%" height="15" fill="rgb(229,206,30)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="389" width="0.0246%" height="15" fill="rgb(212,67,47)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="373" width="0.0246%" height="15" fill="rgb(211,96,50)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="357" width="0.0246%" height="15" fill="rgb(252,114,18)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="341" width="0.0246%" height="15" fill="rgb(223,58,37)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="325" width="0.0246%" height="15" fill="rgb(237,70,4)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="309" width="0.0246%" height="15" fill="rgb(244,85,46)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="319.50"></text></g><g><title>alloc::alloc::realloc (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="293" width="0.0246%" height="15" fill="rgb(223,39,52)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="303.50"></text></g><g><title>realloc (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="277" width="0.0246%" height="15" fill="rgb(218,200,14)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="287.50"></text></g><g><title>[libc.so.6] (16,136,739 samples, 0.02%)</title><rect x="98.9317%" y="261" width="0.0246%" height="15" fill="rgb(208,171,16)" fg:x="64870255493" fg:w="16136739"/><text x="99.1817%" y="271.50"></text></g><g><title>[libc.so.6] (12,162,598 samples, 0.02%)</title><rect x="98.9378%" y="245" width="0.0185%" height="15" fill="rgb(234,200,18)" fg:x="64874229634" fg:w="12162598"/><text x="99.1878%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (101,294,168 samples, 0.15%)</title><rect x="98.8143%" y="453" width="0.1545%" height="15" fill="rgb(228,45,11)" fg:x="64793230795" fg:w="101294168"/><text x="99.0643%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (101,294,168 samples, 0.15%)</title><rect x="98.8143%" y="437" width="0.1545%" height="15" fill="rgb(237,182,11)" fg:x="64793230795" fg:w="101294168"/><text x="99.0643%" y="447.50"></text></g><g><title>core::ptr::write (8,132,731 samples, 0.01%)</title><rect x="98.9564%" y="421" width="0.0124%" height="15" fill="rgb(241,175,49)" fg:x="64886392232" fg:w="8132731"/><text x="99.2064%" y="431.50"></text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::update_mechanics_interaction_step_2 (28,209,413,302 samples, 43.02%)</title><rect x="55.9474%" y="565" width="43.0214%" height="15" fill="rgb(247,38,35)" fg:x="36685111664" fg:w="28209413302"/><text x="56.1974%" y="575.50">cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_r..</text></g><g><title>cr_mech_coli::simulation::_::&lt;impl cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,cellular_raza_core::backend::chili::update_mechanics::PosInformation&lt;Pos,Vel,Inf&gt;&gt; for cr_mech_coli::simulation::_CrCommunicator&lt;I,Cel,Aux,Pos,Vel,For,Inf&gt;&gt;::receive (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="549" width="0.1545%" height="15" fill="rgb(228,39,49)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::simulation_flow::ChannelComm&lt;I,T&gt; as cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,T&gt;&gt;::receive (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="533" width="0.1545%" height="15" fill="rgb(226,101,26)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="517" width="0.1545%" height="15" fill="rgb(206,141,19)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="501" width="0.1545%" height="15" fill="rgb(211,200,13)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="485" width="0.1545%" height="15" fill="rgb(241,121,6)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (101,294,171 samples, 0.15%)</title><rect x="98.8143%" y="469" width="0.1545%" height="15" fill="rgb(234,221,29)" fg:x="64793230795" fg:w="101294171"/><text x="99.0643%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,809,370 samples, 0.02%)</title><rect x="98.9881%" y="549" width="0.0165%" height="15" fill="rgb(229,136,5)" fg:x="64907217571" fg:w="10809370"/><text x="99.2381%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (10,809,370 samples, 0.02%)</title><rect x="98.9881%" y="533" width="0.0165%" height="15" fill="rgb(238,36,11)" fg:x="64907217571" fg:w="10809370"/><text x="99.2381%" y="543.50"></text></g><g><title>core::ptr::read (10,809,370 samples, 0.02%)</title><rect x="98.9881%" y="517" width="0.0165%" height="15" fill="rgb(251,55,41)" fg:x="64907217571" fg:w="10809370"/><text x="99.2381%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt; (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="501" width="0.1430%" height="15" fill="rgb(242,34,40)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt; (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="485" width="0.1430%" height="15" fill="rgb(215,42,17)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="469" width="0.1430%" height="15" fill="rgb(207,44,46)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="453" width="0.1430%" height="15" fill="rgb(211,206,28)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="437" width="0.1430%" height="15" fill="rgb(237,167,16)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="421" width="0.1430%" height="15" fill="rgb(233,66,6)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="405" width="0.1430%" height="15" fill="rgb(246,123,29)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="389" width="0.1430%" height="15" fill="rgb(209,62,40)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="399.50"></text></g><g><title>cfree (93,783,633 samples, 0.14%)</title><rect x="99.0046%" y="373" width="0.1430%" height="15" fill="rgb(218,4,25)" fg:x="64918026941" fg:w="93783633"/><text x="99.2546%" y="383.50"></text></g><g><title>[libc.so.6] (65,492,903 samples, 0.10%)</title><rect x="99.0477%" y="357" width="0.0999%" height="15" fill="rgb(253,91,49)" fg:x="64946317671" fg:w="65492903"/><text x="99.2977%" y="367.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f32&gt;::clone (15,334,310 samples, 0.02%)</title><rect x="99.1548%" y="469" width="0.0234%" height="15" fill="rgb(228,155,29)" fg:x="65016519758" fg:w="15334310"/><text x="99.4048%" y="479.50"></text></g><g><title>&lt;cr_mech_coli::simulation::_CrAuxStorage&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (126,461,817 samples, 0.19%)</title><rect x="99.0046%" y="549" width="0.1929%" height="15" fill="rgb(243,57,37)" fg:x="64918026941" fg:w="126461817"/><text x="99.2546%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::aux_storage::AuxStorageMechanics&lt;Pos,Vel,For,_&gt; as cellular_raza_core::backend::chili::aux_storage::UpdateMechanics&lt;Pos,Vel,For,_&gt;&gt;::add_force (126,461,817 samples, 0.19%)</title><rect x="99.0046%" y="533" width="0.1929%" height="15" fill="rgb(244,167,17)" fg:x="64918026941" fg:w="126461817"/><text x="99.2546%" y="543.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (126,461,817 samples, 0.19%)</title><rect x="99.0046%" y="517" width="0.1929%" height="15" fill="rgb(207,181,38)" fg:x="64918026941" fg:w="126461817"/><text x="99.2546%" y="527.50"></text></g><g><title>nalgebra::base::ops::&lt;impl core::ops::arith::AddAssign&lt;&amp;nalgebra::base::matrix::Matrix&lt;T,R2,C2,SB&gt;&gt; for nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign (32,678,184 samples, 0.05%)</title><rect x="99.1476%" y="501" width="0.0498%" height="15" fill="rgb(211,8,23)" fg:x="65011810574" fg:w="32678184"/><text x="99.3976%" y="511.50"></text></g><g><title>nalgebra::base::ops::&lt;impl nalgebra::base::matrix::Matrix&lt;T,R1,C1,SA&gt;&gt;::add_assign_statically_unchecked (32,678,184 samples, 0.05%)</title><rect x="99.1476%" y="485" width="0.0498%" height="15" fill="rgb(235,11,44)" fg:x="65011810574" fg:w="32678184"/><text x="99.3976%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,634,690 samples, 0.02%)</title><rect x="99.1782%" y="469" width="0.0193%" height="15" fill="rgb(248,18,52)" fg:x="65031854068" fg:w="12634690"/><text x="99.4282%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,634,690 samples, 0.02%)</title><rect x="99.1782%" y="453" width="0.0193%" height="15" fill="rgb(208,4,7)" fg:x="65031854068" fg:w="12634690"/><text x="99.4282%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8,561,106 samples, 0.01%)</title><rect x="99.1844%" y="437" width="0.0131%" height="15" fill="rgb(240,17,39)" fg:x="65035927652" fg:w="8561106"/><text x="99.4344%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,561,106 samples, 0.01%)</title><rect x="99.1844%" y="421" width="0.0131%" height="15" fill="rgb(207,170,3)" fg:x="65035927652" fg:w="8561106"/><text x="99.4344%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (8,203,582 samples, 0.01%)</title><rect x="99.1975%" y="549" width="0.0125%" height="15" fill="rgb(236,100,52)" fg:x="65044488758" fg:w="8203582"/><text x="99.4475%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8,203,582 samples, 0.01%)</title><rect x="99.1975%" y="533" width="0.0125%" height="15" fill="rgb(246,78,51)" fg:x="65044488758" fg:w="8203582"/><text x="99.4475%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8,203,582 samples, 0.01%)</title><rect x="99.1975%" y="517" width="0.0125%" height="15" fill="rgb(211,17,15)" fg:x="65044488758" fg:w="8203582"/><text x="99.4475%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8,203,582 samples, 0.01%)</title><rect x="99.1975%" y="501" width="0.0125%" height="15" fill="rgb(209,59,46)" fg:x="65044488758" fg:w="8203582"/><text x="99.4475%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="485" width="0.0147%" height="15" fill="rgb(210,92,25)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="469" width="0.0147%" height="15" fill="rgb(238,174,52)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="453" width="0.0147%" height="15" fill="rgb(230,73,7)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="437" width="0.0147%" height="15" fill="rgb(243,124,40)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="421" width="0.0147%" height="15" fill="rgb(244,170,11)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="405" width="0.0147%" height="15" fill="rgb(207,114,54)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="389" width="0.0147%" height="15" fill="rgb(205,42,20)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="373" width="0.0147%" height="15" fill="rgb(230,30,28)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="383.50"></text></g><g><title>alloc::alloc::alloc (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="357" width="0.0147%" height="15" fill="rgb(205,73,54)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="367.50"></text></g><g><title>malloc (9,608,932 samples, 0.01%)</title><rect x="99.2163%" y="341" width="0.0147%" height="15" fill="rgb(254,227,23)" fg:x="65056804623" fg:w="9608932"/><text x="99.4663%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (43,696,182 samples, 0.07%)</title><rect x="99.2752%" y="437" width="0.0666%" height="15" fill="rgb(228,202,34)" fg:x="65095464353" fg:w="43696182"/><text x="99.5252%" y="447.50"></text></g><g><title>alloc::string::String::push_str (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="421" width="0.0595%" height="15" fill="rgb(222,225,37)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="405" width="0.0595%" height="15" fill="rgb(221,14,54)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="389" width="0.0595%" height="15" fill="rgb(254,102,2)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="373" width="0.0595%" height="15" fill="rgb(232,104,17)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="357" width="0.0595%" height="15" fill="rgb(250,220,14)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="367.50"></text></g><g><title>[libc.so.6] (38,988,302 samples, 0.06%)</title><rect x="99.2824%" y="341" width="0.0595%" height="15" fill="rgb(241,158,9)" fg:x="65100172233" fg:w="38988302"/><text x="99.5324%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (8,080,947 samples, 0.01%)</title><rect x="99.3852%" y="325" width="0.0123%" height="15" fill="rgb(246,9,43)" fg:x="65167575028" fg:w="8080947"/><text x="99.6352%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (8,048,342 samples, 0.01%)</title><rect x="99.3975%" y="309" width="0.0123%" height="15" fill="rgb(206,73,33)" fg:x="65175655975" fg:w="8048342"/><text x="99.6475%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24,462,048 samples, 0.04%)</title><rect x="99.4160%" y="293" width="0.0373%" height="15" fill="rgb(222,79,8)" fg:x="65187784622" fg:w="24462048"/><text x="99.6660%" y="303.50"></text></g><g><title>alloc::string::String::push_str (20,374,167 samples, 0.03%)</title><rect x="99.4222%" y="277" width="0.0311%" height="15" fill="rgb(234,8,54)" fg:x="65191872503" fg:w="20374167"/><text x="99.6722%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20,374,167 samples, 0.03%)</title><rect x="99.4222%" y="261" width="0.0311%" height="15" fill="rgb(209,134,38)" fg:x="65191872503" fg:w="20374167"/><text x="99.6722%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20,374,167 samples, 0.03%)</title><rect x="99.4222%" y="245" width="0.0311%" height="15" fill="rgb(230,127,29)" fg:x="65191872503" fg:w="20374167"/><text x="99.6722%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20,374,167 samples, 0.03%)</title><rect x="99.4222%" y="229" width="0.0311%" height="15" fill="rgb(242,44,41)" fg:x="65191872503" fg:w="20374167"/><text x="99.6722%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12,189,330 samples, 0.02%)</title><rect x="99.4347%" y="213" width="0.0186%" height="15" fill="rgb(222,56,43)" fg:x="65200057340" fg:w="12189330"/><text x="99.6847%" y="223.50"></text></g><g><title>[libc.so.6] (12,189,330 samples, 0.02%)</title><rect x="99.4347%" y="197" width="0.0186%" height="15" fill="rgb(238,39,47)" fg:x="65200057340" fg:w="12189330"/><text x="99.6847%" y="207.50"></text></g><g><title>core::fmt::Formatter::pad_integral (24,460,739 samples, 0.04%)</title><rect x="99.4533%" y="293" width="0.0373%" height="15" fill="rgb(226,79,43)" fg:x="65212246670" fg:w="24460739"/><text x="99.7033%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (12,182,522 samples, 0.02%)</title><rect x="99.4720%" y="277" width="0.0186%" height="15" fill="rgb(242,105,53)" fg:x="65224524887" fg:w="12182522"/><text x="99.7220%" y="287.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (77,286,795 samples, 0.12%)</title><rect x="99.3852%" y="389" width="0.1179%" height="15" fill="rgb(251,132,46)" fg:x="65167575028" fg:w="77286795"/><text x="99.6352%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with (77,286,795 samples, 0.12%)</title><rect x="99.3852%" y="373" width="0.1179%" height="15" fill="rgb(231,77,14)" fg:x="65167575028" fg:w="77286795"/><text x="99.6352%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (77,286,795 samples, 0.12%)</title><rect x="99.3852%" y="357" width="0.1179%" height="15" fill="rgb(240,135,9)" fg:x="65167575028" fg:w="77286795"/><text x="99.6352%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with::_{{closure}} (77,286,795 samples, 0.12%)</title><rect x="99.3852%" y="341" width="0.1179%" height="15" fill="rgb(248,109,14)" fg:x="65167575028" fg:w="77286795"/><text x="99.6352%" y="351.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (69,205,848 samples, 0.11%)</title><rect x="99.3975%" y="325" width="0.1055%" height="15" fill="rgb(227,146,52)" fg:x="65175655975" fg:w="69205848"/><text x="99.6475%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (61,157,506 samples, 0.09%)</title><rect x="99.4098%" y="309" width="0.0933%" height="15" fill="rgb(232,54,3)" fg:x="65183704317" fg:w="61157506"/><text x="99.6598%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8,154,414 samples, 0.01%)</title><rect x="99.4906%" y="293" width="0.0124%" height="15" fill="rgb(229,201,43)" fg:x="65236707409" fg:w="8154414"/><text x="99.7406%" y="303.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (24,211,073 samples, 0.04%)</title><rect x="99.5031%" y="389" width="0.0369%" height="15" fill="rgb(252,161,33)" fg:x="65244861823" fg:w="24211073"/><text x="99.7531%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (24,211,073 samples, 0.04%)</title><rect x="99.5031%" y="373" width="0.0369%" height="15" fill="rgb(226,146,40)" fg:x="65244861823" fg:w="24211073"/><text x="99.7531%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::_{{closure}} (24,211,073 samples, 0.04%)</title><rect x="99.5031%" y="357" width="0.0369%" height="15" fill="rgb(219,47,25)" fg:x="65244861823" fg:w="24211073"/><text x="99.7531%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (24,211,073 samples, 0.04%)</title><rect x="99.5031%" y="341" width="0.0369%" height="15" fill="rgb(250,135,13)" fg:x="65244861823" fg:w="24211073"/><text x="99.7531%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24,211,073 samples, 0.04%)</title><rect x="99.5031%" y="325" width="0.0369%" height="15" fill="rgb(219,229,18)" fg:x="65244861823" fg:w="24211073"/><text x="99.7531%" y="335.50"></text></g><g><title>alloc::string::String::push_str (20,110,842 samples, 0.03%)</title><rect x="99.5093%" y="309" width="0.0307%" height="15" fill="rgb(217,152,27)" fg:x="65248962054" fg:w="20110842"/><text x="99.7593%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20,110,842 samples, 0.03%)</title><rect x="99.5093%" y="293" width="0.0307%" height="15" fill="rgb(225,71,47)" fg:x="65248962054" fg:w="20110842"/><text x="99.7593%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20,110,842 samples, 0.03%)</title><rect x="99.5093%" y="277" width="0.0307%" height="15" fill="rgb(220,139,14)" fg:x="65248962054" fg:w="20110842"/><text x="99.7593%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20,110,842 samples, 0.03%)</title><rect x="99.5093%" y="261" width="0.0307%" height="15" fill="rgb(247,54,32)" fg:x="65248962054" fg:w="20110842"/><text x="99.7593%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,959,137 samples, 0.02%)</title><rect x="99.5217%" y="245" width="0.0182%" height="15" fill="rgb(252,131,39)" fg:x="65257113759" fg:w="11959137"/><text x="99.7717%" y="255.50"></text></g><g><title>[libc.so.6] (11,959,137 samples, 0.02%)</title><rect x="99.5217%" y="229" width="0.0182%" height="15" fill="rgb(210,108,39)" fg:x="65257113759" fg:w="11959137"/><text x="99.7717%" y="239.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::VoxelPlainIndex as core::fmt::Debug&gt;::fmt (137,799,311 samples, 0.21%)</title><rect x="99.3418%" y="421" width="0.2102%" height="15" fill="rgb(205,23,29)" fg:x="65139160535" fg:w="137799311"/><text x="99.5918%" y="431.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (129,637,406 samples, 0.20%)</title><rect x="99.3543%" y="405" width="0.1977%" height="15" fill="rgb(246,139,46)" fg:x="65147322440" fg:w="129637406"/><text x="99.6043%" y="415.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (7,886,950 samples, 0.01%)</title><rect x="99.5400%" y="389" width="0.0120%" height="15" fill="rgb(250,81,26)" fg:x="65269072896" fg:w="7886950"/><text x="99.7900%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (7,886,950 samples, 0.01%)</title><rect x="99.5400%" y="373" width="0.0120%" height="15" fill="rgb(214,104,7)" fg:x="65269072896" fg:w="7886950"/><text x="99.7900%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7,886,950 samples, 0.01%)</title><rect x="99.5400%" y="357" width="0.0120%" height="15" fill="rgb(233,189,8)" fg:x="65269072896" fg:w="7886950"/><text x="99.7900%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8,071,469 samples, 0.01%)</title><rect x="99.5891%" y="389" width="0.0123%" height="15" fill="rgb(228,141,17)" fg:x="65301272240" fg:w="8071469"/><text x="99.8391%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (20,168,060 samples, 0.03%)</title><rect x="99.5829%" y="405" width="0.0308%" height="15" fill="rgb(247,157,1)" fg:x="65297229214" fg:w="20168060"/><text x="99.8329%" y="415.50"></text></g><g><title>core::fmt::Formatter::sign_plus (8,053,565 samples, 0.01%)</title><rect x="99.6014%" y="389" width="0.0123%" height="15" fill="rgb(249,225,5)" fg:x="65309343709" fg:w="8053565"/><text x="99.8514%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (182,331,897 samples, 0.28%)</title><rect x="99.3418%" y="437" width="0.2781%" height="15" fill="rgb(242,55,13)" fg:x="65139160535" fg:w="182331897"/><text x="99.5918%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (40,598,908 samples, 0.06%)</title><rect x="99.5580%" y="421" width="0.0619%" height="15" fill="rgb(230,49,50)" fg:x="65280893524" fg:w="40598908"/><text x="99.8080%" y="431.50"></text></g><g><title>alloc::fmt::format (272,889,053 samples, 0.42%)</title><rect x="99.2100%" y="549" width="0.4162%" height="15" fill="rgb(241,111,38)" fg:x="65052692340" fg:w="272889053"/><text x="99.4600%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (272,889,053 samples, 0.42%)</title><rect x="99.2100%" y="533" width="0.4162%" height="15" fill="rgb(252,155,4)" fg:x="65052692340" fg:w="272889053"/><text x="99.4600%" y="543.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (272,889,053 samples, 0.42%)</title><rect x="99.2100%" y="517" width="0.4162%" height="15" fill="rgb(212,69,32)" fg:x="65052692340" fg:w="272889053"/><text x="99.4600%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (272,889,053 samples, 0.42%)</title><rect x="99.2100%" y="501" width="0.4162%" height="15" fill="rgb(243,107,47)" fg:x="65052692340" fg:w="272889053"/><text x="99.4600%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (259,167,838 samples, 0.40%)</title><rect x="99.2309%" y="485" width="0.3952%" height="15" fill="rgb(247,130,12)" fg:x="65066413555" fg:w="259167838"/><text x="99.4809%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (259,167,838 samples, 0.40%)</title><rect x="99.2309%" y="469" width="0.3952%" height="15" fill="rgb(233,74,16)" fg:x="65066413555" fg:w="259167838"/><text x="99.4809%" y="479.50"></text></g><g><title>core::fmt::write (259,167,838 samples, 0.40%)</title><rect x="99.2309%" y="453" width="0.3952%" height="15" fill="rgb(208,58,18)" fg:x="65066413555" fg:w="259167838"/><text x="99.4809%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl core::slice::sort::stable::BufGuard&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::with_capacity (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="485" width="0.0125%" height="15" fill="rgb(242,225,1)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="469" width="0.0125%" height="15" fill="rgb(249,39,40)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="453" width="0.0125%" height="15" fill="rgb(207,72,44)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="437" width="0.0125%" height="15" fill="rgb(215,193,12)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="421" width="0.0125%" height="15" fill="rgb(248,41,39)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="405" width="0.0125%" height="15" fill="rgb(253,85,4)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="389" width="0.0125%" height="15" fill="rgb(243,70,31)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="373" width="0.0125%" height="15" fill="rgb(253,195,26)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="383.50"></text></g><g><title>alloc::alloc::alloc (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="357" width="0.0125%" height="15" fill="rgb(243,42,11)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="367.50"></text></g><g><title>malloc (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="341" width="0.0125%" height="15" fill="rgb(239,66,17)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="351.50"></text></g><g><title>[libc.so.6] (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="325" width="0.0125%" height="15" fill="rgb(217,132,21)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="335.50"></text></g><g><title>[libc.so.6] (8,169,355 samples, 0.01%)</title><rect x="99.6262%" y="309" width="0.0125%" height="15" fill="rgb(252,202,21)" fg:x="65325581393" fg:w="8169355"/><text x="99.8762%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (16,449,090 samples, 0.03%)</title><rect x="99.6262%" y="549" width="0.0251%" height="15" fill="rgb(233,98,36)" fg:x="65325581393" fg:w="16449090"/><text x="99.8762%" y="559.50"></text></g><g><title>alloc::slice::stable_sort (16,449,090 samples, 0.03%)</title><rect x="99.6262%" y="533" width="0.0251%" height="15" fill="rgb(216,153,54)" fg:x="65325581393" fg:w="16449090"/><text x="99.8762%" y="543.50"></text></g><g><title>core::slice::sort::stable::sort (16,449,090 samples, 0.03%)</title><rect x="99.6262%" y="517" width="0.0251%" height="15" fill="rgb(250,99,7)" fg:x="65325581393" fg:w="16449090"/><text x="99.8762%" y="527.50"></text></g><g><title>core::slice::sort::stable::driftsort_main (16,449,090 samples, 0.03%)</title><rect x="99.6262%" y="501" width="0.0251%" height="15" fill="rgb(207,56,50)" fg:x="65325581393" fg:w="16449090"/><text x="99.8762%" y="511.50"></text></g><g><title>core::slice::sort::stable::drift::sort (8,279,735 samples, 0.01%)</title><rect x="99.6386%" y="485" width="0.0126%" height="15" fill="rgb(244,61,34)" fg:x="65333750748" fg:w="8279735"/><text x="99.8886%" y="495.50"></text></g><g><title>core::slice::sort::stable::drift::stable_quicksort (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="469" width="0.0124%" height="15" fill="rgb(241,50,38)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="479.50"></text></g><g><title>core::slice::sort::stable::quicksort::quicksort (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="453" width="0.0124%" height="15" fill="rgb(212,166,30)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="463.50"></text></g><g><title>core::slice::sort::stable::quicksort::stable_partition (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="437" width="0.0124%" height="15" fill="rgb(249,127,32)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="447.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="421" width="0.0124%" height="15" fill="rgb(209,103,0)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::lt (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="405" width="0.0124%" height="15" fill="rgb(238,209,51)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="415.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::VoxelPlainIndex as core::cmp::PartialOrd&gt;::partial_cmp (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="389" width="0.0124%" height="15" fill="rgb(237,56,23)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (8,156,812 samples, 0.01%)</title><rect x="99.6388%" y="373" width="0.0124%" height="15" fill="rgb(215,153,46)" fg:x="65333873671" fg:w="8156812"/><text x="99.8888%" y="383.50"></text></g><g><title>cfree (8,107,075 samples, 0.01%)</title><rect x="99.6512%" y="549" width="0.0124%" height="15" fill="rgb(224,49,31)" fg:x="65342030483" fg:w="8107075"/><text x="99.9012%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="549" width="0.0249%" height="15" fill="rgb(250,18,42)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;cellular_raza_concepts::errors::IndexError&gt; (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="533" width="0.0249%" height="15" fill="rgb(215,176,39)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="517" width="0.0249%" height="15" fill="rgb(223,77,29)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="501" width="0.0249%" height="15" fill="rgb(234,94,52)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="485" width="0.0249%" height="15" fill="rgb(220,154,50)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="469" width="0.0249%" height="15" fill="rgb(212,11,10)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="453" width="0.0249%" height="15" fill="rgb(205,166,19)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="437" width="0.0249%" height="15" fill="rgb(244,198,16)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (16,296,034 samples, 0.02%)</title><rect x="99.6636%" y="421" width="0.0249%" height="15" fill="rgb(219,69,12)" fg:x="65350137558" fg:w="16296034"/><text x="99.9136%" y="431.50"></text></g><g><title>cfree (12,221,287 samples, 0.02%)</title><rect x="99.6698%" y="405" width="0.0186%" height="15" fill="rgb(245,30,7)" fg:x="65354212305" fg:w="12221287"/><text x="99.9198%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;cellular_raza_core::backend::chili::update_mechanics::ForceInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt;&gt;&gt; (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="549" width="0.0185%" height="15" fill="rgb(218,221,48)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="533" width="0.0185%" height="15" fill="rgb(216,66,15)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;cellular_raza_core::backend::chili::update_mechanics::ForceInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt;,alloc::alloc::Global&gt;&gt; (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="517" width="0.0185%" height="15" fill="rgb(226,122,50)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="501" width="0.0185%" height="15" fill="rgb(239,156,16)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;cellular_raza_core::backend::chili::update_mechanics::ForceInformation&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;,nalgebra::base::vec_storage::VecStorage&lt;f32,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;3_usize&gt;&gt;&gt;&gt;&gt;&gt; (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="485" width="0.0185%" height="15" fill="rgb(224,27,38)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="469" width="0.0185%" height="15" fill="rgb(224,39,27)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="453" width="0.0185%" height="15" fill="rgb(215,92,29)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="437" width="0.0185%" height="15" fill="rgb(207,159,16)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="421" width="0.0185%" height="15" fill="rgb(238,163,47)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="431.50"></text></g><g><title>cfree (12,159,364 samples, 0.02%)</title><rect x="99.6885%" y="405" width="0.0185%" height="15" fill="rgb(219,91,49)" fg:x="65366433592" fg:w="12159364"/><text x="99.9385%" y="415.50"></text></g><g><title>[libc.so.6] (8,185,223 samples, 0.01%)</title><rect x="99.6945%" y="389" width="0.0125%" height="15" fill="rgb(227,167,31)" fg:x="65370407733" fg:w="8185223"/><text x="99.9445%" y="399.50"></text></g><g><title>[libc.so.6] (8,185,223 samples, 0.01%)</title><rect x="99.6945%" y="373" width="0.0125%" height="15" fill="rgb(234,80,54)" fg:x="65370407733" fg:w="8185223"/><text x="99.9445%" y="383.50"></text></g><g><title>[libc.so.6] (8,185,223 samples, 0.01%)</title><rect x="99.6945%" y="357" width="0.0125%" height="15" fill="rgb(212,114,2)" fg:x="65370407733" fg:w="8185223"/><text x="99.9445%" y="367.50"></text></g><g><title>[libc.so.6] (8,185,223 samples, 0.01%)</title><rect x="99.6945%" y="341" width="0.0125%" height="15" fill="rgb(234,50,24)" fg:x="65370407733" fg:w="8185223"/><text x="99.9445%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (16,264,120 samples, 0.02%)</title><rect x="99.7193%" y="357" width="0.0248%" height="15" fill="rgb(221,68,8)" fg:x="65386661036" fg:w="16264120"/><text x="99.9693%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_or (16,264,120 samples, 0.02%)</title><rect x="99.7193%" y="341" width="0.0248%" height="15" fill="rgb(254,180,31)" fg:x="65386661036" fg:w="16264120"/><text x="99.9693%" y="351.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (20,369,635 samples, 0.03%)</title><rect x="99.7193%" y="373" width="0.0311%" height="15" fill="rgb(247,130,50)" fg:x="65386661020" fg:w="20369635"/><text x="99.9693%" y="383.50"></text></g><g><title>&lt;crossbeam_channel::channel::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,207,810 samples, 0.05%)</title><rect x="99.7070%" y="421" width="0.0506%" height="15" fill="rgb(211,109,4)" fg:x="65378592956" fg:w="33207810"/><text x="99.9570%" y="431.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (29,125,337 samples, 0.04%)</title><rect x="99.7132%" y="405" width="0.0444%" height="15" fill="rgb(238,50,21)" fg:x="65382675429" fg:w="29125337"/><text x="99.9632%" y="415.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (29,125,337 samples, 0.04%)</title><rect x="99.7132%" y="389" width="0.0444%" height="15" fill="rgb(225,57,45)" fg:x="65382675429" fg:w="29125337"/><text x="99.9632%" y="399.50"></text></g><g><title>[libc.so.6] (16,675,265 samples, 0.03%)</title><rect x="99.9115%" y="213" width="0.0254%" height="15" fill="rgb(209,196,50)" fg:x="65512706486" fg:w="16675265"/><text x="100.1615%" y="223.50"></text></g><g><title>[libc.so.6] (109,536,218 samples, 0.17%)</title><rect x="99.7699%" y="261" width="0.1671%" height="15" fill="rgb(242,140,13)" fg:x="65419845943" fg:w="109536218"/><text x="100.0199%" y="271.50"></text></g><g><title>[libc.so.6] (103,502,709 samples, 0.16%)</title><rect x="99.7791%" y="245" width="0.1578%" height="15" fill="rgb(217,111,7)" fg:x="65425879452" fg:w="103502709"/><text x="100.0291%" y="255.50"></text></g><g><title>[libc.so.6] (91,207,974 samples, 0.14%)</title><rect x="99.7979%" y="229" width="0.1391%" height="15" fill="rgb(253,193,51)" fg:x="65438174187" fg:w="91207974"/><text x="100.0479%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (150,789,634 samples, 0.23%)</title><rect x="99.7070%" y="453" width="0.2300%" height="15" fill="rgb(252,70,29)" fg:x="65378592956" fg:w="150789634"/><text x="99.9570%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (150,789,634 samples, 0.23%)</title><rect x="99.7070%" y="437" width="0.2300%" height="15" fill="rgb(232,127,12)" fg:x="65378592956" fg:w="150789634"/><text x="99.9570%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="421" width="0.1793%" height="15" fill="rgb(211,180,21)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="405" width="0.1793%" height="15" fill="rgb(229,72,13)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="389" width="0.1793%" height="15" fill="rgb(240,211,49)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="373" width="0.1793%" height="15" fill="rgb(219,149,40)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="357" width="0.1793%" height="15" fill="rgb(210,127,46)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="341" width="0.1793%" height="15" fill="rgb(220,106,7)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="325" width="0.1793%" height="15" fill="rgb(249,31,22)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="309" width="0.1793%" height="15" fill="rgb(253,1,49)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="319.50"></text></g><g><title>alloc::alloc::realloc (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="293" width="0.1793%" height="15" fill="rgb(227,144,33)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="303.50"></text></g><g><title>realloc (117,581,824 samples, 0.18%)</title><rect x="99.7576%" y="277" width="0.1793%" height="15" fill="rgb(249,163,44)" fg:x="65411800766" fg:w="117581824"/><text x="100.0076%" y="287.50"></text></g><g><title>[libc.so.6] (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="805" width="99.9370%" height="15" fill="rgb(234,15,39)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="815.50">[libc.so.6]</text></g><g><title>[libc.so.6] (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="789" width="99.9370%" height="15" fill="rgb(207,66,16)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="799.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="773" width="99.9370%" height="15" fill="rgb(233,112,24)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="783.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="757" width="99.9370%" height="15" fill="rgb(230,90,22)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="767.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="741" width="99.9370%" height="15" fill="rgb(229,61,13)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="725" width="99.9370%" height="15" fill="rgb(225,57,24)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="735.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="709" width="99.9370%" height="15" fill="rgb(208,169,48)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="719.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="693" width="99.9370%" height="15" fill="rgb(244,218,51)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="677" width="99.9370%" height="15" fill="rgb(214,148,10)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="661" width="99.9370%" height="15" fill="rgb(225,174,27)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="671.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="645" width="99.9370%" height="15" fill="rgb(230,96,26)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="655.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="629" width="99.9370%" height="15" fill="rgb(232,10,30)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="639.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (65,529,382,591 samples, 99.94%)</title><rect x="0.0000%" y="613" width="99.9370%" height="15" fill="rgb(222,8,50)" fg:x="0" fg:w="65529382591"/><text x="0.2500%" y="623.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>cr_mech_coli::simulation::run_simulation_with_agents::_{{closure}}::_{{closure}} (65,529,382,590 samples, 99.94%)</title><rect x="0.0000%" y="597" width="99.9370%" height="15" fill="rgb(213,81,27)" fg:x="1" fg:w="65529382590"/><text x="0.2500%" y="607.50">cr_mech_coli::simulation::run_simulation_with_agents::_{{closure}}::_{{closure}}</text></g><g><title>cr_mech_coli::simulation::run_simulation_with_agents::_{{closure}}::_{{closure}}::_{{closure}} (65,528,408,922 samples, 99.94%)</title><rect x="0.0015%" y="581" width="99.9355%" height="15" fill="rgb(245,50,10)" fg:x="973669" fg:w="65528408922"/><text x="0.2515%" y="591.50">cr_mech_coli::simulation::run_simulation_with_agents::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>cellular_raza_core::backend::chili::update_mechanics::&lt;impl cellular_raza_core::backend::chili::datastructures::SubDomainBox&lt;I,S,C,A,Com,Sy&gt;&gt;::update_mechanics_interaction_step_3 (634,857,625 samples, 0.97%)</title><rect x="98.9688%" y="565" width="0.9682%" height="15" fill="rgb(216,100,18)" fg:x="64894524966" fg:w="634857625"/><text x="99.2188%" y="575.50"></text></g><g><title>cr_mech_coli::simulation::_::&lt;impl cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,cellular_raza_core::backend::chili::update_mechanics::ForceInformation&lt;For&gt;&gt; for cr_mech_coli::simulation::_CrCommunicator&lt;I,Cel,Aux,Pos,Vel,For,Inf&gt;&gt;::receive (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="549" width="0.2300%" height="15" fill="rgb(236,147,54)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="559.50"></text></g><g><title>&lt;cellular_raza_core::backend::chili::simulation_flow::ChannelComm&lt;I,T&gt; as cellular_raza_core::backend::chili::simulation_flow::Communicator&lt;I,T&gt;&gt;::receive (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="533" width="0.2300%" height="15" fill="rgb(205,143,26)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="517" width="0.2300%" height="15" fill="rgb(236,26,9)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="501" width="0.2300%" height="15" fill="rgb(221,165,53)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="485" width="0.2300%" height="15" fill="rgb(214,110,17)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (150,789,635 samples, 0.23%)</title><rect x="99.7070%" y="469" width="0.2300%" height="15" fill="rgb(237,197,12)" fg:x="65378592956" fg:w="150789635"/><text x="99.9570%" y="479.50"></text></g><g><title>cellular_raza-w (65,558,312,239 samples, 99.98%)</title><rect x="0.0000%" y="821" width="99.9811%" height="15" fill="rgb(205,84,17)" fg:x="0" fg:w="65558312239"/><text x="0.2500%" y="831.50">cellular_raza-w</text></g><g><title>core::fmt::write (7,994,558 samples, 0.01%)</title><rect x="99.9689%" y="805" width="0.0122%" height="15" fill="rgb(237,18,45)" fg:x="65550317681" fg:w="7994558"/><text x="100.2189%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7,994,558 samples, 0.01%)</title><rect x="99.9689%" y="789" width="0.0122%" height="15" fill="rgb(221,87,14)" fg:x="65550317681" fg:w="7994558"/><text x="100.2189%" y="799.50"></text></g><g><title>all (65,570,715,068 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(238,186,15)" fg:x="0" fg:w="65570715068"/><text x="0.2500%" y="847.50"></text></g><g><title>crm_bench (12,402,829 samples, 0.02%)</title><rect x="99.9811%" y="821" width="0.0189%" height="15" fill="rgb(208,115,11)" fg:x="65558312239" fg:w="12402829"/><text x="100.2311%" y="831.50"></text></g><g><title>_start (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="805" width="0.0149%" height="15" fill="rgb(254,175,0)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="815.50"></text></g><g><title>__libc_start_main (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="789" width="0.0149%" height="15" fill="rgb(227,24,42)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="799.50"></text></g><g><title>[libc.so.6] (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="773" width="0.0149%" height="15" fill="rgb(223,211,37)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="783.50"></text></g><g><title>main (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="757" width="0.0149%" height="15" fill="rgb(235,49,27)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="767.50"></text></g><g><title>std::rt::lang_start_internal (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="741" width="0.0149%" height="15" fill="rgb(254,97,51)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="751.50"></text></g><g><title>std::panic::catch_unwind (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="725" width="0.0149%" height="15" fill="rgb(249,51,40)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="735.50"></text></g><g><title>std::panicking::try (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="709" width="0.0149%" height="15" fill="rgb(210,128,45)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="719.50"></text></g><g><title>std::panicking::try::do_call (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="693" width="0.0149%" height="15" fill="rgb(224,137,50)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="703.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="677" width="0.0149%" height="15" fill="rgb(242,15,9)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="687.50"></text></g><g><title>std::panic::catch_unwind (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="661" width="0.0149%" height="15" fill="rgb(233,187,41)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="671.50"></text></g><g><title>std::panicking::try (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="645" width="0.0149%" height="15" fill="rgb(227,2,29)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="655.50"></text></g><g><title>std::panicking::try::do_call (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="629" width="0.0149%" height="15" fill="rgb(222,70,3)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="613" width="0.0149%" height="15" fill="rgb(213,11,42)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="623.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="597" width="0.0149%" height="15" fill="rgb(225,150,9)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="607.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="581" width="0.0149%" height="15" fill="rgb(230,162,45)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="565" width="0.0149%" height="15" fill="rgb(222,14,52)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="575.50"></text></g><g><title>crm_bench::main (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="549" width="0.0149%" height="15" fill="rgb(254,198,14)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="559.50"></text></g><g><title>cr_mech_coli::simulation::run_simulation_with_agents (9,788,171 samples, 0.01%)</title><rect x="99.9851%" y="533" width="0.0149%" height="15" fill="rgb(220,217,30)" fg:x="65560926897" fg:w="9788171"/><text x="100.2351%" y="543.50"></text></g></svg></svg>